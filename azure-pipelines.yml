trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Development
  jobs:
  - job: BuildAndDeployDev
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'
    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'develop_env'

    - task: CopyFiles@2
      inputs:
        SourceFolder: $(Agent.TempDirectory)
        Contents: '**\develop_env'
        TargetFolder: $(Build.SourcesDirectory)

    - script: |
        echo "Current directory:"
        pwd
        echo "Listing files in current directory:"
        ls -al
        echo "Listing files in the secure file directory:"
        ls -al $(Agent.TempDirectory)
        echo "Renaming develop_env to .env"
        mv $(Build.SourcesDirectory)/develop_env $(Build.SourcesDirectory)/.env
      displayName: 'Rename develop_env to .env'

    - script: |
        npm install
        npm run build -- --configuration=development
      displayName: 'npm install and build for development'

    - task: CopyFiles@2
      inputs:
        contents: 'dist/**'
        targetFolder: '$(Build.ArtifactStagingDirectory)/dev'
      displayName: 'Copy files to staging directory'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/dev'
        artifactName: 'dev-drop'
      displayName: 'Publish Artifact for Development'

- stage: Staging
  jobs:
  - job: BuildAndDeployStaging
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'
    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'staging_env'

    - script: |
        mv staging_env .env
      displayName: 'Rename staging_env to .env'    
           
    - task: CopyFiles@2
      inputs:
        SourceFolder: $(Agent.TempDirectory)
        Contents: '**\.env'
        TargetFolder: $(Build.SourcesDirectory)

    - script: |
        npm install
        npm run build -- --configuration=staging
      displayName: 'npm install and build for staging'

    - task: CopyFiles@2
      inputs:
        contents: 'dist/**'
        targetFolder: '$(Build.ArtifactStagingDirectory)/staging'
      displayName: 'Copy files to staging directory'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/staging'
        artifactName: 'staging-drop'
      displayName: 'Publish Artifact for Staging'

- stage: Production
  jobs:
  - job: BuildAndDeployProd
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - task: DownloadSecureFile@1
      inputs:
        secureFile: 'production_env'
        
    - script: |
        mv production_env .env
      displayName: 'Rename production_env to .env'    
        
    - task: CopyFiles@2
      inputs:
        SourceFolder: $(Agent.TempDirectory)
        Contents: '**\.env'
        TargetFolder: $(Build.SourcesDirectory)
        
    - script: |
        npm install
        npm run build -- --configuration=production
      displayName: 'npm install and build for production'

    - task: CopyFiles@2
      inputs:
        contents: 'dist/**'
        targetFolder: '$(Build.ArtifactStagingDirectory)/prod'
      displayName: 'Copy files to staging directory'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/prod'
        artifactName: 'prod-drop'
      displayName: 'Publish Artifact for Production'