import { ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from "@angular/core";
import { BarChart, BarChartData, BarChartOptions, LineChart, LineChartData, LineChartOptions, PieChart, PieChartData, PieChartOptions, ResponsiveOptions } from "chartist";
import * as i0 from "@angular/core";
type ChartTypes = BarChart | LineChart | PieChart;
export interface BarChartConfiguration {
    type: "Bar";
    data: BarChartData;
    options?: BarChartOptions;
    responsiveOptions?: ResponsiveOptions<BarChartOptions>;
}
export interface LineChartConfiguration {
    type: "Line";
    data: LineChartData;
    options?: LineChartOptions;
    responsiveOptions?: ResponsiveOptions<LineChartOptions>;
}
export interface PieChartConfiguration {
    type: "Pie";
    data: PieChartData;
    options?: PieChartOptions;
    responsiveOptions?: ResponsiveOptions<PieChartOptions>;
}
export type Configuration = BarChartConfiguration | LineChartConfiguration | PieChartConfiguration;
/**
 * Represents chart events.
 */
export interface ChartEvent {
    [eventName: string]: (data: unknown) => void;
}
/**
 * Angular component which renders Chartist chart.
 *
 * See Chartist {@link https://gionkunz.github.io/chartist-js/api-documentation.html API documentation} and
 * {@link https://gionkunz.github.io/chartist-js/examples.html examples} for more information.
 * ### Example
 ```html
 <x-chartist
   [configuration]="configuration"
   [events]="events"
 ></x-chartist>
 ```
 */
export declare class ChartistComponent implements OnInit, OnChanges, OnDestroy {
    private elementRef;
    configuration: Configuration;
    /**
     * Events object where keys are Chartist event names and values are event handler functions.
     *
     * Supported events are: draw, optionsChanged, data, animationBegin, animationEnd, created.
     *
     * Event handler function will receive a data argument which contains event data.
     */
    events: ChartEvent;
    /**
     * Event emitted after Chartist chart has been initialized.
     *
     * Event handler function will receive chart instance argument.
     */
    initialized: EventEmitter<ChartTypes>;
    chart: ChartTypes;
    constructor(elementRef: ElementRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    renderChart(): void;
    update(changes: SimpleChanges): void;
    bindEvents(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ChartistComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ChartistComponent, "x-chartist", never, { "configuration": { "alias": "configuration"; "required": false; }; "events": { "alias": "events"; "required": false; }; }, { "initialized": "initialized"; }, never, never, false, never>;
}
export {};
