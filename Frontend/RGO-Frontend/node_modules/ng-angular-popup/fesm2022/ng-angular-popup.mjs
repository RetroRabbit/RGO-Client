import * as i0 from '@angular/core';
import { Injectable, Component, Input, NgModule } from '@angular/core';
import { Subject } from 'rxjs';
import * as i2 from '@angular/common';
import { CommonModule } from '@angular/common';

var Position;
(function (Position) {
    Position["topRight"] = "tr";
    Position["topLeft"] = "tl";
    Position["topCenter"] = "tc";
    Position["bottomRight"] = "br";
    Position["bottomLeft"] = "bl";
    Position["botomCenter"] = "bc";
})(Position || (Position = {}));
var Message;
(function (Message) {
    Message["error"] = "error";
    Message["success"] = "success";
    Message["warning"] = "warning";
    Message["info"] = "info";
})(Message || (Message = {}));

class NgToastService {
    constructor() {
        this.toastDetails$ = new Subject();
    }
    getToastDetails() {
        return this.toastDetails$.asObservable();
    }
    success(message) {
        this.toastDetails$.next({ type: Message.success, detail: message.detail, position: message.position, summary: message.summary, duration: message.duration, sticky: message.sticky });
    }
    error(message) {
        this.toastDetails$.next({ type: Message.error, detail: message.detail, position: message.position, summary: message.summary, duration: message.duration, sticky: message.sticky });
    }
    info(message) {
        this.toastDetails$.next({ type: Message.info, detail: message.detail, position: message.position, summary: message.summary, duration: message.duration, sticky: message.sticky });
    }
    warning(message) {
        this.toastDetails$.next({ type: Message.warning, detail: message.detail, summary: message.summary, position: message.position, duration: message.duration, sticky: message.sticky });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.1", ngImport: i0, type: NgToastService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.1.1", ngImport: i0, type: NgToastService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.1", ngImport: i0, type: NgToastService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return []; } });

class NgToastComponent {
    constructor(toastService) {
        this.toastService = toastService;
        this.show = false;
        this.style = {};
    }
    ngOnInit() {
        this.toastService.getToastDetails().subscribe((val) => {
            this.show = true;
            clearTimeout(this.timeoutRef);
            this.toastDetails = val;
            if (this.toastDetails.duration) {
                this.timeoutRef = setTimeout(() => {
                    this.show = false;
                }, this.toastDetails.duration);
            }
            if (this.toastDetails.sticky) { // for sticky
                clearTimeout(this.timeoutRef);
                this.show = true;
            }
            if (!this.toastDetails.duration && !this.toastDetails.sticky) { //no duration and sticky is true
                this.timeoutRef = setTimeout(() => {
                    this.show = false;
                }, 4000);
            }
        });
    }
    closeToast() {
        clearTimeout(this.timeoutRef);
        this.show = false;
    }
    loadPosition() {
        let postionClass = "";
        if (this.toastDetails?.position !== undefined) {
            switch (this.toastDetails.position) {
                case "topRight":
                    postionClass = 'toast-top-right';
                    break;
                case "topLeft":
                    postionClass = 'toast-top-left';
                    break;
                case "bottomRight":
                    postionClass = 'toast-bottom-right';
                    break;
                case "bottomLeft":
                    postionClass = 'toast-bottom-left';
                    break;
                case "topCenter":
                    postionClass = 'toast-top-center';
                    break;
                case "botomCenter":
                    postionClass = 'toast-bottom-center';
                    break;
                default: postionClass = "toast-top-right";
            }
        }
        else {
            postionClass = "toast-top-right";
        }
        return postionClass;
    }
    loadMessageType() {
        let typeClass = "";
        if (this.toastDetails?.type !== undefined) {
            switch (this.toastDetails.type) {
                case "success":
                    typeClass = Message.success;
                    break;
                case "error":
                    typeClass = Message.error;
                    break;
                case "warning":
                    typeClass = Message.warning;
                    break;
                case "info":
                    typeClass = Message.info;
                    break;
                default: typeClass = Message.success;
            }
        }
        else {
            typeClass = Message.success;
        }
        return typeClass;
    }
    loadIconType() {
        let iconClass = "";
        if (this.toastDetails?.type !== undefined) {
            switch (this.toastDetails.type) {
                case "success":
                    iconClass = 'fa-check-circle';
                    break;
                case "error":
                    iconClass = 'fa-times-circle';
                    break;
                case "warning":
                    iconClass = 'fa-exclamation-circle';
                    break;
                case "info":
                    iconClass = 'fa-info-circle';
                    break;
                default: iconClass = "fa-check-circle";
            }
        }
        else {
            iconClass = "fa-check-circle";
        }
        return iconClass;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.1", ngImport: i0, type: NgToastComponent, deps: [{ token: NgToastService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.1.1", type: NgToastComponent, selector: "ng-toast", inputs: { style: "style" }, ngImport: i0, template: "\n<div class=\"toast-container\" [ngClass]=\"loadPosition()\" [class.active]=\"show\">\n  <div [ngStyle]=\"style\" class=\"ng-toast\" [ngClass]=\"loadMessageType()\">\n    <div class=\"container-1\">\n      <i class=\"fa\" [ngClass]=\"loadIconType()\"></i>\n    </div>\n    <div class=\"container-2\">\n      <p>{{ toastDetails?.detail }}</p>\n      <p>{{ toastDetails?.summary }}</p>\n    </div>\n    <button *ngIf=\"show\" id=\"close\" (click)=\"closeToast()\">&times;</button>\n  </div>\n</div>\n", styles: ["*{padding:0;margin:0;box-sizing:border-box;border:none}.show-toast{margin:10px;background-color:#101020;color:#fff;padding:20px;border-radius:5px;cursor:pointer}.fa-times-circle{color:#ff355b}.fa-check-circle{color:#47d764}.fa-exclamation-circle{color:#ffc021}.fa-info-circle{color:#2f86eb}.container-1{margin:7px 0 7px 7px;display:flex}.container-1 i{font-size:30px}.container-2{display:flex;flex-direction:column;margin-left:4px;font-family:roboto,sans-serif}.container-2 p:first-child{display:flex;flex-direction:column;margin-left:5px;font-weight:700;font-size:.9rem;font-family:roboto,sans-serif}.container-2 p:last-child{font-size:14px;color:#656565;font-weight:400;font-family:roboto,sans-serif;margin-left:5px}#close{align-self:flex-start;background-color:transparent;font-size:25px;line-height:0;color:#656565;cursor:pointer}.toast-container{pointer-events:none;position:fixed;z-index:999999}.toast-top-center{top:5%;right:0;width:100%;transform:translateY(-400px);transition:.5s}.toast-top-center.active{transform:translate(0);transition:.5s}.toast-bottom-center{bottom:5%;right:0;width:100%;transform:translateY(400px);transition:.5s}.toast-bottom-center.active{transform:translate(0);transition:.5s}.toast-top-right{right:1%;top:5%;transform:translate(400px);transition:.5s}.toast-top-right.active{transform:translate(0);transition:.5s}.toast-bottom-right{right:1%;bottom:5%;transform:translate(400px);transition:.5s}.toast-bottom-right.active{transform:translate(0);transition:.5s}.toast-top-left{left:1%;top:5%;transform:translate(-400px);transition:.5s}.toast-top-left.active{transform:translate(0);transition:.5s}.toast-bottom-left{left:1%;bottom:5%;transform:translate(-400px);transition:.5s}.toast-bottom-left.active{transform:translate(0);transition:.5s}.toast-container.toast-top-center .ng-toast,.toast-container.toast-bottom-center .ng-toast{width:350px;margin-left:auto;margin-right:auto}.ng-toast{width:350px;height:auto;font-size:1rem;padding:10px;box-shadow:0 10px 20px #4b32320d;border-radius:7px;display:grid;grid-template-columns:1.2fr 6fr .5fr;pointer-events:auto}.ng-toast.error{border-left:8px solid #ff355b;background-color:#ffe7e6}.ng-toast.warning{border-left:8px solid #ffc021;background-color:#fff2e2}.ng-toast.success{border-left:8px solid #47d764;background-color:#e4f8f0}.ng-toast.info{border-left:8px solid #2f86eb;background-color:#e9e9ff}\n"], dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.1", ngImport: i0, type: NgToastComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ng-toast', template: "\n<div class=\"toast-container\" [ngClass]=\"loadPosition()\" [class.active]=\"show\">\n  <div [ngStyle]=\"style\" class=\"ng-toast\" [ngClass]=\"loadMessageType()\">\n    <div class=\"container-1\">\n      <i class=\"fa\" [ngClass]=\"loadIconType()\"></i>\n    </div>\n    <div class=\"container-2\">\n      <p>{{ toastDetails?.detail }}</p>\n      <p>{{ toastDetails?.summary }}</p>\n    </div>\n    <button *ngIf=\"show\" id=\"close\" (click)=\"closeToast()\">&times;</button>\n  </div>\n</div>\n", styles: ["*{padding:0;margin:0;box-sizing:border-box;border:none}.show-toast{margin:10px;background-color:#101020;color:#fff;padding:20px;border-radius:5px;cursor:pointer}.fa-times-circle{color:#ff355b}.fa-check-circle{color:#47d764}.fa-exclamation-circle{color:#ffc021}.fa-info-circle{color:#2f86eb}.container-1{margin:7px 0 7px 7px;display:flex}.container-1 i{font-size:30px}.container-2{display:flex;flex-direction:column;margin-left:4px;font-family:roboto,sans-serif}.container-2 p:first-child{display:flex;flex-direction:column;margin-left:5px;font-weight:700;font-size:.9rem;font-family:roboto,sans-serif}.container-2 p:last-child{font-size:14px;color:#656565;font-weight:400;font-family:roboto,sans-serif;margin-left:5px}#close{align-self:flex-start;background-color:transparent;font-size:25px;line-height:0;color:#656565;cursor:pointer}.toast-container{pointer-events:none;position:fixed;z-index:999999}.toast-top-center{top:5%;right:0;width:100%;transform:translateY(-400px);transition:.5s}.toast-top-center.active{transform:translate(0);transition:.5s}.toast-bottom-center{bottom:5%;right:0;width:100%;transform:translateY(400px);transition:.5s}.toast-bottom-center.active{transform:translate(0);transition:.5s}.toast-top-right{right:1%;top:5%;transform:translate(400px);transition:.5s}.toast-top-right.active{transform:translate(0);transition:.5s}.toast-bottom-right{right:1%;bottom:5%;transform:translate(400px);transition:.5s}.toast-bottom-right.active{transform:translate(0);transition:.5s}.toast-top-left{left:1%;top:5%;transform:translate(-400px);transition:.5s}.toast-top-left.active{transform:translate(0);transition:.5s}.toast-bottom-left{left:1%;bottom:5%;transform:translate(-400px);transition:.5s}.toast-bottom-left.active{transform:translate(0);transition:.5s}.toast-container.toast-top-center .ng-toast,.toast-container.toast-bottom-center .ng-toast{width:350px;margin-left:auto;margin-right:auto}.ng-toast{width:350px;height:auto;font-size:1rem;padding:10px;box-shadow:0 10px 20px #4b32320d;border-radius:7px;display:grid;grid-template-columns:1.2fr 6fr .5fr;pointer-events:auto}.ng-toast.error{border-left:8px solid #ff355b;background-color:#ffe7e6}.ng-toast.warning{border-left:8px solid #ffc021;background-color:#fff2e2}.ng-toast.success{border-left:8px solid #47d764;background-color:#e4f8f0}.ng-toast.info{border-left:8px solid #2f86eb;background-color:#e9e9ff}\n"] }]
        }], ctorParameters: function () { return [{ type: NgToastService }]; }, propDecorators: { style: [{
                type: Input
            }] } });

class NgToastModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.1", ngImport: i0, type: NgToastModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.1.1", ngImport: i0, type: NgToastModule, declarations: [NgToastComponent], imports: [CommonModule], exports: [NgToastComponent] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.1.1", ngImport: i0, type: NgToastModule, imports: [CommonModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.1", ngImport: i0, type: NgToastModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        NgToastComponent
                    ],
                    imports: [
                        CommonModule,
                    ],
                    exports: [
                        NgToastComponent,
                    ]
                }]
        }] });

/*
 * Public API Surface of ng-toast
 */

/**
 * Generated bundle index. Do not edit.
 */

export { NgToastComponent, NgToastModule, NgToastService };
//# sourceMappingURL=ng-angular-popup.mjs.map
