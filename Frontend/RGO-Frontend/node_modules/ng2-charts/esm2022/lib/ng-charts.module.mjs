import { Injectable, NgModule, Optional, } from '@angular/core';
import { BaseChartDirective } from './base-chart.directive';
import { Chart, registerables, defaults, } from 'chart.js';
import { merge } from 'lodash-es';
import { builtInDefaults } from './get-colors';
import * as i0 from "@angular/core";
export class NgChartsConfiguration {
    constructor() {
        this.generateColors = true;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.0", ngImport: i0, type: NgChartsConfiguration, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.0", ngImport: i0, type: NgChartsConfiguration, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.0", ngImport: i0, type: NgChartsConfiguration, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }] });
Chart.register(...registerables);
export class NgChartsModule {
    constructor(config) {
        if (config?.plugins)
            Chart.register(...config.plugins);
        const ngChartsDefaults = merge(config?.generateColors ? builtInDefaults : {}, config?.defaults || {});
        defaults.set(ngChartsDefaults);
    }
    static forRoot(config) {
        return {
            ngModule: NgChartsModule,
            providers: [{ provide: NgChartsConfiguration, useValue: config }],
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.0", ngImport: i0, type: NgChartsModule, deps: [{ token: NgChartsConfiguration, optional: true }], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.0", ngImport: i0, type: NgChartsModule, declarations: [BaseChartDirective], exports: [BaseChartDirective] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.0", ngImport: i0, type: NgChartsModule }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.0", ngImport: i0, type: NgChartsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [],
                    declarations: [BaseChartDirective],
                    exports: [BaseChartDirective],
                }]
        }], ctorParameters: function () { return [{ type: NgChartsConfiguration, decorators: [{
                    type: Optional
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctY2hhcnRzLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvbmcyLWNoYXJ0cy9zcmMvbGliL25nLWNoYXJ0cy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFVBQVUsRUFFVixRQUFRLEVBQ1IsUUFBUSxHQUNULE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFDTCxLQUFLLEVBQ0wsYUFBYSxFQUdiLFFBQVEsR0FDVCxNQUFNLFVBQVUsQ0FBQztBQUNsQixPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxjQUFjLENBQUM7O0FBRy9DLE1BQU0sT0FBTyxxQkFBcUI7SUFEbEM7UUFJUyxtQkFBYyxHQUFHLElBQUksQ0FBQztLQUM5Qjs4R0FKWSxxQkFBcUI7a0hBQXJCLHFCQUFxQixjQURSLE1BQU07OzJGQUNuQixxQkFBcUI7a0JBRGpDLFVBQVU7bUJBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFOztBQU9sQyxLQUFLLENBQUMsUUFBUSxDQUFDLEdBQUcsYUFBYSxDQUFDLENBQUM7QUFPakMsTUFBTSxPQUFPLGNBQWM7SUFDekIsWUFBd0IsTUFBOEI7UUFDcEQsSUFBSSxNQUFNLEVBQUUsT0FBTztZQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFdkQsTUFBTSxnQkFBZ0IsR0FBRyxLQUFLLENBQzVCLE1BQU0sRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUM3QyxNQUFNLEVBQUUsUUFBUSxJQUFJLEVBQUUsQ0FDdkIsQ0FBQztRQUVGLFFBQVEsQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRU0sTUFBTSxDQUFDLE9BQU8sQ0FDbkIsTUFBOEI7UUFFOUIsT0FBTztZQUNMLFFBQVEsRUFBRSxjQUFjO1lBQ3hCLFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsQ0FBQztTQUNsRSxDQUFDO0lBQ0osQ0FBQzs4R0FuQlUsY0FBYzsrR0FBZCxjQUFjLGlCQUhWLGtCQUFrQixhQUN2QixrQkFBa0I7K0dBRWpCLGNBQWM7OzJGQUFkLGNBQWM7a0JBTDFCLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFFLEVBQUU7b0JBQ1gsWUFBWSxFQUFFLENBQUMsa0JBQWtCLENBQUM7b0JBQ2xDLE9BQU8sRUFBRSxDQUFDLGtCQUFrQixDQUFDO2lCQUM5Qjs7MEJBRWMsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEluamVjdGFibGUsXG4gIE1vZHVsZVdpdGhQcm92aWRlcnMsXG4gIE5nTW9kdWxlLFxuICBPcHRpb25hbCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlQ2hhcnREaXJlY3RpdmUgfSBmcm9tICcuL2Jhc2UtY2hhcnQuZGlyZWN0aXZlJztcbmltcG9ydCB7XG4gIENoYXJ0LFxuICByZWdpc3RlcmFibGVzLFxuICBDaGFydENvbXBvbmVudExpa2UsXG4gIERlZmF1bHRzLFxuICBkZWZhdWx0cyxcbn0gZnJvbSAnY2hhcnQuanMnO1xuaW1wb3J0IHsgbWVyZ2UgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgYnVpbHRJbkRlZmF1bHRzIH0gZnJvbSAnLi9nZXQtY29sb3JzJztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBOZ0NoYXJ0c0NvbmZpZ3VyYXRpb24ge1xuICBwdWJsaWMgcGx1Z2lucz86IENoYXJ0Q29tcG9uZW50TGlrZVtdO1xuICBwdWJsaWMgZGVmYXVsdHM/OiBQYXJ0aWFsPERlZmF1bHRzPjtcbiAgcHVibGljIGdlbmVyYXRlQ29sb3JzID0gdHJ1ZTtcbn1cblxuQ2hhcnQucmVnaXN0ZXIoLi4ucmVnaXN0ZXJhYmxlcyk7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtdLFxuICBkZWNsYXJhdGlvbnM6IFtCYXNlQ2hhcnREaXJlY3RpdmVdLFxuICBleHBvcnRzOiBbQmFzZUNoYXJ0RGlyZWN0aXZlXSxcbn0pXG5leHBvcnQgY2xhc3MgTmdDaGFydHNNb2R1bGUge1xuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBjb25maWc/OiBOZ0NoYXJ0c0NvbmZpZ3VyYXRpb24pIHtcbiAgICBpZiAoY29uZmlnPy5wbHVnaW5zKSBDaGFydC5yZWdpc3RlciguLi5jb25maWcucGx1Z2lucyk7XG5cbiAgICBjb25zdCBuZ0NoYXJ0c0RlZmF1bHRzID0gbWVyZ2UoXG4gICAgICBjb25maWc/LmdlbmVyYXRlQ29sb3JzID8gYnVpbHRJbkRlZmF1bHRzIDoge30sXG4gICAgICBjb25maWc/LmRlZmF1bHRzIHx8IHt9XG4gICAgKTtcblxuICAgIGRlZmF1bHRzLnNldChuZ0NoYXJ0c0RlZmF1bHRzKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgZm9yUm9vdChcbiAgICBjb25maWc/OiBOZ0NoYXJ0c0NvbmZpZ3VyYXRpb25cbiAgKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ0NoYXJ0c01vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmdDaGFydHNNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFt7IHByb3ZpZGU6IE5nQ2hhcnRzQ29uZmlndXJhdGlvbiwgdXNlVmFsdWU6IGNvbmZpZyB9XSxcbiAgICB9O1xuICB9XG59XG4iXX0=