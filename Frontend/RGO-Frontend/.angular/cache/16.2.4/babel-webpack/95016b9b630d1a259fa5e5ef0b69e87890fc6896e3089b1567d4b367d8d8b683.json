{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/charts.service\";\nimport * as i2 from \"ng-angular-popup\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-cookie-service\";\nfunction CreateChartsComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r1);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    data: a0,\n    label: a1\n  };\n};\nconst _c1 = function (a0) {\n  return [a0];\n};\nexport class CreateChartsComponent {\n  constructor(ChartService, toast, router, cookieService) {\n    this.ChartService = ChartService;\n    this.toast = toast;\n    this.router = router;\n    this.cookieService = cookieService;\n    this.selectedItem = new EventEmitter();\n    this.chartName = 'Name';\n    this.chartDataItem = 'Gender';\n    this.chartType = 'bar';\n    this.chartData = [];\n    this.chartLabels = [];\n    this.chartOptions = {\n      responsive: true,\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    };\n    this.columns = [];\n  }\n  ngOnInit() {\n    this.getChartData();\n    this.ChartService.getColumns().subscribe(options => {\n      this.columns = options;\n    });\n  }\n  createChart() {\n    this.ChartService.createChart(this.chartDataItem, this.chartName, this.chartType).subscribe(response => {\n      this.toast.success({\n        detail: \"Success\",\n        summary: 'Chart created',\n        duration: 5000,\n        position: 'topRight'\n      });\n      this.cookieService.set('currentPage', \"Charts\");\n    }, error => {\n      this.toast.error({\n        detail: \"Error\",\n        summary: \"Failed to create chart.\",\n        duration: 5000,\n        position: 'topRight'\n      });\n    });\n  }\n  getChartData() {\n    this.ChartService.getChartDataByType(this.chartDataItem).subscribe(data => {\n      this.chartData = data.data;\n      this.chartLabels = data.labels;\n    }, error => {\n      this.toast.error({\n        detail: \"Error\",\n        summary: \"Failed to get chartData.\",\n        duration: 5000,\n        position: 'topRight'\n      });\n    });\n  }\n  onDropDownChange() {\n    this.ChartService.getChartDataByType(this.chartDataItem).subscribe(data => {\n      this.chartData = data.data;\n      this.chartLabels = data.labels;\n    }, error => {\n      this.toast.error({\n        detail: \"Error\",\n        summary: \"Failed to get chartData.\",\n        duration: 5000,\n        position: 'topRight'\n      });\n    });\n  }\n  CaptureEvent(event) {\n    const target = event.target;\n    this.cookieService.set('currentPage', target.innerText);\n  }\n  static #_ = this.ɵfac = function CreateChartsComponent_Factory(t) {\n    return new (t || CreateChartsComponent)(i0.ɵɵdirectiveInject(i1.ChartService), i0.ɵɵdirectiveInject(i2.NgToastService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CookieService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateChartsComponent,\n    selectors: [[\"app-create-charts\"]],\n    outputs: {\n      selectedItem: \"selectedItem\"\n    },\n    decls: 28,\n    vars: 13,\n    consts: [[1, \"container\"], [1, \"chart-form\"], [\"for\", \"chartType\"], [\"id\", \"chartType\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"bar\"], [\"value\", \"line\"], [\"value\", \"pie\"], [\"value\", \"doughnut\"], [\"for\", \"chartData\"], [\"type\", \"text\", \"id\", \"chartData\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"chartData\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"chart-container\"], [\"baseChart\", \"\", 3, \"datasets\", \"labels\", \"type\", \"options\"], [1, \"create-button\", 3, \"click\"], [3, \"value\"]],\n    template: function CreateChartsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Create a Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Chart Type:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateChartsComponent_Template_select_ngModelChange_6_listener($event) {\n          return ctx.chartType = $event;\n        });\n        i0.ɵɵelementStart(7, \"option\", 4);\n        i0.ɵɵtext(8, \"Bar Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"option\", 5);\n        i0.ɵɵtext(10, \"Line Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"option\", 6);\n        i0.ɵɵtext(12, \"Pie Chart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"option\", 7);\n        i0.ɵɵtext(14, \"Doughnut\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 8);\n        i0.ɵɵtext(17, \"Chart Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateChartsComponent_Template_input_ngModelChange_18_listener($event) {\n          return ctx.chartName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"div\", 1)(20, \"label\", 8);\n        i0.ɵɵtext(21, \"Chart Data Item:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"select\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateChartsComponent_Template_select_ngModelChange_22_listener($event) {\n          return ctx.chartDataItem = $event;\n        })(\"change\", function CreateChartsComponent_Template_select_change_22_listener() {\n          return ctx.onDropDownChange();\n        });\n        i0.ɵɵtemplate(23, CreateChartsComponent_option_23_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 12);\n        i0.ɵɵelement(25, \"canvas\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function CreateChartsComponent_Template_button_click_26_listener() {\n          return ctx.createChart();\n        });\n        i0.ɵɵtext(27, \"Create Chart\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.chartType);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.chartName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.chartDataItem);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.columns);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"datasets\", i0.ɵɵpureFunction1(11, _c1, i0.ɵɵpureFunction2(8, _c0, ctx.chartData, ctx.chartName)))(\"labels\", ctx.chartLabels)(\"type\", ctx.chartType)(\"options\", ctx.chartOptions);\n      }\n    },\n    styles: [\".chart-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: left;\\n    padding: 20px;\\n    \\n  }\\n\\n  .container[_ngcontent-%COMP%] {\\n    background-color: #fff; \\n    margin: 0 auto; \\n    padding: 20px; \\n    border-radius: 8px; \\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); \\n    width: min-content;\\n}\\n\\n  \\n  .chart-form[_ngcontent-%COMP%] {\\n    background-color: #f0f0f0;\\n    padding: 20px;\\n    border-radius: 5px;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\\n    margin-bottom: 20px;\\n    width: max-content;\\n    \\n  }\\n  \\n  .chart-form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n  }\\n  \\n  .chart-form[_ngcontent-%COMP%]   select[_ngcontent-%COMP%], .chart-form[_ngcontent-%COMP%]   input[type=\\\"text\\\"][_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    margin: 8px 0;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n  }\\n  \\n  .chart-button[_ngcontent-%COMP%] {\\n    background-color: #007bff;\\n    color: #fff;\\n    border: none;\\n    border-radius: 4px;\\n    padding: 10px 20px;\\n    cursor: pointer;\\n    font-weight: bold;\\n  }\\n  \\n  .chart-button[_ngcontent-%COMP%]:hover {\\n    background-color: #0056b3;\\n  }\\n  \\n  .chart-container[_ngcontent-%COMP%]{\\n    max-width: 500px;\\n    max-height: 500px;\\n  }\\n  .chart-container[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%] {\\n    max-width: -moz-fit-content;\\n    max-width: fit-content;\\n    height: -moz-fit-content;\\n    height: fit-content;\\n  }\\n  \\n  .edit-button[_ngcontent-%COMP%], .create-button[_ngcontent-%COMP%], .save-button[_ngcontent-%COMP%], .cancel-button[_ngcontent-%COMP%] {\\n    background-color: #48a648;\\n    color: white;\\n    border: none;\\n    padding: 8px 16px;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    transition: background-color 0.3s;\\n    margin-left: 40%;\\n}\\n\\n.edit-button[_ngcontent-%COMP%]:hover, .create-button[_ngcontent-%COMP%], .save-button[_ngcontent-%COMP%]:hover, .cancel-button[_ngcontent-%COMP%]:hover {\\n    background-color: #397f39;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n    margin-left: 25%;\\n}\\n\\n  @media screen and (min-width: 768px) {\\n    .chart-container[_ngcontent-%COMP%] {\\n      flex-direction: row;\\n      justify-content: space-between;\\n    }\\n    \\n    .chart-form[_ngcontent-%COMP%] {\\n      flex: 0 1 45%;\\n    }\\n  \\n    .chart-container[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%] {\\n      flex: 0 1 45%;\\n      height: 400px;\\n    }\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUtY2hhcnRzL2NyZWF0ZS1jaGFydHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsaUJBQWlCO0lBQ2pCLGFBQWE7O0VBRWY7O0VBRUE7SUFDRSxzQkFBc0I7SUFDdEIsY0FBYztJQUNkLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsd0NBQXdDO0lBQ3hDLGtCQUFrQjtBQUN0Qjs7O0VBR0U7SUFDRSx5QkFBeUI7SUFDekIsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQix1Q0FBdUM7SUFDdkMsbUJBQW1CO0lBQ25CLGtCQUFrQjs7RUFFcEI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7O0lBRUUsV0FBVztJQUNYLGFBQWE7SUFDYixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsV0FBVztJQUNYLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7O0VBRUE7SUFDRSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0VBQ25CO0VBQ0E7SUFDRSwyQkFBc0I7SUFBdEIsc0JBQXNCO0lBQ3RCLHdCQUFtQjtJQUFuQixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixpQ0FBaUM7SUFDakMsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztFQUVFO0lBQ0U7TUFDRSxtQkFBbUI7TUFDbkIsOEJBQThCO0lBQ2hDOztJQUVBO01BQ0UsYUFBYTtJQUNmOztJQUVBO01BQ0UsYUFBYTtNQUNiLGFBQWE7SUFDZjtFQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXJ0LWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBsZWZ0O1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIFxyXG4gIH1cclxuXHJcbiAgLmNvbnRhaW5lciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyBcclxuICAgIG1hcmdpbjogMCBhdXRvOyBcclxuICAgIHBhZGRpbmc6IDIwcHg7IFxyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4OyBcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMSk7IFxyXG4gICAgd2lkdGg6IG1pbi1jb250ZW50O1xyXG59XHJcblxyXG4gIFxyXG4gIC5jaGFydC1mb3JtIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIHdpZHRoOiBtYXgtY29udGVudDtcclxuICAgIFxyXG4gIH1cclxuICBcclxuICAuY2hhcnQtZm9ybSBsYWJlbCB7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgXHJcbiAgLmNoYXJ0LWZvcm0gc2VsZWN0LFxyXG4gIC5jaGFydC1mb3JtIGlucHV0W3R5cGU9XCJ0ZXh0XCJdIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIG1hcmdpbjogOHB4IDA7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICB9XHJcbiAgXHJcbiAgLmNoYXJ0LWJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgXHJcbiAgLmNoYXJ0LWJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xyXG4gIH1cclxuICBcclxuICAuY2hhcnQtY29udGFpbmVye1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIG1heC1oZWlnaHQ6IDUwMHB4O1xyXG4gIH1cclxuICAuY2hhcnQtY29udGFpbmVyIGNhbnZhcyB7XHJcbiAgICBtYXgtd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgaGVpZ2h0OiBmaXQtY29udGVudDtcclxuICB9XHJcbiAgXHJcbiAgLmVkaXQtYnV0dG9uLC5jcmVhdGUtYnV0dG9uICwuc2F2ZS1idXR0b24sIC5jYW5jZWwtYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0OGE2NDg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiA4cHggMTZweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcztcclxuICAgIG1hcmdpbi1sZWZ0OiA0MCU7XHJcbn1cclxuXHJcbi5lZGl0LWJ1dHRvbjpob3ZlciwuY3JlYXRlLWJ1dHRvbiwgLnNhdmUtYnV0dG9uOmhvdmVyLCAuY2FuY2VsLWJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzk3ZjM5O1xyXG59XHJcblxyXG5oMiB7XHJcbiAgICBtYXJnaW4tbGVmdDogMjUlO1xyXG59XHJcblxyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcbiAgICAuY2hhcnQtY29udGFpbmVyIHtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAuY2hhcnQtZm9ybSB7XHJcbiAgICAgIGZsZXg6IDAgMSA0NSU7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAuY2hhcnQtY29udGFpbmVyIGNhbnZhcyB7XHJcbiAgICAgIGZsZXg6IDAgMSA0NSU7XHJcbiAgICAgIGhlaWdodDogNDAwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","option_r1","ɵɵadvance","ɵɵtextInterpolate","CreateChartsComponent","constructor","ChartService","toast","router","cookieService","selectedItem","chartName","chartDataItem","chartType","chartData","chartLabels","chartOptions","responsive","scales","y","beginAtZero","columns","ngOnInit","getChartData","getColumns","subscribe","options","createChart","response","success","detail","summary","duration","position","set","error","getChartDataByType","data","labels","onDropDownChange","CaptureEvent","event","target","innerText","_","ɵɵdirectiveInject","i1","i2","NgToastService","i3","Router","i4","CookieService","_2","selectors","outputs","decls","vars","consts","template","CreateChartsComponent_Template","rf","ctx","ɵɵlistener","CreateChartsComponent_Template_select_ngModelChange_6_listener","$event","CreateChartsComponent_Template_input_ngModelChange_18_listener","CreateChartsComponent_Template_select_ngModelChange_22_listener","CreateChartsComponent_Template_select_change_22_listener","ɵɵtemplate","CreateChartsComponent_option_23_Template","ɵɵelement","CreateChartsComponent_Template_button_click_26_listener","ɵɵpureFunction1","_c1","ɵɵpureFunction2","_c0"],"sources":["C:\\Users\\HP\\Desktop\\GOP\\RGO-Client\\Frontend\\RGO-Frontend\\src\\app\\components\\create-charts\\create-charts.component.ts","C:\\Users\\HP\\Desktop\\GOP\\RGO-Client\\Frontend\\RGO-Frontend\\src\\app\\components\\create-charts\\create-charts.component.html"],"sourcesContent":["import { Component,Output, EventEmitter } from '@angular/core';\r\nimport { ChartService } from 'src/app/services/charts.service';\r\nimport { NgToastService } from 'ng-angular-popup';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-charts',\r\n  templateUrl: './create-charts.component.html',\r\n  styleUrls: ['./create-charts.component.css']\r\n})\r\nexport class CreateChartsComponent {\r\n\r\n  @Output() selectedItem = new EventEmitter<{ selectedPage: string }>();\r\n  \r\n  chartName: string = 'Name';\r\n  chartDataItem: string = 'Gender';\r\n  chartType: any = 'bar';\r\n  chartData: number[] = [];\r\n  chartLabels: string[] = [];\r\n  chartOptions: any = {\r\n    responsive: true,\r\n    scales: { y: { beginAtZero: true } }\r\n  };\r\n  columns: string[] = [];\r\n\r\n  constructor(private ChartService: ChartService,private toast: NgToastService, private router: Router,private cookieService: CookieService) {}\r\n\r\n  ngOnInit() :void{\r\n    this.getChartData();\r\n    this.ChartService.getColumns().subscribe(options => {\r\n      this.columns = options;\r\n    });\r\n  }\r\n\r\n  createChart() {\r\n    this.ChartService.createChart(this.chartDataItem, this.chartName, this.chartType)\r\n      .subscribe(\r\n        (response) => {\r\n          this.toast.success({detail:\"Success\",summary:'Chart created',duration:5000, position:'topRight'});\r\n          this.cookieService.set('currentPage', \"Charts\");\r\n        },\r\n        (error) => {\r\n            this.toast.error({detail:\"Error\", summary:\"Failed to create chart.\",duration:5000, position:'topRight'});\r\n        }\r\n      );\r\n  }\r\n\r\n  getChartData() {\r\n    this.ChartService.getChartDataByType(this.chartDataItem).subscribe(\r\n      (data:any) =>{\r\n        this.chartData = data.data;\r\n        this.chartLabels = data.labels;\r\n       },\r\n       (error) => {\r\n        this.toast.error({detail:\"Error\", summary:\"Failed to get chartData.\",duration:5000, position:'topRight'});\r\n       }\r\n     );\r\n  }\r\n\r\n \r\n\r\n  onDropDownChange() {\r\n    this.ChartService.getChartDataByType(this.chartDataItem).subscribe(\r\n      (data:any) =>{\r\n        this.chartData = data.data;\r\n        this.chartLabels = data.labels;\r\n       },\r\n       (error) => {\r\n        this.toast.error({detail:\"Error\", summary:\"Failed to get chartData.\",duration:5000, position:'topRight'});\r\n       }\r\n     );\r\n  }\r\n\r\n  CaptureEvent(event: any) {\r\n    const target = event.target as HTMLAnchorElement;\r\n    this.cookieService.set('currentPage', target.innerText);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h2>Create a Chart</h2>\r\n    \r\n    <div class=\"chart-form\">\r\n        <label for=\"chartType\">Chart Type:</label>\r\n        <select id=\"chartType\" [(ngModel)]=\"chartType\">\r\n            <option value=\"bar\">Bar Chart</option>\r\n            <option value=\"line\">Line Chart</option>\r\n            <option value=\"pie\">Pie Chart</option>\r\n            <option value=\"doughnut\">Doughnut</option>\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"chart-form\">\r\n        <label for=\"chartData\">Chart Name:</label>\r\n        <input type=\"text\" id=\"chartData\" [(ngModel)]=\"chartName\">\r\n    </div>\r\n\r\n    <div class=\"chart-form\">\r\n        <label for=\"chartData\">Chart Data Item:</label>\r\n        <select id=\"chartData\" [(ngModel)]=\"chartDataItem\" (change)=\"onDropDownChange()\">\r\n            <option *ngFor=\"let option of columns\" [value]=\"option\">{{ option }}</option>\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"chart-container\">\r\n        <canvas baseChart [datasets]=\"[{ data: chartData, label: chartName }]\" [labels]=\"chartLabels\" [type]=\"chartType\"\r\n            [options]=\"chartOptions\">\r\n        </canvas>\r\n    </div>\r\n\r\n    <button class=\"create-button\" (click)=\"createChart()\">Create Chart</button>\r\n</div>"],"mappings":"AAAA,SAA2BA,YAAY,QAAQ,eAAe;;;;;;;;ICqBlDC,EAAA,CAAAC,cAAA,iBAAwD;IAAAD,EAAA,CAAAE,MAAA,GAAY;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAAtCH,EAAA,CAAAI,UAAA,UAAAC,SAAA,CAAgB;IAACL,EAAA,CAAAM,SAAA,GAAY;IAAZN,EAAA,CAAAO,iBAAA,CAAAF,SAAA,CAAY;;;;;;;;;;;;ADThF,OAAM,MAAOG,qBAAqB;EAehCC,YAAoBC,YAA0B,EAASC,KAAqB,EAAUC,MAAc,EAASC,aAA4B;IAArH,KAAAH,YAAY,GAAZA,YAAY;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAAiB,KAAAC,aAAa,GAAbA,aAAa;IAbhH,KAAAC,YAAY,GAAG,IAAIf,YAAY,EAA4B;IAErE,KAAAgB,SAAS,GAAW,MAAM;IAC1B,KAAAC,aAAa,GAAW,QAAQ;IAChC,KAAAC,SAAS,GAAQ,KAAK;IACtB,KAAAC,SAAS,GAAa,EAAE;IACxB,KAAAC,WAAW,GAAa,EAAE;IAC1B,KAAAC,YAAY,GAAQ;MAClBC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;QAAEC,CAAC,EAAE;UAAEC,WAAW,EAAE;QAAI;MAAE;KACnC;IACD,KAAAC,OAAO,GAAa,EAAE;EAEsH;EAE5IC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;IACnB,IAAI,CAACjB,YAAY,CAACkB,UAAU,EAAE,CAACC,SAAS,CAACC,OAAO,IAAG;MACjD,IAAI,CAACL,OAAO,GAAGK,OAAO;IACxB,CAAC,CAAC;EACJ;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACrB,YAAY,CAACqB,WAAW,CAAC,IAAI,CAACf,aAAa,EAAE,IAAI,CAACD,SAAS,EAAE,IAAI,CAACE,SAAS,CAAC,CAC9EY,SAAS,CACPG,QAAQ,IAAI;MACX,IAAI,CAACrB,KAAK,CAACsB,OAAO,CAAC;QAACC,MAAM,EAAC,SAAS;QAACC,OAAO,EAAC,eAAe;QAACC,QAAQ,EAAC,IAAI;QAAEC,QAAQ,EAAC;MAAU,CAAC,CAAC;MACjG,IAAI,CAACxB,aAAa,CAACyB,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC;IACjD,CAAC,EACAC,KAAK,IAAI;MACN,IAAI,CAAC5B,KAAK,CAAC4B,KAAK,CAAC;QAACL,MAAM,EAAC,OAAO;QAAEC,OAAO,EAAC,yBAAyB;QAACC,QAAQ,EAAC,IAAI;QAAEC,QAAQ,EAAC;MAAU,CAAC,CAAC;IAC5G,CAAC,CACF;EACL;EAEAV,YAAYA,CAAA;IACV,IAAI,CAACjB,YAAY,CAAC8B,kBAAkB,CAAC,IAAI,CAACxB,aAAa,CAAC,CAACa,SAAS,CAC/DY,IAAQ,IAAI;MACX,IAAI,CAACvB,SAAS,GAAGuB,IAAI,CAACA,IAAI;MAC1B,IAAI,CAACtB,WAAW,GAAGsB,IAAI,CAACC,MAAM;IAC/B,CAAC,EACAH,KAAK,IAAI;MACT,IAAI,CAAC5B,KAAK,CAAC4B,KAAK,CAAC;QAACL,MAAM,EAAC,OAAO;QAAEC,OAAO,EAAC,0BAA0B;QAACC,QAAQ,EAAC,IAAI;QAAEC,QAAQ,EAAC;MAAU,CAAC,CAAC;IAC1G,CAAC,CACF;EACJ;EAIAM,gBAAgBA,CAAA;IACd,IAAI,CAACjC,YAAY,CAAC8B,kBAAkB,CAAC,IAAI,CAACxB,aAAa,CAAC,CAACa,SAAS,CAC/DY,IAAQ,IAAI;MACX,IAAI,CAACvB,SAAS,GAAGuB,IAAI,CAACA,IAAI;MAC1B,IAAI,CAACtB,WAAW,GAAGsB,IAAI,CAACC,MAAM;IAC/B,CAAC,EACAH,KAAK,IAAI;MACT,IAAI,CAAC5B,KAAK,CAAC4B,KAAK,CAAC;QAACL,MAAM,EAAC,OAAO;QAAEC,OAAO,EAAC,0BAA0B;QAACC,QAAQ,EAAC,IAAI;QAAEC,QAAQ,EAAC;MAAU,CAAC,CAAC;IAC1G,CAAC,CACF;EACJ;EAEAO,YAAYA,CAACC,KAAU;IACrB,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAA2B;IAChD,IAAI,CAACjC,aAAa,CAACyB,GAAG,CAAC,aAAa,EAAEQ,MAAM,CAACC,SAAS,CAAC;EACzD;EAAC,QAAAC,CAAA,G;qBAlEUxC,qBAAqB,EAAAR,EAAA,CAAAiD,iBAAA,CAAAC,EAAA,CAAAxC,YAAA,GAAAV,EAAA,CAAAiD,iBAAA,CAAAE,EAAA,CAAAC,cAAA,GAAApD,EAAA,CAAAiD,iBAAA,CAAAI,EAAA,CAAAC,MAAA,GAAAtD,EAAA,CAAAiD,iBAAA,CAAAM,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBjD,qBAAqB;IAAAkD,SAAA;IAAAC,OAAA;MAAA7C,YAAA;IAAA;IAAA8C,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZlCjE,EAAA,CAAAC,cAAA,aAAuB;QACfD,EAAA,CAAAE,MAAA,qBAAc;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAEvBH,EAAA,CAAAC,cAAA,aAAwB;QACGD,EAAA,CAAAE,MAAA,kBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC1CH,EAAA,CAAAC,cAAA,gBAA+C;QAAxBD,EAAA,CAAAmE,UAAA,2BAAAC,+DAAAC,MAAA;UAAA,OAAAH,GAAA,CAAAjD,SAAA,GAAAoD,MAAA;QAAA,EAAuB;QAC1CrE,EAAA,CAAAC,cAAA,gBAAoB;QAAAD,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACtCH,EAAA,CAAAC,cAAA,gBAAqB;QAAAD,EAAA,CAAAE,MAAA,kBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACxCH,EAAA,CAAAC,cAAA,iBAAoB;QAAAD,EAAA,CAAAE,MAAA,iBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACtCH,EAAA,CAAAC,cAAA,iBAAyB;QAAAD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAIlDH,EAAA,CAAAC,cAAA,cAAwB;QACGD,EAAA,CAAAE,MAAA,mBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC1CH,EAAA,CAAAC,cAAA,gBAA0D;QAAxBD,EAAA,CAAAmE,UAAA,2BAAAG,+DAAAD,MAAA;UAAA,OAAAH,GAAA,CAAAnD,SAAA,GAAAsD,MAAA;QAAA,EAAuB;QAAzDrE,EAAA,CAAAG,YAAA,EAA0D;QAG9DH,EAAA,CAAAC,cAAA,cAAwB;QACGD,EAAA,CAAAE,MAAA,wBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC/CH,EAAA,CAAAC,cAAA,kBAAiF;QAA1DD,EAAA,CAAAmE,UAAA,2BAAAI,gEAAAF,MAAA;UAAA,OAAAH,GAAA,CAAAlD,aAAA,GAAAqD,MAAA;QAAA,EAA2B,oBAAAG,yDAAA;UAAA,OAAWN,GAAA,CAAAvB,gBAAA,EAAkB;QAAA,EAA7B;QAC9C3C,EAAA,CAAAyE,UAAA,KAAAC,wCAAA,qBAA6E;QACjF1E,EAAA,CAAAG,YAAA,EAAS;QAGbH,EAAA,CAAAC,cAAA,eAA6B;QACzBD,EAAA,CAAA2E,SAAA,kBAES;QACb3E,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,kBAAsD;QAAxBD,EAAA,CAAAmE,UAAA,mBAAAS,wDAAA;UAAA,OAASV,GAAA,CAAAnC,WAAA,EAAa;QAAA,EAAC;QAAC/B,EAAA,CAAAE,MAAA,oBAAY;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QA1BhDH,EAAA,CAAAM,SAAA,GAAuB;QAAvBN,EAAA,CAAAI,UAAA,YAAA8D,GAAA,CAAAjD,SAAA,CAAuB;QAUZjB,EAAA,CAAAM,SAAA,IAAuB;QAAvBN,EAAA,CAAAI,UAAA,YAAA8D,GAAA,CAAAnD,SAAA,CAAuB;QAKlCf,EAAA,CAAAM,SAAA,GAA2B;QAA3BN,EAAA,CAAAI,UAAA,YAAA8D,GAAA,CAAAlD,aAAA,CAA2B;QACnBhB,EAAA,CAAAM,SAAA,GAAU;QAAVN,EAAA,CAAAI,UAAA,YAAA8D,GAAA,CAAAzC,OAAA,CAAU;QAKvBzB,EAAA,CAAAM,SAAA,GAAoD;QAApDN,EAAA,CAAAI,UAAA,aAAAJ,EAAA,CAAA6E,eAAA,KAAAC,GAAA,EAAA9E,EAAA,CAAA+E,eAAA,IAAAC,GAAA,EAAAd,GAAA,CAAAhD,SAAA,EAAAgD,GAAA,CAAAnD,SAAA,GAAoD,WAAAmD,GAAA,CAAA/C,WAAA,UAAA+C,GAAA,CAAAjD,SAAA,aAAAiD,GAAA,CAAA9C,YAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}