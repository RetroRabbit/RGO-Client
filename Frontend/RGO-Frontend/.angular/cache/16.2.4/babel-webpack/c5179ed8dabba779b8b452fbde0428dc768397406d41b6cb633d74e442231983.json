{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/field-code.service\";\nimport * as i3 from \"@angular/forms\";\nfunction ManageFieldCodeComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const fieldCode_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", fieldCode_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(fieldCode_r2.name);\n  }\n}\nfunction ManageFieldCodeComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelement(1, \"app-update-field\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"selectedFieldCode\", ctx_r1.selectedFieldCode);\n  }\n}\nexport let ManageFieldCodeComponent = /*#__PURE__*/(() => {\n  class ManageFieldCodeComponent {\n    constructor(router, fieldCodeService, fb) {\n      this.router = router;\n      this.fieldCodeService = fieldCodeService;\n      this.fb = fb;\n      this.isClicked = false;\n      this.statuses = [];\n      this.dataTypes = [];\n      this.initializeForm();\n    }\n    initializeForm() {\n      this.newFieldCodeForm = this.fb.group({\n        fieldCode: this.fb.group({\n          code: [''],\n          name: [''],\n          description: [''],\n          regex: [''],\n          type: [''],\n          status: [''],\n          option: [''],\n          internal: [false],\n          internalTable: [''],\n          options: this.fb.array([])\n        })\n      });\n    }\n    get options() {\n      return this.newFieldCodeForm.get('fieldCode.options');\n    }\n    addOption() {\n      this.options.push(this.fb.control(''));\n    }\n    removeOption(index) {\n      this.options.removeAt(index);\n    }\n    onSubmit() {\n      if (this.newFieldCodeForm.valid) {\n        const {\n          fieldCode\n        } = this.newFieldCodeForm.value;\n        const optionsArray = this.options.value.map((optionValue, index) => {\n          return {\n            id: index,\n            fieldCodeId: 0,\n            option: optionValue\n          };\n        });\n        const fieldCodeDto = {\n          id: 0,\n          code: fieldCode.code,\n          name: fieldCode.name,\n          description: fieldCode.description,\n          regex: fieldCode.regex,\n          type: parseInt(fieldCode.type),\n          status: parseInt(fieldCode.status),\n          internal: fieldCode.internal,\n          internalTable: fieldCode.internalTable,\n          options: optionsArray\n        };\n        this.fieldCodeService.saveFieldCode(fieldCodeDto).subscribe({\n          next: data => {},\n          error: error => {}\n        });\n      } else {\n        this.showValidationErrors();\n      }\n    }\n    showValidationErrors() {\n      this.newFieldCodeForm.markAllAsTouched();\n    }\n    ngOnInit() {\n      this.fieldCodeService.getAllFieldCodes().subscribe({\n        next: fieldCodes => {\n          this.fieldCodes = fieldCodes;\n        },\n        error: error => {}\n      });\n    }\n    onTypeChange() {\n      this.isClicked = true;\n      this.selectedFieldCode = this.selectedFieldCode;\n    }\n    static #_ = this.ɵfac = function ManageFieldCodeComponent_Factory(t) {\n      return new (t || ManageFieldCodeComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FieldCodeService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ManageFieldCodeComponent,\n      selectors: [[\"app-manage-field-code\"]],\n      decls: 20,\n      vars: 3,\n      consts: [[1, \"wrapper\"], [1, \"m-3\", \"border-bottom\"], [1, \"page-heading\"], [2, \"overflow\", \"auto\"], [1, \"container-fluid\"], [\"href\", \"/new-fieldcode\"], [1, \"btn\", \"btn-primary\"], [2, \"padding-top\", \"30px\"], [1, \"custom-dropdown\"], [\"for\", \"fieldCodeSelect\"], [\"id\", \"fieldCodeSelect\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"update-form\", 4, \"ngIf\"], [3, \"ngValue\"], [1, \"update-form\"], [3, \"selectedFieldCode\"]],\n      template: function ManageFieldCodeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"div\", 1)(3, \"h1\", 2);\n          i0.ɵɵtext(4, \"Manage Field Code\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"a\", 5)(8, \"button\", 6);\n          i0.ɵɵtext(9, \"Add new field code\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(10, \"div\", 7);\n          i0.ɵɵelementStart(11, \"div\", 8)(12, \"label\", 9);\n          i0.ɵɵtext(13, \"Existing Custom Fields:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"select\", 10);\n          i0.ɵɵlistener(\"ngModelChange\", function ManageFieldCodeComponent_Template_select_ngModelChange_14_listener($event) {\n            return ctx.selectedFieldCode = $event;\n          })(\"change\", function ManageFieldCodeComponent_Template_select_change_14_listener() {\n            return ctx.onTypeChange();\n          });\n          i0.ɵɵelementStart(15, \"option\", 11);\n          i0.ɵɵtext(16, \"Choose a field code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(17, ManageFieldCodeComponent_option_17_Template, 2, 2, \"option\", 12);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelement(18, \"div\", 7);\n          i0.ɵɵtemplate(19, ManageFieldCodeComponent_div_19_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(14);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedFieldCode);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.fieldCodes);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedFieldCode != null);\n        }\n      },\n      styles: [\".ng-valid[required][_ngcontent-%COMP%], .ng-valid.required[_ngcontent-%COMP%]{border-left:5px solid #42A948}.ng-invalid[_ngcontent-%COMP%]:not(form){border-left:5px solid #a94442}#btnAddOption[_ngcontent-%COMP%]{border:1px outset lightgray;height:30px;width:30px;border-radius:20px;cursor:pointer;padding:0;margin-left:30px}#btnRemoveOption[_ngcontent-%COMP%]{border:1px outset;height:30px;width:30px;border-radius:20px;cursor:pointer;padding:0;margin-left:10px}#lblOption[_ngcontent-%COMP%]{margin-right:10px}.custom-dropdown[_ngcontent-%COMP%]{position:relative;width:200px}.custom-dropdown[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{width:100%;padding:8px;border:1px solid #ccc;border-radius:4px;background-color:#fff;font-size:14px}.custom-dropdown[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{font-size:14px}.custom-dropdown[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]:focus{outline:none;border-color:#007bff}.button-container[_ngcontent-%COMP%]{margin-top:10px}.button-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-right:10px;padding:8px 16px;background-color:#42a948;color:#fff;border:none;border-radius:4px;cursor:pointer}.button-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#90ee90}\"]\n    });\n  }\n  return ManageFieldCodeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}