{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/charts.service\";\nimport * as i2 from \"@angular/common\";\nfunction ReportComponent_li_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"div\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 9);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const label_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", label_r1, \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.chartData.data[i_r2], \" employees\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r0.calculatePercentage(ctx_r0.chartData.data[i_r2]), \"% of total)\");\n  }\n}\nexport class ReportComponent {\n  constructor(chartService) {\n    this.chartService = chartService;\n    this.activeChart = null;\n    this.showReport = false;\n    this.clearActiveChart = () => {};\n  }\n  generateReport() {\n    const reportHTML = this.generateHTMLReport();\n    const newWindow = window.open();\n    if (newWindow) {\n      newWindow.document.open();\n      newWindow.document.write(reportHTML);\n      newWindow.document.close();\n    } else {\n      console.error('Failed to open a new window for the report.');\n    }\n  }\n  generateHTMLReport() {\n    const chartHTML = `<h1>${this.chartData.label}</h1>`;\n    const dataHTML = `<p>Data: ${JSON.stringify(this.chartData.data)}</p>`;\n    return `<html><body>${chartHTML}${dataHTML}</body></html>`;\n  }\n  getTotalEmployees() {\n    return this.chartData.data.reduce((total, value) => total + value, 0);\n  }\n  calculatePercentage(value) {\n    const total = this.getTotalEmployees();\n    const percentage = value / total * 100;\n    return percentage.toFixed(2);\n  }\n  downloadReportAsCSV(dataType) {\n    this.chartService.downloadCSV(dataType).subscribe(data => {\n      const blob = new Blob([data], {\n        type: 'text/csv'\n      });\n      const downloadLink = document.createElement('a');\n      downloadLink.href = window.URL.createObjectURL(blob);\n      downloadLink.download = 'Report.csv';\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    });\n  }\n  static #_ = this.ɵfac = function ReportComponent_Factory(t) {\n    return new (t || ReportComponent)(i0.ɵɵdirectiveInject(i1.ChartService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReportComponent,\n    selectors: [[\"app-report\"]],\n    inputs: {\n      chartData: \"chartData\"\n    },\n    decls: 21,\n    vars: 5,\n    consts: [[1, \"report-wrapper\"], [1, \"report-container\"], [1, \"report-description\"], [1, \"chart-info\"], [1, \"chart-data\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"data-label\"], [1, \"data-value\"], [1, \"data-percentage\"]],\n    template: function ReportComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 2);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"strong\");\n        i0.ɵɵtext(8, \"Chart Type:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9);\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"strong\");\n        i0.ɵɵtext(12, \"Total Employees:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 4)(15, \"h2\");\n        i0.ɵɵtext(16, \"Chart Data:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"ul\");\n        i0.ɵɵtemplate(18, ReportComponent_li_18_Template, 7, 3, \"li\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ReportComponent_Template_button_click_19_listener() {\n          return ctx.downloadReportAsCSV(ctx.chartData.dataType);\n        });\n        i0.ɵɵtext(20, \"Download CSV\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.chartData.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"This report provides information about the \", ctx.chartData.name, \" chart:\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.chartData.type, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.getTotalEmployees(), \" employees \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chartData.labels);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\".report-wrapper[_ngcontent-%COMP%] {\\n    background-color: #f0f0f0;\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .report-container[_ngcontent-%COMP%] {\\n    font-family: Arial, sans-serif;\\n    background-color: #fff;\\n    padding: 20px;\\n    border: 1px solid #e0e0e0;\\n    border-radius: 5px;\\n    box-shadow: 0px 0px 5px #ccc;\\n  }\\n  \\n  h1[_ngcontent-%COMP%] {\\n    font-size: 24px;\\n    margin-bottom: 10px;\\n    color: #333;\\n  }\\n  \\n  .report-description[_ngcontent-%COMP%] {\\n    font-size: 16px;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .chart-info[_ngcontent-%COMP%] {\\n    font-size: 14px;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .chart-data[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    font-size: 20px;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .data-label[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n    margin-right: 5px;\\n  }\\n  \\n  .data-value[_ngcontent-%COMP%] {\\n    margin-right: 10px;\\n  }\\n  \\n  .data-percentage[_ngcontent-%COMP%] {\\n    color: #555;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jaGFydC1yZXBvcnRzL2NoYXJ0LXJlcG9ydHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSw4QkFBOEI7SUFDOUIsc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYix5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLDRCQUE0QjtFQUM5Qjs7RUFFQTtJQUNFLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsV0FBVztFQUNiOztFQUVBO0lBQ0UsZUFBZTtJQUNmLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGVBQWU7SUFDZixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxlQUFlO0lBQ2YsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLFdBQVc7RUFDYiIsInNvdXJjZXNDb250ZW50IjpbIi5yZXBvcnQtd3JhcHBlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICAucmVwb3J0LWNvbnRhaW5lciB7XHJcbiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlMGUwZTA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDVweCAjY2NjO1xyXG4gIH1cclxuICBcclxuICBoMSB7XHJcbiAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgY29sb3I6ICMzMzM7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZXBvcnQtZGVzY3JpcHRpb24ge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNoYXJ0LWluZm8ge1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNoYXJ0LWRhdGEgaDIge1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICB9XHJcbiAgXHJcbiAgLmRhdGEtbGFiZWwge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICB9XHJcbiAgXHJcbiAgLmRhdGEtdmFsdWUge1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAuZGF0YS1wZXJjZW50YWdlIHtcclxuICAgIGNvbG9yOiAjNTU1O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","label_r1","ctx_r0","chartData","data","i_r2","calculatePercentage","ReportComponent","constructor","chartService","activeChart","showReport","clearActiveChart","generateReport","reportHTML","generateHTMLReport","newWindow","window","open","document","write","close","console","error","chartHTML","label","dataHTML","JSON","stringify","getTotalEmployees","reduce","total","value","percentage","toFixed","downloadReportAsCSV","dataType","downloadCSV","subscribe","blob","Blob","type","downloadLink","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","_","ɵɵdirectiveInject","i1","ChartService","_2","selectors","inputs","decls","vars","consts","template","ReportComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","ReportComponent_li_18_Template","ɵɵlistener","ReportComponent_Template_button_click_19_listener","ɵɵtextInterpolate","name","ɵɵproperty","labels"],"sources":["C:\\Users\\HP\\Desktop\\GOP\\RGO-Client\\Frontend\\RGO-Frontend\\src\\app\\components\\chart-reports\\chart-reports.component.ts","C:\\Users\\HP\\Desktop\\GOP\\RGO-Client\\Frontend\\RGO-Frontend\\src\\app\\components\\chart-reports\\chart-reports.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { ChartService } from 'src/app/services/charts.service';\r\n\r\n@Component({\r\n  selector: 'app-report',\r\n  templateUrl: './chart-reports.component.html',\r\n  styleUrls: ['./chart-reports.component.css']\r\n})\r\nexport class ReportComponent {\r\n  @Input() chartData: any; \r\nactiveChart: any = null;\r\nshowReport: boolean = false; \r\nclearActiveChart: () => void = () => {};\r\n  \r\nconstructor(private chartService: ChartService) {}\r\n\r\ngenerateReport(): void {\r\n   const reportHTML = this.generateHTMLReport();\r\n   const newWindow = window.open();\r\n    if (newWindow) {\r\n      newWindow.document.open();\r\n      newWindow.document.write(reportHTML);\r\n      newWindow.document.close();\r\n    } else {\r\n      console.error('Failed to open a new window for the report.');\r\n    }\r\n  }\r\ngenerateHTMLReport(): string {\r\n    const chartHTML = `<h1>${this.chartData.label}</h1>`;\r\n    const dataHTML = `<p>Data: ${JSON.stringify(this.chartData.data)}</p>`;\r\n    return `<html><body>${chartHTML}${dataHTML}</body></html>`;\r\n  }\r\n\r\ngetTotalEmployees(): number {\r\n    return this.chartData.data.reduce((total: number, value: number) => total + value, 0);\r\n  }\r\n\r\ncalculatePercentage(value: number): string {\r\n    const total: number = this.getTotalEmployees();\r\n    const percentage: number = (value / total) * 100;\r\n    return percentage.toFixed(2); \r\n  }\r\n\r\n  downloadReportAsCSV(dataType: string) {\r\n    this.chartService.downloadCSV(dataType).subscribe(data => {\r\n  \r\n      const blob = new Blob([data], { type: 'text/csv' }); \r\n\r\n      const downloadLink = document.createElement('a');\r\n      downloadLink.href = window.URL.createObjectURL(blob);\r\n      downloadLink.download = 'Report.csv'; \r\n  \r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n  \r\n      document.body.removeChild(downloadLink);\r\n    });\r\n  }\r\n  \r\n} \r\n"," <div class=\"report-wrapper\">\r\n    <div class=\"report-container\">\r\n      <h1>{{ chartData.name }}</h1>\r\n      <p class=\"report-description\">This report provides information about the {{chartData.name}} chart:</p>\r\n      <div class=\"chart-info\">\r\n        <strong>Chart Type:</strong> {{ chartData.type }}<br>\r\n        <strong>Total Employees:</strong> {{ getTotalEmployees() }} employees\r\n      </div>\r\n       <div class=\"chart-data\">\r\n        <h2>Chart Data:</h2>\r\n         <ul>\r\n          <li *ngFor=\"let label of chartData.labels; let i = index\">\r\n            <div class=\"data-label\">{{ label }}:</div>\r\n            <div class=\"data-value\">{{ chartData.data[i] }} employees</div>\r\n            <div class=\"data-percentage\">({{ calculatePercentage(chartData.data[i]) }}% of total)</div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <button class=\"btn btn-primary\" (click)=\"downloadReportAsCSV(chartData.dataType)\">Download CSV</button>\r\n </div>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}