{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/role.service\";\nimport * as i2 from \"src/app/services/employee.service\";\nimport * as i3 from \"src/app/services/employee-role.service\";\nfunction RoleManagerComponent_div_1_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function RoleManagerComponent_div_1_button_5_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const role_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.changeRole(role_r7));\n    });\n    i0.ɵɵelementStart(1, \"span\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const role_r7 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", role_r7 == ctx_r6.newRoleForm.value.role ? \"selected\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r7);\n  }\n}\nfunction RoleManagerComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"label\")(2, \"em\");\n    i0.ɵɵtext(3, \"Roles:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtemplate(5, RoleManagerComponent_div_1_button_5_Template, 3, 2, \"button\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const roles_r5 = ctx.ngIf;\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", roles_r5);\n  }\n}\nfunction RoleManagerComponent_div_3_div_1_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function RoleManagerComponent_div_3_div_1_button_5_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const permission_r14 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r15.changePermission(permission_r14));\n    });\n    i0.ɵɵelementStart(1, \"span\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const permission_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", permission_r14 == ctx_r13.newRoleForm.value.permission ? \"selected\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(permission_r14);\n  }\n}\nfunction RoleManagerComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"label\")(2, \"em\");\n    i0.ɵɵtext(3, \"Permissions:\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(4, \"br\");\n    i0.ɵɵtemplate(5, RoleManagerComponent_div_3_div_1_button_5_Template, 3, 2, \"button\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const permissions_r12 = ctx.ngIf;\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", permissions_r12);\n  }\n}\nfunction RoleManagerComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RoleManagerComponent_div_3_div_1_Template, 6, 1, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const roleAccesses_r10 = ctx.ngIf;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.getPermissions(roleAccesses_r10));\n  }\n}\nfunction RoleManagerComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" operation succeded \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RoleManagerComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \" operation failed \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RoleManagerComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 16)(4, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function RoleManagerComponent_div_14_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.getRole(ctx_r17.newRoleForm.value.role));\n    });\n    i0.ɵɵtext(5, \" Reload \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"code\")(7, \"pre\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"json\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Permissions of \", ctx_r4.newRoleForm.value.role, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"                    \", i0.ɵɵpipeBind1(9, 2, ctx_r4.currRole), \"\\n                \");\n  }\n}\nexport let RoleManagerComponent = /*#__PURE__*/(() => {\n  class RoleManagerComponent {\n    constructor(roleService, employeeService, employeeRoleService) {\n      this.roleService = roleService;\n      this.employeeService = employeeService;\n      this.employeeRoleService = employeeRoleService;\n      this.roles$ = this.employeeRoleService.getAllRoles();\n      this.employees$ = this.employeeService.getAll();\n      this.roleAccesses$ = this.roleService.getAllRoles();\n      this.saved = false;\n      this.deleted = false;\n      this.failed = false;\n      this.newRoleForm = new FormGroup({\n        role: new FormControl('', Validators.required),\n        permission: new FormControl('', Validators.required)\n      });\n    }\n    getRoles(raw) {\n      return Object.keys(raw);\n    }\n    changePermission(permission) {\n      this.newRoleForm.setValue({\n        role: this.newRoleForm.value.role ?? '',\n        permission: permission\n      });\n    }\n    changeRole(role) {\n      this.newRoleForm.setValue({\n        role: role,\n        permission: this.newRoleForm.value.permission ?? ''\n      });\n      this.getRole(role);\n    }\n    getPermissions(roleAccess) {\n      return Object.values(roleAccess).join(',').split(',').filter((value, index, self) => self.indexOf(value) === index);\n    }\n    getRole(selectedRole) {\n      this.roleService.getRole(selectedRole).subscribe(role => this.currRole = role);\n    }\n    onAdd() {\n      this.roleService.addRole(this.newRoleForm.value.role, this.newRoleForm.value.permission).subscribe({\n        next: data => {\n          this.saved = true;\n        },\n        error: error => {\n          this.failed = true;\n        }\n      });\n    }\n    onDelete() {\n      this.roleService.deleteRole(this.newRoleForm.value.role, this.newRoleForm.value.permission).subscribe({\n        next: data => {\n          this.deleted = true;\n        },\n        error: error => {\n          this.failed = true;\n        }\n      });\n    }\n    static #_ = this.ɵfac = function RoleManagerComponent_Factory(t) {\n      return new (t || RoleManagerComponent)(i0.ɵɵdirectiveInject(i1.RoleService), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.EmployeeRoleService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RoleManagerComponent,\n      selectors: [[\"app-role-manager\"]],\n      decls: 15,\n      vars: 12,\n      consts: [[1, \"container\", 3, \"formGroup\"], [\"class\", \"d-flex\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-danger\", 3, \"disabled\", \"click\"], [\"class\", \"alert alert-info\", 4, \"ngIf\"], [\"class\", \"alert alert-warning\", 4, \"ngIf\"], [\"class\", \"card container\", 4, \"ngIf\"], [1, \"d-flex\"], [\"class\", \"card btn\", \"type\", \"button\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"card\", \"btn\", 3, \"click\"], [3, \"ngClass\"], [1, \"alert\", \"alert-info\"], [1, \"alert\", \"alert-warning\"], [1, \"card\", \"container\"], [1, \"card-header\"], [1, \"card-body\"], [\"type\", \"button\", 3, \"click\"]],\n      template: function RoleManagerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵtemplate(1, RoleManagerComponent_div_1_Template, 6, 1, \"div\", 1);\n          i0.ɵɵpipe(2, \"async\");\n          i0.ɵɵtemplate(3, RoleManagerComponent_div_3_Template, 2, 1, \"div\", 2);\n          i0.ɵɵpipe(4, \"async\");\n          i0.ɵɵelement(5, \"br\");\n          i0.ɵɵelementStart(6, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function RoleManagerComponent_Template_button_click_6_listener() {\n            return ctx.onAdd();\n          });\n          i0.ɵɵtext(7, \"Add\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function RoleManagerComponent_Template_button_click_8_listener() {\n            return ctx.onDelete();\n          });\n          i0.ɵɵtext(9, \"Delete\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"br\");\n          i0.ɵɵtemplate(11, RoleManagerComponent_div_11_Template, 2, 0, \"div\", 5);\n          i0.ɵɵelement(12, \"br\");\n          i0.ɵɵtemplate(13, RoleManagerComponent_div_13_Template, 2, 0, \"div\", 6);\n          i0.ɵɵtemplate(14, RoleManagerComponent_div_14_Template, 10, 4, \"div\", 7);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.newRoleForm);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 8, ctx.roles$));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 10, ctx.roleAccesses$));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", !ctx.newRoleForm.valid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.newRoleForm.valid);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.saved || ctx.deleted);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.failed);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.newRoleForm.controls.role.valid);\n        }\n      },\n      styles: [\"pre[_ngcontent-%COMP%]{border:1px solid #ccc;color:#000;background-color:#fff}.card[_ngcontent-%COMP%], .form-control[_ngcontent-%COMP%]{width:-moz-fit-content;width:fit-content;margin:.1rem;padding:.5rem;font-size:large;font-weight:700}div[_ngcontent-%COMP%]   .d-flex[_ngcontent-%COMP%]{flex-wrap:wrap}.selected[_ngcontent-%COMP%]{box-shadow:inset 0 0 0 .2rem #000}\"]\n    });\n  }\n  return RoleManagerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}