{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, Input, Output, ChangeDetectionStrategy, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/api';\nimport { TranslationKeys, Footer, Header, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport * as i4 from 'primeng/overlay';\nimport { OverlayModule } from 'primeng/overlay';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i6 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i5 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ObjectUtils } from 'primeng/utils';\nimport { CheckIcon } from 'primeng/icons/check';\nimport { SearchIcon } from 'primeng/icons/search';\nimport { TimesCircleIcon } from 'primeng/icons/timescircle';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { ChevronDownIcon } from 'primeng/icons/chevrondown';\nfunction MultiSelectItem_ng_container_3_CheckIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"CheckIcon\", 7);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-checkbox-icon\");\n  }\n}\nfunction MultiSelectItem_ng_container_3_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction MultiSelectItem_ng_container_3_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelectItem_ng_container_3_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction MultiSelectItem_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, MultiSelectItem_ng_container_3_span_2_1_Template, 1, 0, null, 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r4.checkIconTemplate);\n  }\n}\nfunction MultiSelectItem_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelectItem_ng_container_3_CheckIcon_1_Template, 1, 1, \"CheckIcon\", 5);\n    i0.ɵɵtemplate(2, MultiSelectItem_ng_container_3_span_2_Template, 2, 1, \"span\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.checkIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.checkIconTemplate);\n  }\n}\nfunction MultiSelectItem_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.label);\n  }\n}\nfunction MultiSelectItem_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    height: a0\n  };\n};\nconst _c1 = function (a0, a1) {\n  return {\n    \"p-highlight\": a0,\n    \"p-disabled\": a1\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\nconst _c3 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nconst _c4 = [\"container\"];\nconst _c5 = [\"overlay\"];\nconst _c6 = [\"filterInput\"];\nconst _c7 = [\"in\"];\nconst _c8 = [\"items\"];\nconst _c9 = [\"scroller\"];\nfunction MultiSelect_ng_container_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.valuesAsString || \"empty\");\n  }\n}\nfunction MultiSelect_ng_container_7_ng_container_2_div_1_ng_container_4_TimesCircleIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"TimesCircleIcon\", 20);\n    i0.ɵɵlistener(\"click\", function MultiSelect_ng_container_7_ng_container_2_div_1_ng_container_4_TimesCircleIcon_1_Template_TimesCircleIcon_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const item_r13 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r19.removeChip(item_r13, ctx_r19.event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-multiselect-token-icon\");\n  }\n}\nfunction MultiSelect_ng_container_7_ng_container_2_div_1_ng_container_4_span_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MultiSelect_ng_container_7_ng_container_2_div_1_ng_container_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵlistener(\"click\", function MultiSelect_ng_container_7_ng_container_2_div_1_ng_container_4_span_2_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const item_r13 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r23.removeChip(item_r13, ctx_r23.event));\n    });\n    i0.ɵɵtemplate(1, MultiSelect_ng_container_7_ng_container_2_div_1_ng_container_4_span_2_ng_container_1_Template, 1, 0, \"ng-container\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r18.removeTokenIconTemplate);\n  }\n}\nfunction MultiSelect_ng_container_7_ng_container_2_div_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_container_7_ng_container_2_div_1_ng_container_4_TimesCircleIcon_1_Template, 1, 1, \"TimesCircleIcon\", 18);\n    i0.ɵɵtemplate(2, MultiSelect_ng_container_7_ng_container_2_div_1_ng_container_4_span_2_Template, 2, 1, \"span\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r16.removeTokenIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.removeTokenIconTemplate);\n  }\n}\nfunction MultiSelect_ng_container_7_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15, 16)(2, \"span\", 17);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, MultiSelect_ng_container_7_ng_container_2_div_1_ng_container_4_Template, 3, 2, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r11.findLabelByValue(item_r13));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r11.disabled);\n  }\n}\nfunction MultiSelect_ng_container_7_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r12.placeholder || ctx_r12.defaultLabel || \"empty\");\n  }\n}\nfunction MultiSelect_ng_container_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_container_7_ng_container_2_div_1_Template, 5, 2, \"div\", 14);\n    i0.ɵɵtemplate(2, MultiSelect_ng_container_7_ng_container_2_ng_container_2_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r10.value || ctx_r10.value.length === 0);\n  }\n}\nfunction MultiSelect_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_container_7_ng_container_1_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵtemplate(2, MultiSelect_ng_container_7_ng_container_2_Template, 3, 2, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.display === \"comma\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.display === \"chip\");\n  }\n}\nfunction MultiSelect_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MultiSelect_ng_container_9_TimesIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"TimesIcon\", 20);\n    i0.ɵɵlistener(\"click\", function MultiSelect_ng_container_9_TimesIcon_1_Template_TimesIcon_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r28.clear($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-multiselect-clear-icon\");\n  }\n}\nfunction MultiSelect_ng_container_9_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction MultiSelect_ng_container_9_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelect_ng_container_9_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction MultiSelect_ng_container_9_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵlistener(\"click\", function MultiSelect_ng_container_9_span_2_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r32.clear($event));\n    });\n    i0.ɵɵtemplate(1, MultiSelect_ng_container_9_span_2_1_Template, 1, 0, null, 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r27.clearIconTemplate);\n  }\n}\nfunction MultiSelect_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_container_9_TimesIcon_1_Template, 1, 1, \"TimesIcon\", 18);\n    i0.ɵɵtemplate(2, MultiSelect_ng_container_9_span_2_Template, 2, 1, \"span\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.clearIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.clearIconTemplate);\n  }\n}\nfunction MultiSelect_ng_container_11_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 27);\n  }\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r34.dropdownIcon);\n  }\n}\nfunction MultiSelect_ng_container_11_ChevronDownIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronDownIcon\", 28);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-multiselect-trigger-icon\");\n  }\n}\nfunction MultiSelect_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_container_11_span_1_Template, 1, 1, \"span\", 25);\n    i0.ɵɵtemplate(2, MultiSelect_ng_container_11_ChevronDownIcon_2_Template, 1, 1, \"ChevronDownIcon\", 26);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.dropdownIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.dropdownIcon);\n  }\n}\nfunction MultiSelect_span_12_1_ng_template_0_Template(rf, ctx) {}\nfunction MultiSelect_span_12_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelect_span_12_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction MultiSelect_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 29);\n    i0.ɵɵtemplate(1, MultiSelect_span_12_1_Template, 1, 0, null, 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.dropdownIconTemplate);\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c10 = function (a0) {\n  return {\n    options: a0\n  };\n};\nfunction MultiSelect_ng_template_15_div_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_div_1_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r45.filterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c10, ctx_r45.filterOptions));\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_div_0_ng_container_4_CheckIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"CheckIcon\", 28);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-checkbox-icon\");\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_div_0_ng_container_4_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_div_0_ng_container_4_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelect_ng_template_15_div_1_ng_template_4_div_0_ng_container_4_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_div_0_ng_container_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 47);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_div_1_ng_template_4_div_0_ng_container_4_span_2_1_Template, 1, 0, null, 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r55 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r55.checkIconTemplate);\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_div_0_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_div_1_ng_template_4_div_0_ng_container_4_CheckIcon_1_Template, 1, 1, \"CheckIcon\", 26);\n    i0.ɵɵtemplate(2, MultiSelect_ng_template_15_div_1_ng_template_4_div_0_ng_container_4_span_2_Template, 2, 1, \"span\", 46);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r53 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r53.checkIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r53.checkIconTemplate);\n  }\n}\nconst _c11 = function (a0) {\n  return {\n    \"p-checkbox-disabled\": a0\n  };\n};\nconst _c12 = function (a0, a1, a2) {\n  return {\n    \"p-highlight\": a0,\n    \"p-focus\": a1,\n    \"p-disabled\": a2\n  };\n};\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r59 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 43)(1, \"div\", 2)(2, \"input\", 44);\n    i0.ɵɵlistener(\"focus\", function MultiSelect_ng_template_15_div_1_ng_template_4_div_0_Template_input_focus_2_listener() {\n      i0.ɵɵrestoreView(_r59);\n      const ctx_r58 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r58.onHeaderCheckboxFocus());\n    })(\"blur\", function MultiSelect_ng_template_15_div_1_ng_template_4_div_0_Template_input_blur_2_listener() {\n      i0.ɵɵrestoreView(_r59);\n      const ctx_r60 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r60.onHeaderCheckboxBlur());\n    })(\"keydown.space\", function MultiSelect_ng_template_15_div_1_ng_template_4_div_0_Template_input_keydown_space_2_listener($event) {\n      i0.ɵɵrestoreView(_r59);\n      const ctx_r61 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r61.toggleAll($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"div\", 45);\n    i0.ɵɵlistener(\"click\", function MultiSelect_ng_template_15_div_1_ng_template_4_div_0_Template_div_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r59);\n      const ctx_r62 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r62.toggleAll($event));\n    });\n    i0.ɵɵtemplate(4, MultiSelect_ng_template_15_div_1_ng_template_4_div_0_ng_container_4_Template, 3, 2, \"ng-container\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r49 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c11, ctx_r49.disabled || ctx_r49.toggleAllDisabled));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"checked\", ctx_r49.allChecked)(\"disabled\", ctx_r49.disabled || ctx_r49.toggleAllDisabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(8, _c12, ctx_r49.allChecked, ctx_r49.headerCheckboxFocus, ctx_r49.disabled || ctx_r49.toggleAllDisabled));\n    i0.ɵɵattribute(\"aria-checked\", ctx_r49.allChecked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r49.allChecked);\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_div_1_SearchIcon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SearchIcon\", 28);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-multiselect-filter-icon\");\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_div_1_span_4_1_ng_template_0_Template(rf, ctx) {}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_div_1_span_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelect_ng_template_15_div_1_ng_template_4_div_1_span_4_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_div_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 52);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_div_1_ng_template_4_div_1_span_4_1_Template, 1, 0, null, 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r65 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r65.filterIconTemplate);\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r69 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 48)(1, \"input\", 49, 50);\n    i0.ɵɵlistener(\"input\", function MultiSelect_ng_template_15_div_1_ng_template_4_div_1_Template_input_input_1_listener($event) {\n      i0.ɵɵrestoreView(_r69);\n      const ctx_r68 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r68.onFilterInputChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, MultiSelect_ng_template_15_div_1_ng_template_4_div_1_SearchIcon_3_Template, 1, 1, \"SearchIcon\", 26);\n    i0.ɵɵtemplate(4, MultiSelect_ng_template_15_div_1_ng_template_4_div_1_span_4_Template, 2, 1, \"span\", 51);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r50 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r50.filterValue || \"\")(\"disabled\", ctx_r50.disabled);\n    i0.ɵɵattribute(\"autocomplete\", ctx_r50.autocomplete)(\"placeholder\", ctx_r50.filterPlaceHolder)(\"aria-label\", ctx_r50.ariaFilterLabel);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r50.filterIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r50.filterIconTemplate);\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_TimesIcon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"TimesIcon\", 28);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-multiselect-close-icon\");\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_span_4_1_ng_template_0_Template(rf, ctx) {}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_span_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelect_ng_template_15_div_1_ng_template_4_span_4_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 53);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_div_1_ng_template_4_span_4_1_Template, 1, 0, null, 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r52 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r52.closeIconTemplate);\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r73 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtemplate(0, MultiSelect_ng_template_15_div_1_ng_template_4_div_0_Template, 5, 12, \"div\", 39);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_div_1_ng_template_4_div_1_Template, 5, 7, \"div\", 40);\n    i0.ɵɵelementStart(2, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function MultiSelect_ng_template_15_div_1_ng_template_4_Template_button_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r73);\n      const ctx_r72 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r72.close($event));\n    });\n    i0.ɵɵtemplate(3, MultiSelect_ng_template_15_div_1_ng_template_4_TimesIcon_3_Template, 1, 1, \"TimesIcon\", 26);\n    i0.ɵɵtemplate(4, MultiSelect_ng_template_15_div_1_ng_template_4_span_4_Template, 2, 1, \"span\", 42);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r47 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.showToggleAll && !ctx_r47.selectionLimit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.filter);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r47.closeIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r47.closeIconTemplate);\n  }\n}\nfunction MultiSelect_ng_template_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵprojection(1);\n    i0.ɵɵtemplate(2, MultiSelect_ng_template_15_div_1_ng_container_2_Template, 1, 0, \"ng-container\", 22);\n    i0.ɵɵtemplate(3, MultiSelect_ng_template_15_div_1_ng_container_3_Template, 2, 4, \"ng-container\", 37);\n    i0.ɵɵtemplate(4, MultiSelect_ng_template_15_div_1_ng_template_4_Template, 5, 4, \"ng-template\", null, 38, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r46 = i0.ɵɵreference(5);\n    const ctx_r38 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r38.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r38.filterTemplate)(\"ngIfElse\", _r46);\n  }\n}\nfunction MultiSelect_ng_template_15_p_scroller_3_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c13 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    options: a1\n  };\n};\nfunction MultiSelect_ng_template_15_p_scroller_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelect_ng_template_15_p_scroller_3_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 8);\n  }\n  if (rf & 2) {\n    const items_r77 = ctx.$implicit;\n    const scrollerOptions_r78 = ctx.options;\n    i0.ɵɵnextContext(2);\n    const _r41 = i0.ɵɵreference(6);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r41)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c13, items_r77, scrollerOptions_r78));\n  }\n}\nfunction MultiSelect_ng_template_15_p_scroller_3_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MultiSelect_ng_template_15_p_scroller_3_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelect_ng_template_15_p_scroller_3_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 8);\n  }\n  if (rf & 2) {\n    const scrollerOptions_r81 = ctx.options;\n    const ctx_r80 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r80.loaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c10, scrollerOptions_r81));\n  }\n}\nfunction MultiSelect_ng_template_15_p_scroller_3_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_p_scroller_3_ng_container_3_ng_template_1_Template, 1, 4, \"ng-template\", 56);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction MultiSelect_ng_template_15_p_scroller_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r84 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-scroller\", 54, 55);\n    i0.ɵɵlistener(\"onLazyLoad\", function MultiSelect_ng_template_15_p_scroller_3_Template_p_scroller_onLazyLoad_0_listener($event) {\n      i0.ɵɵrestoreView(_r84);\n      const ctx_r83 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r83.onLazyLoad.emit($event));\n    });\n    i0.ɵɵtemplate(2, MultiSelect_ng_template_15_p_scroller_3_ng_template_2_Template, 1, 5, \"ng-template\", 13);\n    i0.ɵɵtemplate(3, MultiSelect_ng_template_15_p_scroller_3_ng_container_3_Template, 2, 0, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(9, _c0, ctx_r39.scrollHeight));\n    i0.ɵɵproperty(\"items\", ctx_r39.optionsToRender)(\"itemSize\", ctx_r39.virtualScrollItemSize || ctx_r39._itemSize)(\"autoSize\", true)(\"tabindex\", -1)(\"lazy\", ctx_r39.lazy)(\"options\", ctx_r39.virtualScrollOptions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r39.loaderTemplate);\n  }\n}\nfunction MultiSelect_ng_template_15_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c14 = function () {\n  return {};\n};\nfunction MultiSelect_ng_template_15_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r41 = i0.ɵɵreference(6);\n    const ctx_r40 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r41)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c13, ctx_r40.optionsToRender, i0.ɵɵpureFunction0(2, _c14)));\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_ng_container_2_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const optgroup_r96 = i0.ɵɵnextContext().$implicit;\n    const ctx_r97 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r97.getOptionGroupLabel(optgroup_r96) || \"empty\");\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_ng_container_2_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_ng_container_2_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 62);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_ng_template_5_ng_container_2_ng_template_1_span_1_Template, 2, 1, \"span\", 7);\n    i0.ɵɵtemplate(2, MultiSelect_ng_template_15_ng_template_5_ng_container_2_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, MultiSelect_ng_template_15_ng_template_5_ng_container_2_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 8);\n  }\n  if (rf & 2) {\n    const optgroup_r96 = ctx.$implicit;\n    const scrollerOptions_r87 = i0.ɵɵnextContext(2).options;\n    const _r91 = i0.ɵɵreference(5);\n    const ctx_r95 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c0, scrollerOptions_r87.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r95.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r95.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(8, _c3, optgroup_r96));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r91)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c3, ctx_r95.getOptionGroupChildren(optgroup_r96)));\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_ng_template_5_ng_container_2_ng_template_1_Template, 4, 12, \"ng-template\", 61);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const items_r86 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", items_r86);\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_ng_template_5_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const items_r86 = i0.ɵɵnextContext().$implicit;\n    const _r91 = i0.ɵɵreference(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r91)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, items_r86));\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_ng_template_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r111 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-multiSelectItem\", 63);\n    i0.ɵɵlistener(\"onClick\", function MultiSelect_ng_template_15_ng_template_5_ng_template_4_ng_template_0_Template_p_multiSelectItem_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r111);\n      const ctx_r110 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r110.onOptionClick($event));\n    })(\"onKeydown\", function MultiSelect_ng_template_15_ng_template_5_ng_template_4_ng_template_0_Template_p_multiSelectItem_onKeydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r111);\n      const ctx_r112 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r112.onOptionKeydown($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r108 = ctx.$implicit;\n    const scrollerOptions_r87 = i0.ɵɵnextContext(2).options;\n    const ctx_r107 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"option\", option_r108)(\"selected\", ctx_r107.isSelected(option_r108))(\"label\", ctx_r107.getOptionLabel(option_r108))(\"disabled\", ctx_r107.isOptionDisabled(option_r108))(\"template\", ctx_r107.itemTemplate)(\"checkIconTemplate\", ctx_r107.checkIconTemplate)(\"itemSize\", scrollerOptions_r87.itemSize);\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MultiSelect_ng_template_15_ng_template_5_ng_template_4_ng_template_0_Template, 1, 7, \"ng-template\", 61);\n  }\n  if (rf & 2) {\n    const optionsToDisplay_r105 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngForOf\", optionsToDisplay_r105);\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_li_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r114 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r114.emptyFilterMessageLabel, \" \");\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_li_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 65);\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 64);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_ng_template_5_li_6_ng_container_1_Template, 2, 1, \"ng-container\", 37);\n    i0.ɵɵtemplate(2, MultiSelect_ng_template_15_ng_template_5_li_6_ng_container_2_Template, 2, 0, \"ng-container\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r87 = i0.ɵɵnextContext().options;\n    const ctx_r93 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, scrollerOptions_r87.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r93.emptyFilterTemplate && !ctx_r93.emptyTemplate)(\"ngIfElse\", ctx_r93.emptyFilter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r93.emptyFilterTemplate || ctx_r93.emptyTemplate);\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_li_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r118 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r118.emptyMessageLabel, \" \");\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_li_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 66);\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 64);\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_ng_template_5_li_7_ng_container_1_Template, 2, 1, \"ng-container\", 37);\n    i0.ɵɵtemplate(2, MultiSelect_ng_template_15_ng_template_5_li_7_ng_container_2_Template, 2, 0, \"ng-container\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r87 = i0.ɵɵnextContext().options;\n    const ctx_r94 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, scrollerOptions_r87.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r94.emptyTemplate)(\"ngIfElse\", ctx_r94.empty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r94.emptyTemplate);\n  }\n}\nfunction MultiSelect_ng_template_15_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 57, 58);\n    i0.ɵɵtemplate(2, MultiSelect_ng_template_15_ng_template_5_ng_container_2_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵtemplate(3, MultiSelect_ng_template_15_ng_template_5_ng_container_3_Template, 2, 4, \"ng-container\", 7);\n    i0.ɵɵtemplate(4, MultiSelect_ng_template_15_ng_template_5_ng_template_4_Template, 1, 1, \"ng-template\", null, 59, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(6, MultiSelect_ng_template_15_ng_template_5_li_6_Template, 3, 6, \"li\", 60);\n    i0.ɵɵtemplate(7, MultiSelect_ng_template_15_ng_template_5_li_7_Template, 3, 6, \"li\", 60);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r87 = ctx.options;\n    const ctx_r42 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(scrollerOptions_r87.contentStyle);\n    i0.ɵɵproperty(\"ngClass\", scrollerOptions_r87.contentStyleClass);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r42.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r42.group);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r42.hasFilter() && ctx_r42.isEmpty());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r42.hasFilter() && ctx_r42.isEmpty());\n  }\n}\nfunction MultiSelect_ng_template_15_div_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MultiSelect_ng_template_15_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 67);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵtemplate(2, MultiSelect_ng_template_15_div_7_ng_container_2_Template, 1, 0, \"ng-container\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r43 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r43.footerTemplate);\n  }\n}\nconst _c15 = function () {\n  return [\"p-multiselect-panel p-component\"];\n};\nfunction MultiSelect_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r124 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵlistener(\"keydown\", function MultiSelect_ng_template_15_Template_div_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r124);\n      const ctx_r123 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r123.onKeydown($event));\n    });\n    i0.ɵɵtemplate(1, MultiSelect_ng_template_15_div_1_Template, 6, 3, \"div\", 31);\n    i0.ɵɵelementStart(2, \"div\", 32);\n    i0.ɵɵtemplate(3, MultiSelect_ng_template_15_p_scroller_3_Template, 4, 11, \"p-scroller\", 33);\n    i0.ɵɵtemplate(4, MultiSelect_ng_template_15_ng_container_4_Template, 2, 6, \"ng-container\", 7);\n    i0.ɵɵtemplate(5, MultiSelect_ng_template_15_ng_template_5_Template, 8, 7, \"ng-template\", null, 34, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, MultiSelect_ng_template_15_div_7_Template, 3, 1, \"div\", 35);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r8.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(10, _c15))(\"ngStyle\", ctx_r8.panelStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.showHeader);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r8.virtualScroll ? \"auto\" : ctx_r8.scrollHeight || \"auto\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.virtualScroll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.virtualScroll);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.footerFacet || ctx_r8.footerTemplate);\n  }\n}\nconst _c16 = [[[\"p-header\"]], [[\"p-footer\"]]];\nconst _c17 = function (a1, a2, a3, a4) {\n  return {\n    \"p-multiselect p-component\": true,\n    \"p-multiselect-open\": a1,\n    \"p-multiselect-chip\": a2,\n    \"p-focus\": a3,\n    \"p-disabled\": a4\n  };\n};\nconst _c18 = function (a0, a1) {\n  return {\n    \"p-placeholder\": a0,\n    \"p-multiselect-label-empty\": a1\n  };\n};\nconst _c19 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    removeChip: a1\n  };\n};\nconst _c20 = function () {\n  return {\n    \"p-multiselect-trigger\": true\n  };\n};\nconst _c21 = [\"p-header\", \"p-footer\"];\nconst MULTISELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MultiSelect),\n  multi: true\n};\nlet MultiSelectItem = /*#__PURE__*/(() => {\n  class MultiSelectItem {\n    option;\n    selected;\n    label;\n    disabled;\n    itemSize;\n    template;\n    checkIconTemplate;\n    onClick = new EventEmitter();\n    onKeydown = new EventEmitter();\n    onOptionClick(event) {\n      this.onClick.emit({\n        originalEvent: event,\n        option: this.option,\n        selected: this.selected\n      });\n    }\n    onOptionKeydown(event) {\n      this.onKeydown.emit({\n        originalEvent: event,\n        option: this.option\n      });\n    }\n    static ɵfac = function MultiSelectItem_Factory(t) {\n      return new (t || MultiSelectItem)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MultiSelectItem,\n      selectors: [[\"p-multiSelectItem\"]],\n      hostAttrs: [1, \"p-element\"],\n      inputs: {\n        option: \"option\",\n        selected: \"selected\",\n        label: \"label\",\n        disabled: \"disabled\",\n        itemSize: \"itemSize\",\n        template: \"template\",\n        checkIconTemplate: \"checkIconTemplate\"\n      },\n      outputs: {\n        onClick: \"onClick\",\n        onKeydown: \"onKeydown\"\n      },\n      decls: 6,\n      vars: 18,\n      consts: [[\"pRipple\", \"\", 1, \"p-multiselect-item\", 3, \"ngStyle\", \"ngClass\", \"click\", \"keydown\"], [1, \"p-checkbox\", \"p-component\"], [1, \"p-checkbox-box\", 3, \"ngClass\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"styleClass\", 4, \"ngIf\"], [\"class\", \"p-checkbox-icon\", 4, \"ngIf\"], [3, \"styleClass\"], [1, \"p-checkbox-icon\"], [4, \"ngTemplateOutlet\"]],\n      template: function MultiSelectItem_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"li\", 0);\n          i0.ɵɵlistener(\"click\", function MultiSelectItem_Template_li_click_0_listener($event) {\n            return ctx.onOptionClick($event);\n          })(\"keydown\", function MultiSelectItem_Template_li_keydown_0_listener($event) {\n            return ctx.onOptionKeydown($event);\n          });\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵtemplate(3, MultiSelectItem_ng_container_3_Template, 3, 2, \"ng-container\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(4, MultiSelectItem_span_4_Template, 2, 1, \"span\", 3);\n          i0.ɵɵtemplate(5, MultiSelectItem_ng_container_5_Template, 1, 0, \"ng-container\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(9, _c0, ctx.itemSize + \"px\"))(\"ngClass\", i0.ɵɵpureFunction2(11, _c1, ctx.selected, ctx.disabled));\n          i0.ɵɵattribute(\"aria-label\", ctx.label)(\"tabindex\", ctx.disabled ? null : \"0\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c2, ctx.selected));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selected);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.template);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(16, _c3, ctx.option));\n        }\n      },\n      dependencies: function () {\n        return [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.Ripple, CheckIcon];\n      },\n      encapsulation: 2\n    });\n  }\n  return MultiSelectItem;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * MultiSelect is used to select multiple items from a collection.\n * @group Components\n */\nlet MultiSelect = /*#__PURE__*/(() => {\n  class MultiSelect {\n    el;\n    renderer;\n    cd;\n    zone;\n    filterService;\n    config;\n    overlayService;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Inline style of the overlay panel.\n     * @group Props\n     */\n    panelStyle;\n    /**\n     * Style class of the overlay panel element.\n     * @group Props\n     */\n    panelStyleClass;\n    /**\n     * Identifier of the focus input to match a label defined for the component.\n     * @group Props\n     */\n    inputId;\n    /**\n     * When present, it specifies that the element should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * When present, it specifies that the component cannot be edited.\n     * @group Props\n     */\n    readonly;\n    /**\n     * Whether to display options as grouped when nested options are provided.\n     * @group Props\n     */\n    group;\n    /**\n     * When specified, displays an input field to filter the items on keyup.\n     * @group Props\n     */\n    filter = true;\n    /**\n     * Defines placeholder of the filter input.\n     * @group Props\n     */\n    filterPlaceHolder;\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    filterLocale;\n    /**\n     * Specifies the visibility of the options panel.\n     * @group Props\n     */\n    overlayVisible;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex;\n    /**\n     * Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    appendTo;\n    /**\n     * A property to uniquely identify a value in options.\n     * @group Props\n     */\n    dataKey;\n    /**\n     * Name of the input element.\n     * @group Props\n     */\n    name;\n    /**\n     * Label of the input for accessibility.\n     * @group Props\n     */\n    label;\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * Whether to show labels of selected item labels or use default label.\n     * @group Props\n     */\n    displaySelectedLabel = true;\n    /**\n     * Decides how many selected item labels to show at most.\n     * @group Props\n     */\n    maxSelectedLabels = 3;\n    /**\n     * Label to display after exceeding max selected labels e.g. ({0} items selected), defaults \"ellipsis\" keyword to indicate a text-overflow.\n     * @group Props\n     */\n    selectedItemsLabel = 'ellipsis';\n    /**\n     * Whether to show the checkbox at header to toggle all items at once.\n     * @group Props\n     */\n    showToggleAll = true;\n    /**\n     * Text to display when filtering does not return any results.\n     * @group Props\n     */\n    emptyFilterMessage = '';\n    /**\n     * Text to display when there is no data. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    emptyMessage = '';\n    /**\n     * Clears the filter value when hiding the dropdown.\n     * @group Props\n     */\n    resetFilterOnHide = false;\n    /**\n     * Icon class of the dropdown icon.\n     * @group Props\n     */\n    dropdownIcon;\n    /**\n     * Name of the label field of an option.\n     * @group Props\n     */\n    optionLabel;\n    /**\n     * Name of the value field of an option.\n     * @group Props\n     */\n    optionValue;\n    /**\n     * Name of the disabled field of an option.\n     * @group Props\n     */\n    optionDisabled;\n    /**\n     * Name of the label field of an option group.\n     * @group Props\n     */\n    optionGroupLabel;\n    /**\n     * Name of the options field of an option group.\n     * @group Props\n     */\n    optionGroupChildren = 'items';\n    /**\n     * Whether to show the header.\n     * @group Props\n     */\n    showHeader = true;\n    /**\n     * When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\n     * @group Props\n     */\n    filterBy;\n    /**\n     * Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n     * @group Props\n     */\n    scrollHeight = '200px';\n    /**\n     * Defines if data is loaded and interacted with in lazy manner.\n     * @group Props\n     */\n    lazy = false;\n    /**\n     * Whether the data should be loaded on demand during scroll.\n     * @group Props\n     */\n    virtualScroll;\n    /**\n     * Height of an item in the list for VirtualScrolling.\n     * @group Props\n     */\n    virtualScrollItemSize;\n    /**\n     * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n     * @group Props\n     */\n    virtualScrollOptions;\n    /**\n     * Whether to use overlay API feature. The properties of overlay API can be used like an object in it.\n     * @group Props\n     */\n    overlayOptions;\n    /**\n     * Defines a string that labels the filter input.\n     * @group Props\n     */\n    ariaFilterLabel;\n    /**\n     * Defines how the items are filtered.\n     * @group Props\n     */\n    filterMatchMode = 'contains';\n    /**\n     * Advisory information to display in a tooltip on hover.\n     * @group Props\n     */\n    tooltip = '';\n    /**\n     * Position of the tooltip.\n     * @group Props\n     */\n    tooltipPosition = 'right';\n    /**\n     * Type of CSS position.\n     * @group Props\n     */\n    tooltipPositionStyle = 'absolute';\n    /**\n     * Style class of the tooltip.\n     * @group Props\n     */\n    tooltipStyleClass;\n    /**\n     * Applies focus to the filter element when the overlay is shown.\n     * @group Props\n     */\n    autofocusFilter = true;\n    /**\n     * Defines how the selected items are displayed.\n     * @group Props\n     */\n    display = 'comma';\n    /**\n     * Defines the autocomplete is active.\n     * @group Props\n     */\n    autocomplete = 'on';\n    /**\n     * When enabled, a clear icon is displayed to clear the value.\n     * @group Props\n     */\n    showClear = false;\n    /**\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     * Whether to automatically manage layering.\n     * @group Props\n     */\n    get autoZIndex() {\n      return this._autoZIndex;\n    }\n    set autoZIndex(val) {\n      this._autoZIndex = val;\n      console.warn('The autoZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    /**\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     * Base zIndex value to use in layering.\n     * @group Props\n     */\n    get baseZIndex() {\n      return this._baseZIndex;\n    }\n    set baseZIndex(val) {\n      this._baseZIndex = val;\n      console.warn('The baseZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    /**\n     * Transition options of the show animation.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get showTransitionOptions() {\n      return this._showTransitionOptions;\n    }\n    set showTransitionOptions(val) {\n      this._showTransitionOptions = val;\n      console.warn('The showTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    /**\n     * Transition options of the hide animation.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get hideTransitionOptions() {\n      return this._hideTransitionOptions;\n    }\n    set hideTransitionOptions(val) {\n      this._hideTransitionOptions = val;\n      console.warn('The hideTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    /**\n     * Label to display when there are no selections.\n     * @group Props\n     * @deprecated Use placeholder instead.\n     */\n    set defaultLabel(val) {\n      this._defaultLabel = val;\n      this.updateLabel();\n    }\n    get defaultLabel() {\n      return this._defaultLabel;\n    }\n    /**\n     * Label to display when there are no selections.\n     * @group Props\n     */\n    set placeholder(val) {\n      this._placeholder = val;\n      this.updateLabel();\n    }\n    get placeholder() {\n      return this._placeholder;\n    }\n    /**\n     * An array of objects to display as the available options.\n     * @group Props\n     */\n    get options() {\n      return this._options;\n    }\n    set options(val) {\n      this._options = val;\n      this.updateLabel();\n    }\n    /**\n     * When specified, filter displays with this value.\n     * @group Props\n     */\n    get filterValue() {\n      return this._filterValue;\n    }\n    set filterValue(val) {\n      this._filterValue = val;\n      this.activateFilter();\n    }\n    /**\n     * Item size of item to be virtual scrolled.\n     * @group Props\n     * @deprecated use virtualScrollItemSize property instead.\n     */\n    get itemSize() {\n      return this._itemSize;\n    }\n    set itemSize(val) {\n      this._itemSize = val;\n      console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n    }\n    /**\n     * Number of maximum options that can be selected.\n     * @group Props\n     */\n    get selectionLimit() {\n      return this._selectionLimit;\n    }\n    set selectionLimit(val) {\n      this._selectionLimit = val;\n      this.checkSelectionLimit();\n    }\n    containerViewChild;\n    overlayViewChild;\n    filterInputChild;\n    accessibleViewChild;\n    itemsViewChild;\n    scroller;\n    footerFacet;\n    headerFacet;\n    templates;\n    /**\n     * Callback to invoke when value changes.\n     * @param {MultiSelectChangeEvent} event - Custom change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    /**\n     * Callback to invoke when data is filtered.\n     * @param {MultiSelectFilterEvent} event - Custom filter event.\n     * @group Emits\n     */\n    onFilter = new EventEmitter();\n    /**\n     * Callback to invoke when multiselect receives focus.\n     * @param {MultiSelectFocusEvent} event - Custom focus event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    /**\n     * Callback to invoke when multiselect loses focus.\n     * @param {MultiSelectBlurEvent} event - Custom blur event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    /**\n     * Callback to invoke when component is clicked.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onClick = new EventEmitter();\n    /**\n     * Callback to invoke when input field is cleared.\n     * @group Emits\n     */\n    onClear = new EventEmitter();\n    /**\n     * Callback to invoke when overlay panel becomes visible.\n     * @group Emits\n     */\n    onPanelShow = new EventEmitter();\n    /**\n     * Callback to invoke when overlay panel becomes hidden.\n     * @group Emits\n     */\n    onPanelHide = new EventEmitter();\n    /**\n     * Callback to invoke in lazy mode to load new data.\n     * @param {MultiSelectLazyLoadEvent} event - Lazy load event.\n     * @group Emits\n     */\n    onLazyLoad = new EventEmitter();\n    /**\n     * Callback to invoke in lazy mode to load new data.\n     * @param {MultiSelectRemoveEvent} event - Remove event.\n     * @group Emits\n     */\n    onRemove = new EventEmitter();\n    _autoZIndex;\n    _baseZIndex;\n    _showTransitionOptions;\n    _hideTransitionOptions;\n    _defaultLabel;\n    _placeholder;\n    _itemSize;\n    _selectionLimit;\n    value;\n    _filteredOptions;\n    onModelChange = () => {};\n    onModelTouched = () => {};\n    valuesAsString;\n    focus;\n    filled;\n    _filterValue;\n    filtered;\n    itemTemplate;\n    groupTemplate;\n    loaderTemplate;\n    headerTemplate;\n    filterTemplate;\n    footerTemplate;\n    emptyFilterTemplate;\n    emptyTemplate;\n    selectedItemsTemplate;\n    checkIconTemplate;\n    filterIconTemplate;\n    removeTokenIconTemplate;\n    closeIconTemplate;\n    clearIconTemplate;\n    dropdownIconTemplate;\n    headerCheckboxFocus;\n    filterOptions;\n    _options;\n    maxSelectionLimitReached;\n    preventModelTouched;\n    preventDocumentDefault;\n    constructor(el, renderer, cd, zone, filterService, config, overlayService) {\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.zone = zone;\n      this.filterService = filterService;\n      this.config = config;\n      this.overlayService = overlayService;\n    }\n    ngOnInit() {\n      this.updateLabel();\n      if (this.filterBy) {\n        this.filterOptions = {\n          filter: value => this.onFilterInputChange(value),\n          reset: () => this.resetFilter()\n        };\n      }\n    }\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'item':\n            this.itemTemplate = item.template;\n            break;\n          case 'group':\n            this.groupTemplate = item.template;\n            break;\n          case 'selectedItems':\n            this.selectedItemsTemplate = item.template;\n            break;\n          case 'header':\n            this.headerTemplate = item.template;\n            break;\n          case 'filter':\n            this.filterTemplate = item.template;\n            break;\n          case 'emptyfilter':\n            this.emptyFilterTemplate = item.template;\n            break;\n          case 'empty':\n            this.emptyTemplate = item.template;\n            break;\n          case 'footer':\n            this.footerTemplate = item.template;\n            break;\n          case 'loader':\n            this.loaderTemplate = item.template;\n            break;\n          case 'checkicon':\n            this.checkIconTemplate = item.template;\n            break;\n          case 'filtericon':\n            this.filterIconTemplate = item.template;\n            break;\n          case 'removetokenicon':\n            this.removeTokenIconTemplate = item.template;\n            break;\n          case 'closeicon':\n            this.closeIconTemplate = item.template;\n            break;\n          case 'clearicon':\n            this.clearIconTemplate = item.template;\n            break;\n          case 'dropdownicon':\n            this.dropdownIconTemplate = item.template;\n            break;\n          default:\n            this.itemTemplate = item.template;\n            break;\n        }\n      });\n    }\n    ngAfterViewInit() {\n      if (this.overlayVisible) {\n        this.show();\n      }\n    }\n    ngAfterViewChecked() {\n      if (this.filtered) {\n        this.zone.runOutsideAngular(() => {\n          setTimeout(() => {\n            this.overlayViewChild?.alignOverlay();\n          }, 1);\n        });\n        this.filtered = false;\n      }\n    }\n    getOptionLabel(option) {\n      return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option && option.label != undefined ? option.label : option;\n    }\n    getOptionValue(option) {\n      return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : !this.optionLabel && option && option.value !== undefined ? option.value : option;\n    }\n    getOptionGroupLabel(optionGroup) {\n      return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup && optionGroup.label != undefined ? optionGroup.label : optionGroup;\n    }\n    getOptionGroupChildren(optionGroup) {\n      return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    isOptionDisabled(option) {\n      let disabled = this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option && option.disabled !== undefined ? option.disabled : false;\n      return disabled || this.maxSelectionLimitReached && !this.isSelected(option);\n    }\n    writeValue(value) {\n      this.value = value;\n      this.updateLabel();\n      this.updateFilledState();\n      this.checkSelectionLimit();\n      this.cd.markForCheck();\n    }\n    checkSelectionLimit() {\n      if (this.selectionLimit && this.value && this.value.length === this.selectionLimit) {\n        this.maxSelectionLimitReached = true;\n      } else {\n        this.maxSelectionLimitReached = false;\n      }\n    }\n    updateFilledState() {\n      this.filled = this.value && this.value.length > 0;\n    }\n    registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n    onOptionClick(event) {\n      let option = event.option;\n      if (this.isOptionDisabled(option)) {\n        return;\n      }\n      let optionValue = this.getOptionValue(option);\n      let selectionIndex = this.findSelectionIndex(optionValue);\n      if (selectionIndex != -1) {\n        this.value = this.value.filter((val, i) => i != selectionIndex);\n        this.onRemove.emit({\n          newValue: this.value,\n          removed: optionValue\n        });\n        if (this.selectionLimit) {\n          this.maxSelectionLimitReached = false;\n        }\n      } else {\n        if (!this.selectionLimit || !this.value || this.value.length < this.selectionLimit) {\n          this.value = [...(this.value || []), optionValue];\n        }\n        this.checkSelectionLimit();\n      }\n      this.onModelChange(this.value);\n      this.onChange.emit({\n        originalEvent: event.originalEvent,\n        value: this.value,\n        itemValue: optionValue\n      });\n      this.updateLabel();\n      this.updateFilledState();\n    }\n    isSelected(option) {\n      return this.findSelectionIndex(this.getOptionValue(option)) != -1;\n    }\n    findSelectionIndex(val) {\n      let index = -1;\n      if (this.value) {\n        for (let i = 0; i < this.value.length; i++) {\n          if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n            index = i;\n            break;\n          }\n        }\n      }\n      return index;\n    }\n    get toggleAllDisabled() {\n      let optionsToRender = this.optionsToRender;\n      if (!optionsToRender || optionsToRender.length === 0) {\n        return true;\n      } else {\n        for (let option of optionsToRender) {\n          if (!this.isOptionDisabled(option)) return false;\n        }\n        return true;\n      }\n    }\n    toggleAll(event) {\n      if (this.disabled || this.toggleAllDisabled || this.readonly) {\n        return;\n      }\n      let allChecked = this.allChecked;\n      if (allChecked) this.uncheckAll();else this.checkAll();\n      this.onModelChange(this.value);\n      this.onChange.emit({\n        originalEvent: event,\n        value: this.value\n      });\n      this.updateFilledState();\n      this.updateLabel();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    checkAll() {\n      let optionsToRender = this.optionsToRender;\n      let val = [];\n      optionsToRender.forEach(opt => {\n        if (!this.group) {\n          let optionDisabled = this.isOptionDisabled(opt);\n          if (!optionDisabled || optionDisabled && this.isSelected(opt)) {\n            val.push(this.getOptionValue(opt));\n          }\n        } else {\n          let subOptions = this.getOptionGroupChildren(opt);\n          if (subOptions) {\n            subOptions.forEach(option => {\n              let optionDisabled = this.isOptionDisabled(option);\n              if (!optionDisabled || optionDisabled && this.isSelected(option)) {\n                val.push(this.getOptionValue(option));\n              }\n            });\n          }\n        }\n      });\n      this.value = val;\n    }\n    uncheckAll() {\n      let optionsToRender = this.optionsToRender;\n      let val = [];\n      optionsToRender.forEach(opt => {\n        if (!this.group) {\n          let optionDisabled = this.isOptionDisabled(opt);\n          if (optionDisabled && this.isSelected(opt)) {\n            val.push(this.getOptionValue(opt));\n          }\n        } else {\n          if (opt.items) {\n            opt.items.forEach(option => {\n              let optionDisabled = this.isOptionDisabled(option);\n              if (optionDisabled && this.isSelected(option)) {\n                val.push(this.getOptionValue(option));\n              }\n            });\n          }\n        }\n      });\n      this.value = val;\n    }\n    show() {\n      if (!this.overlayVisible) {\n        this.overlayVisible = true;\n        this.preventDocumentDefault = true;\n        this.cd.markForCheck();\n      }\n    }\n    onOverlayAnimationStart(event) {\n      switch (event.toState) {\n        case 'visible':\n          this.virtualScroll && this.scroller?.setContentEl(this.itemsViewChild?.nativeElement);\n          if (this.filterInputChild && this.filterInputChild.nativeElement) {\n            this.preventModelTouched = true;\n            if (this.autofocusFilter) {\n              this.filterInputChild.nativeElement.focus();\n            }\n          }\n          this.onPanelShow.emit();\n          break;\n        case 'void':\n          this.onModelTouched();\n          break;\n      }\n    }\n    hide() {\n      this.overlayVisible = false;\n      if (this.resetFilterOnHide) {\n        this.resetFilter();\n      }\n      this.onPanelHide.emit();\n      this.cd.markForCheck();\n    }\n    resetFilter() {\n      if (this.filterInputChild && this.filterInputChild.nativeElement) {\n        this.filterInputChild.nativeElement.value = '';\n      }\n      this._filterValue = null;\n      this._filteredOptions = null;\n    }\n    close(event) {\n      this.hide();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    clear(event) {\n      this.value = null;\n      this.updateLabel();\n      this.updateFilledState();\n      this.checkSelectionLimit();\n      this.onClear.emit();\n      this.onModelChange(this.value);\n      event.stopPropagation();\n    }\n    onMouseclick(event, input) {\n      if (this.disabled || this.readonly || event.target.isSameNode(this.accessibleViewChild?.nativeElement)) {\n        return;\n      }\n      this.onClick.emit(event);\n      if (!this.overlayViewChild?.el?.nativeElement?.contains(event.target) && !DomHandler.hasClass(event.target, 'p-multiselect-token-icon')) {\n        if (this.overlayVisible) {\n          this.hide();\n        } else {\n          this.show();\n        }\n        input.focus();\n      }\n    }\n    removeChip(chip, event) {\n      this.value = this.value.filter(val => !ObjectUtils.equals(val, chip, this.dataKey));\n      this.onModelChange(this.value);\n      this.checkSelectionLimit();\n      this.onChange.emit({\n        originalEvent: event,\n        value: this.value,\n        itemValue: chip\n      });\n      this.updateLabel();\n      this.updateFilledState();\n    }\n    onInputFocus(event) {\n      this.focus = true;\n      this.onFocus.emit({\n        originalEvent: event\n      });\n    }\n    onInputBlur(event) {\n      this.focus = false;\n      this.onBlur.emit({\n        originalEvent: event\n      });\n      if (!this.preventModelTouched) {\n        this.onModelTouched();\n      }\n      this.preventModelTouched = false;\n    }\n    onOptionKeydown(event) {\n      if (this.readonly) {\n        return;\n      }\n      switch (event.originalEvent.which) {\n        //down\n        case 40:\n          var nextItem = this.findNextItem(event.originalEvent.target.parentElement);\n          if (nextItem) {\n            nextItem.focus();\n          }\n          event.originalEvent.preventDefault();\n          break;\n        //up\n        case 38:\n          var prevItem = this.findPrevItem(event.originalEvent.target.parentElement);\n          if (prevItem) {\n            prevItem.focus();\n          }\n          event.originalEvent.preventDefault();\n          break;\n        //enter\n        case 13:\n          this.onOptionClick(event);\n          event.originalEvent.preventDefault();\n          break;\n        case 27:\n        case 9:\n          this.hide();\n          break;\n      }\n    }\n    findNextItem(item) {\n      let nextItem = item.nextElementSibling;\n      if (nextItem) return DomHandler.hasClass(nextItem.children[0], 'p-disabled') || DomHandler.isHidden(nextItem.children[0]) || DomHandler.hasClass(nextItem, 'p-multiselect-item-group') ? this.findNextItem(nextItem) : nextItem.children[0];else return null;\n    }\n    findPrevItem(item) {\n      let prevItem = item.previousElementSibling;\n      if (prevItem) return DomHandler.hasClass(prevItem.children[0], 'p-disabled') || DomHandler.isHidden(prevItem.children[0]) || DomHandler.hasClass(prevItem, 'p-multiselect-item-group') ? this.findPrevItem(prevItem) : prevItem.children[0];else return null;\n    }\n    onKeydown(event) {\n      switch (event.which) {\n        //down\n        case 40:\n          if (!this.overlayVisible && event.altKey) {\n            this.show();\n            event.preventDefault();\n          }\n          break;\n        //space\n        case 32:\n          if (!this.overlayVisible) {\n            this.show();\n            event.preventDefault();\n          }\n          break;\n        //escape\n        case 27:\n          this.hide();\n          break;\n      }\n    }\n    updateLabel() {\n      if (this.value && this.options && this.value.length && this.displaySelectedLabel) {\n        let label = '';\n        for (let i = 0; i < this.value.length; i++) {\n          let itemLabel = this.findLabelByValue(this.value[i]);\n          if (itemLabel) {\n            if (label.length > 0) {\n              label = label + ', ';\n            }\n            label = label + itemLabel;\n          }\n        }\n        if (this.value.length <= this.maxSelectedLabels || this.selectedItemsLabel === 'ellipsis') {\n          this.valuesAsString = label;\n        } else {\n          let pattern = /{(.*?)}/;\n          if (pattern.test(this.selectedItemsLabel)) {\n            this.valuesAsString = this.selectedItemsLabel.replace(this.selectedItemsLabel.match(pattern)[0], this.value.length + '');\n          } else {\n            this.valuesAsString = this.selectedItemsLabel;\n          }\n        }\n      } else {\n        this.valuesAsString = this.placeholder || this.defaultLabel;\n      }\n    }\n    findLabelByValue(val) {\n      if (this.group) {\n        let label = null;\n        for (let i = 0; i < this.options.length; i++) {\n          let subOptions = this.getOptionGroupChildren(this.options[i]);\n          if (subOptions) {\n            label = this.searchLabelByValue(val, subOptions);\n            if (label) {\n              break;\n            }\n          }\n        }\n        return label;\n      } else {\n        return this.searchLabelByValue(val, this.options);\n      }\n    }\n    searchLabelByValue(val, options) {\n      let label = null;\n      for (let i = 0; i < options.length; i++) {\n        let option = options[i];\n        let optionValue = this.getOptionValue(option);\n        if (val == null && optionValue == null || ObjectUtils.equals(val, optionValue, this.dataKey)) {\n          label = this.getOptionLabel(option);\n          break;\n        }\n      }\n      return label;\n    }\n    get allChecked() {\n      let optionsToRender = this.optionsToRender;\n      if (!optionsToRender || optionsToRender.length === 0) {\n        return false;\n      } else {\n        let selectedDisabledItemsLength = 0;\n        let unselectedDisabledItemsLength = 0;\n        let selectedEnabledItemsLength = 0;\n        let visibleOptionsLength = this.group ? 0 : this.optionsToRender.length;\n        for (let option of optionsToRender) {\n          if (!this.group) {\n            let disabled = this.isOptionDisabled(option);\n            let selected = this.isSelected(option);\n            if (disabled) {\n              if (selected) selectedDisabledItemsLength++;else unselectedDisabledItemsLength++;\n            } else {\n              if (selected) selectedEnabledItemsLength++;else return false;\n            }\n          } else {\n            for (let opt of this.getOptionGroupChildren(option)) {\n              let disabled = this.isOptionDisabled(opt);\n              let selected = this.isSelected(opt);\n              if (disabled) {\n                if (selected) selectedDisabledItemsLength++;else unselectedDisabledItemsLength++;\n              } else {\n                if (selected) selectedEnabledItemsLength++;else {\n                  return false;\n                }\n              }\n              visibleOptionsLength++;\n            }\n          }\n        }\n        return visibleOptionsLength === selectedDisabledItemsLength || visibleOptionsLength === selectedEnabledItemsLength || selectedEnabledItemsLength && visibleOptionsLength === selectedEnabledItemsLength + unselectedDisabledItemsLength + selectedDisabledItemsLength;\n      }\n    }\n    get optionsToRender() {\n      return this._filteredOptions || this.options;\n    }\n    get emptyMessageLabel() {\n      return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    get emptyFilterMessageLabel() {\n      return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n    }\n    hasFilter() {\n      return this._filterValue && this._filterValue.trim().length > 0;\n    }\n    isEmpty() {\n      return !this.optionsToRender || this.optionsToRender && this.optionsToRender.length === 0;\n    }\n    onFilterInputChange(event) {\n      this._filterValue = event.target.value;\n      this.activateFilter();\n      this.filtered = true;\n      this.onFilter.emit({\n        originalEvent: event,\n        filter: this._filterValue\n      });\n      this.cd.detectChanges();\n    }\n    activateFilter() {\n      if (this.hasFilter() && this._options) {\n        let searchFields = (this.filterBy || this.optionLabel || 'label').split(',');\n        if (this.group) {\n          let filteredGroups = [];\n          for (let optgroup of this.options) {\n            let filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n            if (filteredSubOptions && filteredSubOptions.length) {\n              filteredGroups.push({\n                ...optgroup,\n                ...{\n                  [this.optionGroupChildren]: filteredSubOptions\n                }\n              });\n            }\n          }\n          this._filteredOptions = filteredGroups;\n        } else {\n          this._filteredOptions = this.filterService.filter(this.options, searchFields, this._filterValue, this.filterMatchMode, this.filterLocale);\n        }\n      } else {\n        this._filteredOptions = null;\n      }\n    }\n    onHeaderCheckboxFocus() {\n      this.headerCheckboxFocus = true;\n    }\n    onHeaderCheckboxBlur() {\n      this.headerCheckboxFocus = false;\n    }\n    static ɵfac = function MultiSelect_Factory(t) {\n      return new (t || MultiSelect)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.FilterService), i0.ɵɵdirectiveInject(i3.PrimeNGConfig), i0.ɵɵdirectiveInject(i3.OverlayService));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MultiSelect,\n      selectors: [[\"p-multiSelect\"]],\n      contentQueries: function MultiSelect_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, Footer, 5);\n          i0.ɵɵcontentQuery(dirIndex, Header, 5);\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerFacet = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerFacet = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      viewQuery: function MultiSelect_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n          i0.ɵɵviewQuery(_c6, 5);\n          i0.ɵɵviewQuery(_c7, 5);\n          i0.ɵɵviewQuery(_c8, 5);\n          i0.ɵɵviewQuery(_c9, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.overlayViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterInputChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accessibleViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemsViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n        }\n      },\n      hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n      hostVars: 6,\n      hostBindings: function MultiSelect_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focus || ctx.overlayVisible)(\"p-multiselect-clearable\", ctx.showClear && !ctx.disabled);\n        }\n      },\n      inputs: {\n        style: \"style\",\n        styleClass: \"styleClass\",\n        panelStyle: \"panelStyle\",\n        panelStyleClass: \"panelStyleClass\",\n        inputId: \"inputId\",\n        disabled: \"disabled\",\n        readonly: \"readonly\",\n        group: \"group\",\n        filter: \"filter\",\n        filterPlaceHolder: \"filterPlaceHolder\",\n        filterLocale: \"filterLocale\",\n        overlayVisible: \"overlayVisible\",\n        tabindex: \"tabindex\",\n        appendTo: \"appendTo\",\n        dataKey: \"dataKey\",\n        name: \"name\",\n        label: \"label\",\n        ariaLabelledBy: \"ariaLabelledBy\",\n        displaySelectedLabel: \"displaySelectedLabel\",\n        maxSelectedLabels: \"maxSelectedLabels\",\n        selectedItemsLabel: \"selectedItemsLabel\",\n        showToggleAll: \"showToggleAll\",\n        emptyFilterMessage: \"emptyFilterMessage\",\n        emptyMessage: \"emptyMessage\",\n        resetFilterOnHide: \"resetFilterOnHide\",\n        dropdownIcon: \"dropdownIcon\",\n        optionLabel: \"optionLabel\",\n        optionValue: \"optionValue\",\n        optionDisabled: \"optionDisabled\",\n        optionGroupLabel: \"optionGroupLabel\",\n        optionGroupChildren: \"optionGroupChildren\",\n        showHeader: \"showHeader\",\n        filterBy: \"filterBy\",\n        scrollHeight: \"scrollHeight\",\n        lazy: \"lazy\",\n        virtualScroll: \"virtualScroll\",\n        virtualScrollItemSize: \"virtualScrollItemSize\",\n        virtualScrollOptions: \"virtualScrollOptions\",\n        overlayOptions: \"overlayOptions\",\n        ariaFilterLabel: \"ariaFilterLabel\",\n        filterMatchMode: \"filterMatchMode\",\n        tooltip: \"tooltip\",\n        tooltipPosition: \"tooltipPosition\",\n        tooltipPositionStyle: \"tooltipPositionStyle\",\n        tooltipStyleClass: \"tooltipStyleClass\",\n        autofocusFilter: \"autofocusFilter\",\n        display: \"display\",\n        autocomplete: \"autocomplete\",\n        showClear: \"showClear\",\n        autoZIndex: \"autoZIndex\",\n        baseZIndex: \"baseZIndex\",\n        showTransitionOptions: \"showTransitionOptions\",\n        hideTransitionOptions: \"hideTransitionOptions\",\n        defaultLabel: \"defaultLabel\",\n        placeholder: \"placeholder\",\n        options: \"options\",\n        filterValue: \"filterValue\",\n        itemSize: \"itemSize\",\n        selectionLimit: \"selectionLimit\"\n      },\n      outputs: {\n        onChange: \"onChange\",\n        onFilter: \"onFilter\",\n        onFocus: \"onFocus\",\n        onBlur: \"onBlur\",\n        onClick: \"onClick\",\n        onClear: \"onClear\",\n        onPanelShow: \"onPanelShow\",\n        onPanelHide: \"onPanelHide\",\n        onLazyLoad: \"onLazyLoad\",\n        onRemove: \"onRemove\"\n      },\n      features: [i0.ɵɵProvidersFeature([MULTISELECT_VALUE_ACCESSOR])],\n      ngContentSelectors: _c21,\n      decls: 16,\n      vars: 43,\n      consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [\"container\", \"\"], [1, \"p-hidden-accessible\"], [\"type\", \"text\", \"readonly\", \"readonly\", \"aria-haspopup\", \"listbox\", \"role\", \"listbox\", 3, \"disabled\", \"focus\", \"blur\", \"keydown\"], [\"in\", \"\"], [1, \"p-multiselect-label-container\", 3, \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\"], [1, \"p-multiselect-label\", 3, \"ngClass\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngClass\"], [\"class\", \"p-multiselect-trigger-icon\", 4, \"ngIf\"], [3, \"visible\", \"options\", \"target\", \"appendTo\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\", \"visibleChange\", \"onAnimationStart\", \"onHide\"], [\"overlay\", \"\"], [\"pTemplate\", \"content\"], [\"class\", \"p-multiselect-token\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-multiselect-token\"], [\"token\", \"\"], [1, \"p-multiselect-token-label\"], [3, \"styleClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-multiselect-token-icon\", 3, \"click\", 4, \"ngIf\"], [3, \"styleClass\", \"click\"], [1, \"p-multiselect-token-icon\", 3, \"click\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-multiselect-clear-icon\", 3, \"click\", 4, \"ngIf\"], [1, \"p-multiselect-clear-icon\", 3, \"click\"], [\"class\", \"p-multiselect-trigger-icon\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [1, \"p-multiselect-trigger-icon\", 3, \"ngClass\"], [3, \"styleClass\"], [1, \"p-multiselect-trigger-icon\"], [3, \"ngClass\", \"ngStyle\", \"keydown\"], [\"class\", \"p-multiselect-header\", 4, \"ngIf\"], [1, \"p-multiselect-items-wrapper\"], [3, \"items\", \"style\", \"itemSize\", \"autoSize\", \"tabindex\", \"lazy\", \"options\", \"onLazyLoad\", 4, \"ngIf\"], [\"buildInItems\", \"\"], [\"class\", \"p-multiselect-footer\", 4, \"ngIf\"], [1, \"p-multiselect-header\"], [4, \"ngIf\", \"ngIfElse\"], [\"builtInFilterElement\", \"\"], [\"class\", \"p-checkbox p-component\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"p-multiselect-filter-container\", 4, \"ngIf\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-multiselect-close\", \"p-link\", \"p-button-icon-only\", 3, \"click\"], [\"class\", \"p-multiselect-close-icon\", 4, \"ngIf\"], [1, \"p-checkbox\", \"p-component\", 3, \"ngClass\"], [\"type\", \"checkbox\", \"readonly\", \"readonly\", 3, \"checked\", \"disabled\", \"focus\", \"blur\", \"keydown.space\"], [\"role\", \"checkbox\", 1, \"p-checkbox-box\", 3, \"ngClass\", \"click\"], [\"class\", \"p-checkbox-icon\", 4, \"ngIf\"], [1, \"p-checkbox-icon\"], [1, \"p-multiselect-filter-container\"], [\"type\", \"text\", \"role\", \"textbox\", 1, \"p-multiselect-filter\", \"p-inputtext\", \"p-component\", 3, \"value\", \"disabled\", \"input\"], [\"filterInput\", \"\"], [\"class\", \"p-multiselect-filter-icon\", 4, \"ngIf\"], [1, \"p-multiselect-filter-icon\"], [1, \"p-multiselect-close-icon\"], [3, \"items\", \"itemSize\", \"autoSize\", \"tabindex\", \"lazy\", \"options\", \"onLazyLoad\"], [\"scroller\", \"\"], [\"pTemplate\", \"loader\"], [\"role\", \"listbox\", \"aria-multiselectable\", \"true\", 1, \"p-multiselect-items\", \"p-component\", 3, \"ngClass\"], [\"items\", \"\"], [\"itemslist\", \"\"], [\"class\", \"p-multiselect-empty-message\", 3, \"ngStyle\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-multiselect-item-group\", 3, \"ngStyle\"], [3, \"option\", \"selected\", \"label\", \"disabled\", \"template\", \"checkIconTemplate\", \"itemSize\", \"onClick\", \"onKeydown\"], [1, \"p-multiselect-empty-message\", 3, \"ngStyle\"], [\"emptyFilter\", \"\"], [\"empty\", \"\"], [1, \"p-multiselect-footer\"]],\n      template: function MultiSelect_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r125 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c16);\n          i0.ɵɵelementStart(0, \"div\", 0, 1);\n          i0.ɵɵlistener(\"click\", function MultiSelect_Template_div_click_0_listener($event) {\n            i0.ɵɵrestoreView(_r125);\n            const _r1 = i0.ɵɵreference(4);\n            return i0.ɵɵresetView(ctx.onMouseclick($event, _r1));\n          });\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"input\", 3, 4);\n          i0.ɵɵlistener(\"focus\", function MultiSelect_Template_input_focus_3_listener($event) {\n            return ctx.onInputFocus($event);\n          })(\"blur\", function MultiSelect_Template_input_blur_3_listener($event) {\n            return ctx.onInputBlur($event);\n          })(\"keydown\", function MultiSelect_Template_input_keydown_3_listener($event) {\n            return ctx.onKeydown($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 5)(6, \"div\", 6);\n          i0.ɵɵtemplate(7, MultiSelect_ng_container_7_Template, 3, 2, \"ng-container\", 7);\n          i0.ɵɵtemplate(8, MultiSelect_ng_container_8_Template, 1, 0, \"ng-container\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(9, MultiSelect_ng_container_9_Template, 3, 2, \"ng-container\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 9);\n          i0.ɵɵtemplate(11, MultiSelect_ng_container_11_Template, 3, 2, \"ng-container\", 7);\n          i0.ɵɵtemplate(12, MultiSelect_span_12_Template, 2, 1, \"span\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"p-overlay\", 11, 12);\n          i0.ɵɵlistener(\"visibleChange\", function MultiSelect_Template_p_overlay_visibleChange_13_listener($event) {\n            return ctx.overlayVisible = $event;\n          })(\"onAnimationStart\", function MultiSelect_Template_p_overlay_onAnimationStart_13_listener($event) {\n            return ctx.onOverlayAnimationStart($event);\n          })(\"onHide\", function MultiSelect_Template_p_overlay_onHide_13_listener() {\n            return ctx.hide();\n          });\n          i0.ɵɵtemplate(15, MultiSelect_ng_template_15_Template, 8, 11, \"ng-template\", 13);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.styleClass);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(31, _c17, ctx.overlayVisible, ctx.display === \"chip\", ctx.focus, ctx.disabled))(\"ngStyle\", ctx.style);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.disabled);\n          i0.ɵɵattribute(\"label\", ctx.label)(\"id\", ctx.inputId)(\"name\", ctx.name)(\"tabindex\", ctx.tabindex)(\"aria-expanded\", ctx.overlayVisible)(\"aria-labelledby\", ctx.ariaLabelledBy);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"pTooltip\", ctx.tooltip)(\"tooltipPosition\", ctx.tooltipPosition)(\"positionStyle\", ctx.tooltipPositionStyle)(\"tooltipStyleClass\", ctx.tooltipStyleClass);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(36, _c18, ctx.valuesAsString === (ctx.defaultLabel || ctx.placeholder), (ctx.valuesAsString == null || ctx.valuesAsString.length === 0) && (ctx.placeholder == null || ctx.placeholder.length === 0)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.selectedItemsTemplate);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.selectedItemsTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(39, _c19, ctx.value, ctx.removeChip.bind(ctx)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.value != null && ctx.filled && !ctx.disabled && ctx.showClear);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(42, _c20));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.dropdownIconTemplate);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.dropdownIconTemplate);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"visible\", ctx.overlayVisible)(\"options\", ctx.overlayOptions)(\"target\", \"@parent\")(\"appendTo\", ctx.appendTo)(\"autoZIndex\", ctx.autoZIndex)(\"baseZIndex\", ctx.baseZIndex)(\"showTransitionOptions\", ctx.showTransitionOptions)(\"hideTransitionOptions\", ctx.hideTransitionOptions);\n        }\n      },\n      dependencies: function () {\n        return [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i4.Overlay, i3.PrimeTemplate, i5.Tooltip, i2.Ripple, i6.Scroller, CheckIcon, SearchIcon, TimesCircleIcon, TimesIcon, ChevronDownIcon, MultiSelectItem];\n      },\n      styles: [\"@layer primeng{.p-multiselect{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-multiselect-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-multiselect-label-container{overflow:hidden;flex:1 1 auto;cursor:pointer}.p-multiselect-label{display:block;white-space:nowrap;cursor:pointer;overflow:hidden;text-overflow:ellipsis}.p-multiselect-label-empty{overflow:hidden;visibility:hidden}.p-multiselect-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-multiselect-token-icon{cursor:pointer}.p-multiselect-items-wrapper{overflow:auto}.p-multiselect-items{margin:0;padding:0;list-style-type:none}.p-multiselect-item{cursor:pointer;display:flex;align-items:center;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-multiselect-header{display:flex;align-items:center;justify-content:space-between}.p-multiselect-filter-container{position:relative;flex:1 1 auto}.p-multiselect-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-multiselect-filter-container .p-inputtext{width:100%}.p-multiselect-close{display:flex;align-items:center;justify-content:center;flex-shrink:0;overflow:hidden;position:relative}.p-fluid .p-multiselect{display:flex}.p-multiselect-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-multiselect-clearable{position:relative}}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MultiSelect;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MultiSelectModule = /*#__PURE__*/(() => {\n  class MultiSelectModule {\n    static ɵfac = function MultiSelectModule_Factory(t) {\n      return new (t || MultiSelectModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MultiSelectModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, CheckIcon, SearchIcon, TimesCircleIcon, TimesIcon, ChevronDownIcon, CheckIcon, OverlayModule, SharedModule, ScrollerModule]\n    });\n  }\n  return MultiSelectModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MULTISELECT_VALUE_ACCESSOR, MultiSelect, MultiSelectItem, MultiSelectModule };\n//# sourceMappingURL=primeng-multiselect.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}