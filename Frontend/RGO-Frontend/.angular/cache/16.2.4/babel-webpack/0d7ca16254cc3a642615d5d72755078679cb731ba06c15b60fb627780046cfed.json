{"ast":null,"code":"import { createEffect, ofType } from \"@ngrx/effects\";\nimport { getAllUsers, getAllUsersSuccess } from \"../actions/user.actions\";\nimport { map, exhaustMap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/services/user.service\";\nexport class UserEffects {\n  constructor(actions$, userService) {\n    this.actions$ = actions$;\n    this.userService = userService;\n    this.getUsers$ = createEffect(() => this.actions$.pipe(ofType(getAllUsers), exhaustMap(() => this.userService.getAllUsers().pipe(map(users => getAllUsersSuccess({\n      AllUsers: users\n    }))))));\n  }\n  static #_ = this.ɵfac = function UserEffects_Factory(t) {\n    return new (t || UserEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.UserService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserEffects,\n    factory: UserEffects.ɵfac\n  });\n}","map":{"version":3,"names":["createEffect","ofType","getAllUsers","getAllUsersSuccess","map","exhaustMap","UserEffects","constructor","actions$","userService","getUsers$","pipe","users","AllUsers","_","i0","ɵɵinject","i1","Actions","i2","UserService","_2","factory","ɵfac"],"sources":["C:\\Users\\HP\\Desktop\\GOP\\RGO-Client\\Frontend\\RGO-Frontend\\src\\app\\store\\effects\\user.effects.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\r\nimport { UserService } from \"src/app/services/user.service\";\r\nimport { getAllUsers, getAllUsersSuccess } from \"../actions/user.actions\";\r\nimport { map, exhaustMap } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class UserEffects{\r\n    constructor(private actions$ : Actions, private userService : UserService){}\r\n    \r\n    getUsers$ = createEffect( () =>\r\n        this.actions$.pipe(\r\n            ofType(getAllUsers),\r\n            exhaustMap(()=>\r\n                this.userService.getAllUsers().pipe(\r\n                    map(users => getAllUsersSuccess({AllUsers : users}))\r\n                )\r\n            )\r\n        )\r\n    );\r\n}"],"mappings":"AACA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAE7D,SAASC,WAAW,EAAEC,kBAAkB,QAAQ,yBAAyB;AACzE,SAASC,GAAG,EAAEC,UAAU,QAAQ,gBAAgB;;;;AAGhD,OAAM,MAAOC,WAAW;EACpBC,YAAoBC,QAAkB,EAAUC,WAAyB;IAArD,KAAAD,QAAQ,GAARA,QAAQ;IAAoB,KAAAC,WAAW,GAAXA,WAAW;IAE3D,KAAAC,SAAS,GAAGV,YAAY,CAAE,MACtB,IAAI,CAACQ,QAAQ,CAACG,IAAI,CACdV,MAAM,CAACC,WAAW,CAAC,EACnBG,UAAU,CAAC,MACP,IAAI,CAACI,WAAW,CAACP,WAAW,EAAE,CAACS,IAAI,CAC/BP,GAAG,CAACQ,KAAK,IAAIT,kBAAkB,CAAC;MAACU,QAAQ,EAAGD;IAAK,CAAC,CAAC,CAAC,CACvD,CACJ,CACJ,CACJ;EAX0E;EAAC,QAAAE,CAAA,G;qBADnER,WAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}