{"ast":null,"code":"import { API } from '../models/constants/urls.constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeRoleService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getAllRoles() {\n    return this.httpClient.get(`${API.HttpBaseURL}/employeerolemanager/get-all`);\n  }\n  getRoles(email) {\n    return this.httpClient.get(`${API.HttpBaseURL}/employeerolemanager/get?email=${encodeURIComponent(email)}`);\n  }\n  addRole(email, role) {\n    return this.httpClient.post(`${API.HttpBaseURL}/employeerolemanager/add?email=${encodeURIComponent(email)}&role=${encodeURIComponent(role)}`, {});\n  }\n  removeRole(email, role) {\n    return this.httpClient.delete(`${API.HttpBaseURL}/employeerolemanager/remove?email=${encodeURIComponent(email)}&role=${encodeURIComponent(role)}`);\n  }\n  static #_ = this.ɵfac = function EmployeeRoleService_Factory(t) {\n    return new (t || EmployeeRoleService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeeRoleService,\n    factory: EmployeeRoleService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["API","EmployeeRoleService","constructor","httpClient","getAllRoles","get","HttpBaseURL","getRoles","email","encodeURIComponent","addRole","role","post","removeRole","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\HP\\Desktop\\GOP\\RGO-Client\\Frontend\\RGO-Frontend\\src\\app\\services\\employee-role.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { API } from '../models/constants/urls.constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeRoleService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAllRoles(): Observable<string[]> {\r\n    return this.httpClient.get<string[]>(`${API.HttpBaseURL}/employeerolemanager/get-all`);\r\n  }\r\n\r\n  getRoles(email: string): Observable<string[]> {\r\n    return this.httpClient.get<string[]>(`${API.HttpBaseURL}/employeerolemanager/get?email=${encodeURIComponent(email)}`);\r\n  }\r\n\r\n  addRole(email: string, role: string): Observable<any> {\r\n    return this.httpClient.post<any>(`${API.HttpBaseURL}/employeerolemanager/add?email=${encodeURIComponent(email)}&role=${encodeURIComponent(role)}`, {});\r\n  }\r\n\r\n  removeRole(email: string, role: string): Observable<any> {\r\n    return this.httpClient.delete<any>(`${API.HttpBaseURL}/employeerolemanager/remove?email=${encodeURIComponent(email)}&role=${encodeURIComponent(role)}`);\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,GAAG,QAAQ,oCAAoC;;;AAKxD,OAAM,MAAOC,mBAAmB;EAE9BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAE9CC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAW,GAAGL,GAAG,CAACM,WAAW,8BAA8B,CAAC;EACxF;EAEAC,QAAQA,CAACC,KAAa;IACpB,OAAO,IAAI,CAACL,UAAU,CAACE,GAAG,CAAW,GAAGL,GAAG,CAACM,WAAW,kCAAkCG,kBAAkB,CAACD,KAAK,CAAC,EAAE,CAAC;EACvH;EAEAE,OAAOA,CAACF,KAAa,EAAEG,IAAY;IACjC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAM,GAAGZ,GAAG,CAACM,WAAW,kCAAkCG,kBAAkB,CAACD,KAAK,CAAC,SAASC,kBAAkB,CAACE,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;EACxJ;EAEAE,UAAUA,CAACL,KAAa,EAAEG,IAAY;IACpC,OAAO,IAAI,CAACR,UAAU,CAACW,MAAM,CAAM,GAAGd,GAAG,CAACM,WAAW,qCAAqCG,kBAAkB,CAACD,KAAK,CAAC,SAASC,kBAAkB,CAACE,IAAI,CAAC,EAAE,CAAC;EACzJ;EAAC,QAAAI,CAAA,G;qBAlBUd,mBAAmB,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAnBnB,mBAAmB;IAAAoB,OAAA,EAAnBpB,mBAAmB,CAAAqB,IAAA;IAAAC,UAAA,EAFlB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}