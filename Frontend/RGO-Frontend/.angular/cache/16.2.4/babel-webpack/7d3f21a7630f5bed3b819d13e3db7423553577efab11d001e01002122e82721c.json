{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { statuses } from 'src/app/models/constants/statuses.constants';\nimport { dataTypes } from 'src/app/models/constants/types.constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/field-code.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"ng-angular-popup\";\nfunction NewFieldCodeComponent_small_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 34);\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewFieldCodeComponent_small_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 34);\n    i0.ɵɵtext(1, \"Field with this name already exists\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewFieldCodeComponent_small_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 34);\n    i0.ɵɵtext(1, \"Code is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewFieldCodeComponent_option_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", status_r9.value, \" \");\n  }\n}\nfunction NewFieldCodeComponent_small_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 34);\n    i0.ɵɵtext(1, \"Status is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewFieldCodeComponent_option_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r10.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r10.value, \" \");\n  }\n}\nfunction NewFieldCodeComponent_small_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 34);\n    i0.ɵɵtext(1, \"Type is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewFieldCodeComponent_div_46_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"label\", 36);\n    i0.ɵɵtext(2, \"Add Option\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function NewFieldCodeComponent_div_46_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.addOption());\n    });\n    i0.ɵɵtext(4, \" + \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction NewFieldCodeComponent_div_47_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 40)(2, \"label\", 41);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 42);\n    i0.ɵɵelementStart(5, \"button\", 43);\n    i0.ɵɵlistener(\"click\", function NewFieldCodeComponent_div_47_div_1_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const i_r15 = restoredCtx.index;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.removeOption(i_r15));\n    });\n    i0.ɵɵtext(6, \" - \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r15 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"option\", i_r15, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Option \", i_r15 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"option\", i_r15, \"\");\n    i0.ɵɵproperty(\"formControlName\", i_r15);\n  }\n}\nfunction NewFieldCodeComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 38);\n    i0.ɵɵtemplate(1, NewFieldCodeComponent_div_47_div_1_Template, 7, 4, \"div\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.options.controls);\n  }\n}\nexport let NewFieldCodeComponent = /*#__PURE__*/(() => {\n  class NewFieldCodeComponent {\n    constructor(fieldCodeService, fb, toast) {\n      this.fieldCodeService = fieldCodeService;\n      this.fb = fb;\n      this.toast = toast;\n      this.statuses = statuses;\n      this.dataTypes = dataTypes;\n      this.isUnique = true;\n      this.initializeForm();\n    }\n    ngOnInit() {\n      this.fieldCodeService.getAllFieldCodes().subscribe({\n        next: fieldCodes => {\n          this.fieldCodes = fieldCodes;\n        },\n        error: error => {}\n      });\n    }\n    initializeForm() {\n      this.newFieldCodeForm = this.fb.group({\n        fieldCode: this.fb.group({\n          code: ['', Validators.required],\n          name: ['', [Validators.required]],\n          description: [''],\n          regex: [''],\n          type: ['', Validators.required],\n          status: ['', Validators.required],\n          option: [''],\n          internal: [false],\n          internalTable: [''],\n          options: this.fb.array([])\n        })\n      });\n      this.isUnique = true;\n    }\n    get options() {\n      return this.newFieldCodeForm.get('fieldCode.options');\n    }\n    addOption() {\n      this.options.push(this.fb.control(''));\n    }\n    removeOption(index) {\n      this.options.removeAt(index);\n    }\n    onSubmit() {\n      if (this.newFieldCodeForm.valid) {\n        const {\n          fieldCode\n        } = this.newFieldCodeForm.value;\n        const optionValue = fieldCode.option;\n        const optionsArray = this.options.value.map((optionValue, index) => {\n          return {\n            id: index,\n            fieldCodeId: 0,\n            option: optionValue\n          };\n        });\n        const fieldCodeDto = {\n          id: 0,\n          code: fieldCode.code,\n          name: fieldCode.name,\n          description: fieldCode.description,\n          regex: fieldCode.regex,\n          type: parseInt(fieldCode.type),\n          status: parseInt(fieldCode.status),\n          internal: fieldCode.internal,\n          internalTable: fieldCode.internalTable,\n          options: optionsArray\n        };\n        this.fieldCodeService.saveFieldCode(fieldCodeDto).subscribe({\n          next: data => {\n            this.toast.success({\n              detail: \"Field Code saved!\",\n              position: 'topRight'\n            });\n            this.newFieldCodeForm.disable();\n          },\n          error: error => {\n            if (error.error === \"Field with that name found\") {\n              this.isUnique = false;\n            } else {\n              this.toast.error({\n                detail: \"Error\",\n                summary: error,\n                duration: 5000,\n                position: 'topRight'\n              });\n            }\n          }\n        });\n      }\n    }\n    static #_ = this.ɵfac = function NewFieldCodeComponent_Factory(t) {\n      return new (t || NewFieldCodeComponent)(i0.ɵɵdirectiveInject(i1.FieldCodeService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.NgToastService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NewFieldCodeComponent,\n      selectors: [[\"app-new-field-code\"]],\n      decls: 59,\n      vars: 12,\n      consts: [[1, \"wrapper\"], [\"data-color\", \"danger\", \"data-background-color\", \"white\", \"data-image\", \"./assets/img/sidebar-1.jpg\", 1, \"sidebar\"], [1, \"sidebar-background\", 2, \"background-image\", \"url(./assets/img/sidebar-4.jpg)\"], [1, \"main-panel\"], [1, \"m-3\", \"border-bottom\"], [1, \"page-heading\", \"border-bottom\"], [2, \"overflow\", \"auto\"], [1, \"container-fluid\"], [3, \"formGroup\", \"submit\"], [1, \"row\"], [1, \"col-sm-6\"], [\"formGroupName\", \"fieldCode\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"code\", 1, \"form-label\"], [\"id\", \"code\", \"type\", \"text\", \"formControlName\", \"code\", 1, \"form-control\"], [\"for\", \"description\", 1, \"form-label\"], [\"id\", \"description\", \"type\", \"text\", \"formControlName\", \"description\", 1, \"form-control\"], [\"for\", \"regex\", 1, \"form-label\"], [\"id\", \"regex\", \"type\", \"text\", \"formControlName\", \"regex\", 1, \"form-control\"], [\"for\", \"status\", 1, \"form-label\"], [\"id\", \"status\", \"formControlName\", \"status\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"type\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"type\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"mb-3\", 4, \"ngIf\"], [\"formArrayName\", \"options\", 4, \"ngIf\"], [\"id\", \"internal\", \"type\", \"checkbox\", \"formControlName\", \"internal\", 1, \"form-check-input\"], [\"for\", \"internal\", 1, \"form-check-label\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"href\", \"/home\"], [1, \"btn\", \"btn-primary\"], [1, \"text-danger\"], [3, \"value\"], [\"for\", \"option\", 1, \"form-label\"], [\"id\", \"btnAddOption\", \"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"formArrayName\", \"options\"], [4, \"ngFor\", \"ngForOf\"], [1, \"input-group\"], [\"id\", \"lblOption\", 1, \"form-label\", 3, \"for\"], [\"type\", \"text\", 1, \"form-control\", 3, \"id\", \"formControlName\"], [\"id\", \"btnRemoveOption\", \"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n      template: function NewFieldCodeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵelement(2, \"app-sidebar\")(3, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵelement(5, \"app-header\");\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"h1\", 5);\n          i0.ɵɵtext(8, \" New Field Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 6)(10, \"div\", 7)(11, \"form\", 8);\n          i0.ɵɵlistener(\"submit\", function NewFieldCodeComponent_Template_form_submit_11_listener($event) {\n            ctx.onSubmit();\n            return $event.preventDefault();\n          });\n          i0.ɵɵelementStart(12, \"div\", 9)(13, \"div\", 10)(14, \"div\", 11)(15, \"div\", 12)(16, \"label\", 13);\n          i0.ɵɵtext(17, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(19, NewFieldCodeComponent_small_19_Template, 2, 0, \"small\", 15);\n          i0.ɵɵtemplate(20, NewFieldCodeComponent_small_20_Template, 2, 0, \"small\", 15);\n          i0.ɵɵelementStart(21, \"div\", 12)(22, \"label\", 16);\n          i0.ɵɵtext(23, \"Code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"input\", 17);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(25, NewFieldCodeComponent_small_25_Template, 2, 0, \"small\", 15);\n          i0.ɵɵelementStart(26, \"div\", 12)(27, \"label\", 18);\n          i0.ɵɵtext(28, \"Description (optional)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"input\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"div\", 12)(31, \"label\", 20);\n          i0.ɵɵtext(32, \"RegEx (optional)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(33, \"input\", 21);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"div\", 12)(35, \"label\", 22);\n          i0.ɵɵtext(36, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"select\", 23);\n          i0.ɵɵtemplate(38, NewFieldCodeComponent_option_38_Template, 2, 2, \"option\", 24);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(39, NewFieldCodeComponent_small_39_Template, 2, 0, \"small\", 15);\n          i0.ɵɵelementStart(40, \"div\", 12)(41, \"label\", 25);\n          i0.ɵɵtext(42, \"Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"select\", 26);\n          i0.ɵɵlistener(\"ngModelChange\", function NewFieldCodeComponent_Template_select_ngModelChange_43_listener($event) {\n            return ctx.selectedType = $event;\n          });\n          i0.ɵɵtemplate(44, NewFieldCodeComponent_option_44_Template, 2, 2, \"option\", 24);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(45, NewFieldCodeComponent_small_45_Template, 2, 0, \"small\", 15);\n          i0.ɵɵtemplate(46, NewFieldCodeComponent_div_46_Template, 5, 0, \"div\", 27);\n          i0.ɵɵtemplate(47, NewFieldCodeComponent_div_47_Template, 2, 1, \"div\", 28);\n          i0.ɵɵelementStart(48, \"div\", 12);\n          i0.ɵɵelement(49, \"input\", 29);\n          i0.ɵɵelementStart(50, \"label\", 30);\n          i0.ɵɵtext(51, \"Internal\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(52, \"div\", 12)(53, \"button\", 31);\n          i0.ɵɵtext(54, \"Submit\");\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(55, \"div\", 12)(56, \"a\", 32)(57, \"button\", 33);\n          i0.ɵɵtext(58, \"Back\");\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_5_0;\n          let tmp_8_0;\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"formGroup\", ctx.newFieldCodeForm);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.newFieldCodeForm.get(\"fieldCode.name\")) == null ? null : tmp_1_0.dirty) && ctx.newFieldCodeForm.hasError(\"required\", \"fieldCode.name\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isUnique && !ctx.newFieldCodeForm.hasError(\"required\", \"fieldCode.name\") && ((tmp_2_0 = ctx.newFieldCodeForm.get(\"fieldCode.name\")) == null ? null : tmp_2_0.dirty));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.newFieldCodeForm.get(\"fieldCode.code\")) == null ? null : tmp_3_0.dirty) && ctx.newFieldCodeForm.hasError(\"required\", \"fieldCode.code\"));\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngForOf\", ctx.statuses);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.newFieldCodeForm.get(\"fieldCode.status\")) == null ? null : tmp_5_0.touched) && ctx.newFieldCodeForm.hasError(\"required\", \"fieldCode.status\"));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedType);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.dataTypes);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx.newFieldCodeForm.get(\"fieldCode.type\")) == null ? null : tmp_8_0.touched) && ctx.newFieldCodeForm.hasError(\"required\", \"fieldCode.type\"));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedType == 4);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedType == 4);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"disabled\", !ctx.newFieldCodeForm.valid);\n        }\n      },\n      styles: [\".ng-valid[required][_ngcontent-%COMP%], .ng-valid.required[_ngcontent-%COMP%]{border-left:5px solid #42A948}#btnRemoveOption[_ngcontent-%COMP%], #btnAddOption[_ngcontent-%COMP%]{border:1px outset;height:30px;width:30px;border-radius:20px;padding:0;margin-left:20px}#lblOption[_ngcontent-%COMP%]{margin-right:15px}\"]\n    });\n  }\n  return NewFieldCodeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}