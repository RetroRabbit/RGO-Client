{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/HP/Desktop/GOP/RGO-Client/Frontend/RGO-Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom, take, EMPTY, catchError, map } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { API } from '../models/constants/urls.constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/auth0-angular\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@ngrx/store\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(auth, client, store) {\n      this.auth = auth;\n      this.client = client;\n      this.store = store;\n    }\n    isAuthenticated() {\n      return this.auth.isAuthenticated$.pipe(take(1));\n    }\n    login(employeeEmail) {\n      let header = new HttpHeaders();\n      return this.client.post(`${API.HttpsBaseURL}/auth/login?email=${encodeURIComponent(employeeEmail ?? \"\")}`, \"\", {\n        headers: header,\n        responseType: 'text'\n      }).pipe(map(type => type), catchError(err => {\n        if (err.status == 404) {\n          window.alert(\"Contact admin to create your account\");\n        }\n        return EMPTY;\n      }));\n    }\n    FetchRoles(employeeEmail) {\n      let header = new HttpHeaders();\n      header.append('Content-Type', 'application/json');\n      return this.client.get(`${API.HttpsBaseURL}/auth/roles?email=${encodeURIComponent(employeeEmail ?? \"\")}`, {\n        headers: header,\n        responseType: 'text'\n      }).pipe(map(type => type), catchError(err => {\n        if (err.status == 404) {\n          window.alert(\"Contact admin to create your account\");\n        }\n        return EMPTY;\n      }));\n    }\n    getToken() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        return yield firstValueFrom(_this.store.select('app'));\n      })();\n    }\n    static #_ = this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.Store));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}