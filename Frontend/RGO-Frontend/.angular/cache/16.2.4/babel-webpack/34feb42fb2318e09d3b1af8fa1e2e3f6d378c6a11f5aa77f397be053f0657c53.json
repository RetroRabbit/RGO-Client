{"ast":null,"code":"import * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, Input, Output, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i3 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport * as i7 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\nimport { DomHandler } from 'primeng/dom';\nimport * as i4 from 'primeng/overlay';\nimport { OverlayModule } from 'primeng/overlay';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i6 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i5 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ObjectUtils, UniqueComponentId } from 'primeng/utils';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { ChevronDownIcon } from 'primeng/icons/chevrondown';\nimport { SearchIcon } from 'primeng/icons/search';\nfunction DropdownItem_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate((tmp_0_0 = ctx_r0.label) !== null && tmp_0_0 !== undefined ? tmp_0_0 : \"empty\");\n  }\n}\nfunction DropdownItem_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    height: a0\n  };\n};\nconst _c1 = function (a1, a2) {\n  return {\n    \"p-dropdown-item\": true,\n    \"p-highlight\": a1,\n    \"p-disabled\": a2\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nconst _c3 = [\"container\"];\nconst _c4 = [\"filter\"];\nconst _c5 = [\"in\"];\nconst _c6 = [\"editableInput\"];\nconst _c7 = [\"items\"];\nconst _c8 = [\"scroller\"];\nconst _c9 = [\"overlay\"];\nfunction Dropdown_span_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r10.label || \"empty\");\n  }\n}\nfunction Dropdown_span_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c10 = function (a1) {\n  return {\n    \"p-dropdown-label p-inputtext\": true,\n    \"p-dropdown-label-empty\": a1\n  };\n};\nfunction Dropdown_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtemplate(1, Dropdown_span_5_ng_container_1_Template, 2, 1, \"ng-container\", 8);\n    i0.ɵɵtemplate(2, Dropdown_span_5_ng_container_2_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c10, ctx_r2.label == null || ctx_r2.label.length === 0))(\"pTooltip\", ctx_r2.tooltip)(\"tooltipPosition\", ctx_r2.tooltipPosition)(\"positionStyle\", ctx_r2.tooltipPositionStyle)(\"tooltipStyleClass\", ctx_r2.tooltipStyleClass);\n    i0.ɵɵattribute(\"id\", ctx_r2.labelId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.selectedItemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.selectedItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(11, _c2, ctx_r2.selectedOption));\n  }\n}\nconst _c11 = function (a1) {\n  return {\n    \"p-dropdown-label p-inputtext p-placeholder\": true,\n    \"p-dropdown-label-empty\": a1\n  };\n};\nfunction Dropdown_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c11, ctx_r3.placeholder == null || ctx_r3.placeholder.length === 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.placeholder || \"empty\");\n  }\n}\nfunction Dropdown_input_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 17, 18);\n    i0.ɵɵlistener(\"input\", function Dropdown_input_7_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onEditableInputChange($event));\n    })(\"focus\", function Dropdown_input_7_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onEditableInputFocus($event));\n    })(\"blur\", function Dropdown_input_7_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onInputBlur($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r4.disabled);\n    i0.ɵɵattribute(\"maxlength\", ctx_r4.maxlength)(\"placeholder\", ctx_r4.placeholder)(\"aria-expanded\", ctx_r4.overlayVisible);\n  }\n}\nfunction Dropdown_ng_container_8_TimesIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"TimesIcon\", 21);\n    i0.ɵɵlistener(\"click\", function Dropdown_ng_container_8_TimesIcon_1_Template_TimesIcon_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.clear($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-dropdown-clear-icon\");\n  }\n}\nfunction Dropdown_ng_container_8_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Dropdown_ng_container_8_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_container_8_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dropdown_ng_container_8_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵlistener(\"click\", function Dropdown_ng_container_8_span_2_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r23.clear($event));\n    });\n    i0.ɵɵtemplate(1, Dropdown_ng_container_8_span_2_1_Template, 1, 0, null, 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r18.clearIconTemplate);\n  }\n}\nfunction Dropdown_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_container_8_TimesIcon_1_Template, 1, 1, \"TimesIcon\", 19);\n    i0.ɵɵtemplate(2, Dropdown_ng_container_8_span_2_Template, 2, 1, \"span\", 20);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.clearIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.clearIconTemplate);\n  }\n}\nfunction Dropdown_ng_container_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 26);\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r25.dropdownIcon);\n  }\n}\nfunction Dropdown_ng_container_10_ChevronDownIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronDownIcon\", 27);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-dropdown-trigger-icon\");\n  }\n}\nfunction Dropdown_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_container_10_span_1_Template, 1, 1, \"span\", 24);\n    i0.ɵɵtemplate(2, Dropdown_ng_container_10_ChevronDownIcon_2_Template, 1, 1, \"ChevronDownIcon\", 25);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.dropdownIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r6.dropdownIcon);\n  }\n}\nfunction Dropdown_span_11_1_ng_template_0_Template(rf, ctx) {}\nfunction Dropdown_span_11_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_span_11_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dropdown_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 28);\n    i0.ɵɵtemplate(1, Dropdown_span_11_1_Template, 1, 0, null, 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.dropdownIconTemplate);\n  }\n}\nfunction Dropdown_ng_template_14_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_14_div_2_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c12 = function (a0) {\n  return {\n    options: a0\n  };\n};\nfunction Dropdown_ng_template_14_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_14_div_2_ng_container_1_ng_container_1_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r36 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r36.filterTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c12, ctx_r36.filterOptions));\n  }\n}\nfunction Dropdown_ng_template_14_div_2_ng_template_2_SearchIcon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SearchIcon\", 27);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-dropdown-filter-icon\");\n  }\n}\nfunction Dropdown_ng_template_14_div_2_ng_template_2_span_4_1_ng_template_0_Template(rf, ctx) {}\nfunction Dropdown_ng_template_14_div_2_ng_template_2_span_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_14_div_2_ng_template_2_span_4_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Dropdown_ng_template_14_div_2_ng_template_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 41);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_14_div_2_ng_template_2_span_4_1_Template, 1, 0, null, 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r42.filterIconTemplate);\n  }\n}\nfunction Dropdown_ng_template_14_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"input\", 38, 39);\n    i0.ɵɵlistener(\"keydown.enter\", function Dropdown_ng_template_14_div_2_ng_template_2_Template_input_keydown_enter_1_listener($event) {\n      return $event.preventDefault();\n    })(\"keydown\", function Dropdown_ng_template_14_div_2_ng_template_2_Template_input_keydown_1_listener($event) {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r46 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r46.onKeydown($event, false));\n    })(\"input\", function Dropdown_ng_template_14_div_2_ng_template_2_Template_input_input_1_listener($event) {\n      i0.ɵɵrestoreView(_r47);\n      const ctx_r48 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r48.onFilterInputChange($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, Dropdown_ng_template_14_div_2_ng_template_2_SearchIcon_3_Template, 1, 1, \"SearchIcon\", 25);\n    i0.ɵɵtemplate(4, Dropdown_ng_template_14_div_2_ng_template_2_span_4_Template, 2, 1, \"span\", 40);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r38 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r38.filterValue || \"\");\n    i0.ɵɵattribute(\"placeholder\", ctx_r38.filterPlaceholder)(\"aria-label\", ctx_r38.ariaFilterLabel)(\"aria-activedescendant\", ctx_r38.overlayVisible ? \"p-highlighted-option\" : ctx_r38.labelId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r38.filterIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r38.filterIconTemplate);\n  }\n}\nfunction Dropdown_ng_template_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵlistener(\"click\", function Dropdown_ng_template_14_div_2_Template_div_click_0_listener($event) {\n      return $event.stopPropagation();\n    });\n    i0.ɵɵtemplate(1, Dropdown_ng_template_14_div_2_ng_container_1_Template, 2, 4, \"ng-container\", 35);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_14_div_2_ng_template_2_Template, 5, 6, \"ng-template\", null, 36, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r37 = i0.ɵɵreference(3);\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r30.filterTemplate)(\"ngIfElse\", _r37);\n  }\n}\nfunction Dropdown_ng_template_14_p_scroller_4_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c13 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    options: a1\n  };\n};\nfunction Dropdown_ng_template_14_p_scroller_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_14_p_scroller_4_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 15);\n  }\n  if (rf & 2) {\n    const items_r53 = ctx.$implicit;\n    const scrollerOptions_r54 = ctx.options;\n    i0.ɵɵnextContext(2);\n    const _r33 = i0.ɵɵreference(7);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r33)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c13, items_r53, scrollerOptions_r54));\n  }\n}\nfunction Dropdown_ng_template_14_p_scroller_4_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_14_p_scroller_4_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_14_p_scroller_4_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 15);\n  }\n  if (rf & 2) {\n    const scrollerOptions_r57 = ctx.options;\n    const ctx_r56 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r56.loaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c12, scrollerOptions_r57));\n  }\n}\nfunction Dropdown_ng_template_14_p_scroller_4_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_14_p_scroller_4_ng_container_3_ng_template_1_Template, 1, 4, \"ng-template\", 44);\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction Dropdown_ng_template_14_p_scroller_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r60 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-scroller\", 42, 43);\n    i0.ɵɵlistener(\"onLazyLoad\", function Dropdown_ng_template_14_p_scroller_4_Template_p_scroller_onLazyLoad_0_listener($event) {\n      i0.ɵɵrestoreView(_r60);\n      const ctx_r59 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r59.onLazyLoad.emit($event));\n    });\n    i0.ɵɵtemplate(2, Dropdown_ng_template_14_p_scroller_4_ng_template_2_Template, 1, 5, \"ng-template\", 13);\n    i0.ɵɵtemplate(3, Dropdown_ng_template_14_p_scroller_4_ng_container_3_Template, 2, 0, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(8, _c0, ctx_r31.scrollHeight));\n    i0.ɵɵproperty(\"items\", ctx_r31.optionsToDisplay)(\"itemSize\", ctx_r31.virtualScrollItemSize || ctx_r31._itemSize)(\"autoSize\", true)(\"lazy\", ctx_r31.lazy)(\"options\", ctx_r31.virtualScrollOptions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r31.loaderTemplate);\n  }\n}\nfunction Dropdown_ng_template_14_ng_container_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c14 = function () {\n  return {};\n};\nfunction Dropdown_ng_template_14_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_14_ng_container_5_ng_container_1_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r33 = i0.ɵɵreference(7);\n    const ctx_r32 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r33)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c13, ctx_r32.optionsToDisplay, i0.ɵɵpureFunction0(2, _c14)));\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_ng_container_2_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const optgroup_r72 = i0.ɵɵnextContext().$implicit;\n    const ctx_r73 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r73.getOptionGroupLabel(optgroup_r72) || \"empty\");\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_ng_container_2_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_ng_container_2_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c15 = function (a0, a1) {\n  return {\n    $implicit: a0,\n    selectedOption: a1\n  };\n};\nfunction Dropdown_ng_template_14_ng_template_6_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 50);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_14_ng_template_6_ng_container_2_ng_template_1_span_1_Template, 2, 1, \"span\", 8);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_14_ng_template_6_ng_container_2_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, Dropdown_ng_template_14_ng_template_6_ng_container_2_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 15);\n  }\n  if (rf & 2) {\n    const optgroup_r72 = ctx.$implicit;\n    const scrollerOptions_r63 = i0.ɵɵnextContext(2).options;\n    const _r67 = i0.ɵɵreference(5);\n    const ctx_r71 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c0, scrollerOptions_r63.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r71.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r71.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(8, _c2, optgroup_r72));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r67)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(10, _c15, ctx_r71.getOptionGroupChildren(optgroup_r72), ctx_r71.selectedOption));\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_14_ng_template_6_ng_container_2_ng_template_1_Template, 4, 13, \"ng-template\", 49);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const items_r62 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", items_r62);\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_14_ng_template_6_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const items_r62 = i0.ɵɵnextContext().$implicit;\n    const _r67 = i0.ɵɵreference(5);\n    const ctx_r66 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r67)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c15, items_r62, ctx_r66.selectedOption));\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_ng_template_4_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r87 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-dropdownItem\", 51);\n    i0.ɵɵlistener(\"onClick\", function Dropdown_ng_template_14_ng_template_6_ng_template_4_ng_template_0_Template_p_dropdownItem_onClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r87);\n      const ctx_r86 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r86.onItemClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r84 = ctx.$implicit;\n    const selectedOption_r82 = i0.ɵɵnextContext().selectedOption;\n    const ctx_r83 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"option\", option_r84)(\"selected\", selectedOption_r82 == option_r84)(\"label\", ctx_r83.getOptionLabel(option_r84))(\"disabled\", ctx_r83.isOptionDisabled(option_r84))(\"template\", ctx_r83.itemTemplate);\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Dropdown_ng_template_14_ng_template_6_ng_template_4_ng_template_0_Template, 1, 5, \"ng-template\", 49);\n  }\n  if (rf & 2) {\n    const options_r81 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngForOf\", options_r81);\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_li_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r89 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r89.emptyFilterMessageLabel, \" \");\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_li_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 53);\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 52);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_14_ng_template_6_li_6_ng_container_1_Template, 2, 1, \"ng-container\", 35);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_14_ng_template_6_li_6_ng_container_2_Template, 2, 0, \"ng-container\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r63 = i0.ɵɵnextContext().options;\n    const ctx_r69 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, scrollerOptions_r63.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r69.emptyFilterTemplate && !ctx_r69.emptyTemplate)(\"ngIfElse\", ctx_r69.emptyFilter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r69.emptyFilterTemplate || ctx_r69.emptyTemplate);\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_li_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r93 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r93.emptyMessageLabel, \" \");\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_li_7_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 54);\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 52);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_14_ng_template_6_li_7_ng_container_1_Template, 2, 1, \"ng-container\", 35);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_14_ng_template_6_li_7_ng_container_2_Template, 2, 0, \"ng-container\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r63 = i0.ɵɵnextContext().options;\n    const ctx_r70 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, scrollerOptions_r63.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r70.emptyTemplate)(\"ngIfElse\", ctx_r70.empty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r70.emptyTemplate);\n  }\n}\nfunction Dropdown_ng_template_14_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 45, 46);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_14_ng_template_6_ng_container_2_Template, 2, 1, \"ng-container\", 8);\n    i0.ɵɵtemplate(3, Dropdown_ng_template_14_ng_template_6_ng_container_3_Template, 2, 5, \"ng-container\", 8);\n    i0.ɵɵtemplate(4, Dropdown_ng_template_14_ng_template_6_ng_template_4_Template, 1, 1, \"ng-template\", null, 47, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(6, Dropdown_ng_template_14_ng_template_6_li_6_Template, 3, 6, \"li\", 48);\n    i0.ɵɵtemplate(7, Dropdown_ng_template_14_ng_template_6_li_7_Template, 3, 6, \"li\", 48);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const scrollerOptions_r63 = ctx.options;\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(scrollerOptions_r63.contentStyle);\n    i0.ɵɵproperty(\"ngClass\", scrollerOptions_r63.contentStyleClass);\n    i0.ɵɵattribute(\"id\", ctx_r34.listId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r34.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r34.group);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r34.filterValue && ctx_r34.isEmpty());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r34.filterValue && ctx_r34.isEmpty());\n  }\n}\nfunction Dropdown_ng_template_14_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Dropdown_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, Dropdown_ng_template_14_ng_container_1_Template, 1, 0, \"ng-container\", 23);\n    i0.ɵɵtemplate(2, Dropdown_ng_template_14_div_2_Template, 4, 2, \"div\", 30);\n    i0.ɵɵelementStart(3, \"div\", 31);\n    i0.ɵɵtemplate(4, Dropdown_ng_template_14_p_scroller_4_Template, 4, 10, \"p-scroller\", 32);\n    i0.ɵɵtemplate(5, Dropdown_ng_template_14_ng_container_5_Template, 2, 6, \"ng-container\", 8);\n    i0.ɵɵtemplate(6, Dropdown_ng_template_14_ng_template_6_Template, 8, 8, \"ng-template\", null, 33, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, Dropdown_ng_template_14_ng_container_8_Template, 1, 0, \"ng-container\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r9.panelStyleClass);\n    i0.ɵɵproperty(\"ngClass\", \"p-dropdown-panel p-component\")(\"ngStyle\", ctx_r9.panelStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.filter);\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r9.virtualScroll ? \"auto\" : ctx_r9.scrollHeight || \"auto\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.virtualScroll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r9.virtualScroll);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.footerTemplate);\n  }\n}\nconst _c16 = function (a1, a2, a3, a4) {\n  return {\n    \"p-dropdown p-component\": true,\n    \"p-disabled\": a1,\n    \"p-dropdown-open\": a2,\n    \"p-focus\": a3,\n    \"p-dropdown-clearable\": a4\n  };\n};\nconst DROPDOWN_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Dropdown),\n  multi: true\n};\nlet DropdownItem = /*#__PURE__*/(() => {\n  class DropdownItem {\n    option;\n    selected;\n    label;\n    disabled;\n    visible;\n    itemSize;\n    template;\n    onClick = new EventEmitter();\n    onOptionClick(event) {\n      this.onClick.emit({\n        originalEvent: event,\n        option: this.option\n      });\n    }\n    static ɵfac = function DropdownItem_Factory(t) {\n      return new (t || DropdownItem)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: DropdownItem,\n      selectors: [[\"p-dropdownItem\"]],\n      hostAttrs: [1, \"p-element\"],\n      inputs: {\n        option: \"option\",\n        selected: \"selected\",\n        label: \"label\",\n        disabled: \"disabled\",\n        visible: \"visible\",\n        itemSize: \"itemSize\",\n        template: \"template\"\n      },\n      outputs: {\n        onClick: \"onClick\"\n      },\n      decls: 3,\n      vars: 15,\n      consts: [[\"role\", \"option\", \"pRipple\", \"\", 3, \"ngStyle\", \"id\", \"ngClass\", \"click\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n      template: function DropdownItem_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"li\", 0);\n          i0.ɵɵlistener(\"click\", function DropdownItem_Template_li_click_0_listener($event) {\n            return ctx.onOptionClick($event);\n          });\n          i0.ɵɵtemplate(1, DropdownItem_span_1_Template, 2, 1, \"span\", 1);\n          i0.ɵɵtemplate(2, DropdownItem_ng_container_2_Template, 1, 0, \"ng-container\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(8, _c0, ctx.itemSize + \"px\"))(\"id\", ctx.selected ? \"p-highlighted-option\" : \"\")(\"ngClass\", i0.ɵɵpureFunction2(10, _c1, ctx.selected, ctx.disabled));\n          i0.ɵɵattribute(\"aria-label\", ctx.label)(\"aria-selected\", ctx.selected);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.template);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.template)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(13, _c2, ctx.option));\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.Ripple],\n      encapsulation: 2\n    });\n  }\n  return DropdownItem;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Dropdown also known as Select, is used to choose an item from a collection of options.\n * @group Components\n */\nlet Dropdown = /*#__PURE__*/(() => {\n  class Dropdown {\n    el;\n    renderer;\n    cd;\n    zone;\n    filterService;\n    config;\n    /**\n     * Height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\n     * @group Props\n     */\n    scrollHeight = '200px';\n    /**\n     * When specified, displays an input field to filter the items on keyup.\n     * @group Props\n     */\n    filter;\n    /**\n     * Name of the input element.\n     * @group Props\n     */\n    name;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Inline style of the overlay panel element.\n     * @group Props\n     */\n    panelStyle;\n    /**\n     * Style class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Style class of the overlay panel element.\n     * @group Props\n     */\n    panelStyleClass;\n    /**\n     * When present, it specifies that the component cannot be edited.\n     * @group Props\n     */\n    readonly;\n    /**\n     * When present, it specifies that an input field must be filled out before submitting the form.\n     * @group Props\n     */\n    required;\n    /**\n     * When present, custom value instead of predefined options can be entered using the editable input field.\n     * @group Props\n     */\n    editable;\n    /**\n     * Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    appendTo;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex;\n    /**\n     * Default text to display when no option is selected.\n     * @group Props\n     */\n    placeholder;\n    /**\n     * Placeholder text to show when filter input is empty.\n     * @group Props\n     */\n    filterPlaceholder;\n    /**\n     * Locale to use in filtering. The default locale is the host environment's current locale.\n     * @group Props\n     */\n    filterLocale;\n    /**\n     * Identifier of the accessible input element.\n     * @group Props\n     */\n    inputId;\n    /**\n     * A property to uniquely identify a value in options.\n     * @group Props\n     */\n    dataKey;\n    /**\n     * When filtering is enabled, filterBy decides which field or fields (comma separated) to search against.\n     * @group Props\n     */\n    filterBy;\n    /**\n     * When present, it specifies that the component should automatically get focus on load.\n     * @group Props\n     */\n    autofocus;\n    /**\n     * Clears the filter value when hiding the dropdown.\n     * @group Props\n     */\n    resetFilterOnHide = false;\n    /**\n     * Icon class of the dropdown icon.\n     * @group Props\n     */\n    dropdownIcon;\n    /**\n     * Name of the label field of an option.\n     * @group Props\n     */\n    optionLabel;\n    /**\n     * Name of the value field of an option.\n     * @group Props\n     */\n    optionValue;\n    /**\n     * Name of the disabled field of an option.\n     * @group Props\n     */\n    optionDisabled;\n    /**\n     * Name of the label field of an option group.\n     * @group Props\n     */\n    optionGroupLabel;\n    /**\n     * Name of the options field of an option group.\n     * @group Props\n     */\n    optionGroupChildren = 'items';\n    /**\n     * Whether to display the first item as the label if no placeholder is defined and value is null.\n     * @group Props\n     */\n    autoDisplayFirst = true;\n    /**\n     * Whether to display options as grouped when nested options are provided.\n     * @group Props\n     */\n    group;\n    /**\n     * When enabled, a clear icon is displayed to clear the value.\n     * @group Props\n     */\n    showClear;\n    /**\n     * Text to display when filtering does not return any results. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    emptyFilterMessage = '';\n    /**\n     * Text to display when there is no data. Defaults to global value in i18n translation configuration.\n     * @group Props\n     */\n    emptyMessage = '';\n    /**\n     * Defines if data is loaded and interacted with in lazy manner.\n     * @group Props\n     */\n    lazy = false;\n    /**\n     * Whether the data should be loaded on demand during scroll.\n     * @group Props\n     */\n    virtualScroll;\n    /**\n     * Height of an item in the list for VirtualScrolling.\n     * @group Props\n     */\n    virtualScrollItemSize;\n    /**\n     * Whether to use the scroller feature. The properties of scroller component can be used like an object in it.\n     * @group Props\n     */\n    virtualScrollOptions;\n    /**\n     * Whether to use overlay API feature. The properties of overlay API can be used like an object in it.\n     * @group Props\n     */\n    overlayOptions;\n    /**\n     * Defines a string that labels the filter input.\n     * @group Props\n     */\n    ariaFilterLabel;\n    /**\n     * Used to define a string that autocomplete attribute the current element.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * Defines how the items are filtered.\n     * @group Props\n     */\n    filterMatchMode = 'contains';\n    /**\n     * Maximum number of character allows in the editable input field.\n     * @group Props\n     */\n    maxlength;\n    /**\n     * Advisory information to display in a tooltip on hover.\n     * @group Props\n     */\n    tooltip = '';\n    /**\n     * Position of the tooltip.\n     * @group Props\n     */\n    tooltipPosition = 'right';\n    /**\n     * Type of CSS position.\n     * @group Props\n     */\n    tooltipPositionStyle = 'absolute';\n    /**\n     * Style class of the tooltip.\n     * @group Props\n     */\n    tooltipStyleClass;\n    /**\n     * Applies focus to the filter element when the overlay is shown.\n     * @group Props\n     */\n    autofocusFilter = true;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(_disabled) {\n      if (_disabled) {\n        this.focused = false;\n        if (this.overlayVisible) this.hide();\n      }\n      this._disabled = _disabled;\n      if (!this.cd.destroyed) {\n        this.cd.detectChanges();\n      }\n    }\n    /**\n     * Item size of item to be virtual scrolled.\n     * @group Props\n     * @deprecated use virtualScrollItemSize property instead.\n     */\n    get itemSize() {\n      return this._itemSize;\n    }\n    set itemSize(val) {\n      this._itemSize = val;\n      console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n    }\n    _itemSize;\n    /**\n     * Whether to automatically manage layering.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get autoZIndex() {\n      return this._autoZIndex;\n    }\n    set autoZIndex(val) {\n      this._autoZIndex = val;\n      console.warn('The autoZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    _autoZIndex;\n    /**\n     * Base zIndex value to use in layering.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get baseZIndex() {\n      return this._baseZIndex;\n    }\n    set baseZIndex(val) {\n      this._baseZIndex = val;\n      console.warn('The baseZIndex property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    _baseZIndex;\n    /**\n     * Transition options of the show animation.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get showTransitionOptions() {\n      return this._showTransitionOptions;\n    }\n    set showTransitionOptions(val) {\n      this._showTransitionOptions = val;\n      console.warn('The showTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    _showTransitionOptions;\n    /**\n     * Transition options of the hide animation.\n     * @group Props\n     * @deprecated since v14.2.0, use overlayOptions property instead.\n     */\n    get hideTransitionOptions() {\n      return this._hideTransitionOptions;\n    }\n    set hideTransitionOptions(val) {\n      this._hideTransitionOptions = val;\n      console.warn('The hideTransitionOptions property is deprecated since v14.2.0, use overlayOptions property instead.');\n    }\n    _hideTransitionOptions;\n    /**\n     * When specified, filter displays with this value.\n     * @group Props\n     */\n    get filterValue() {\n      return this._filterValue;\n    }\n    set filterValue(val) {\n      this._filterValue = val;\n      this.activateFilter();\n    }\n    /**\n     * An array of objects to display as the available options.\n     * @group Props\n     */\n    get options() {\n      return this._options;\n    }\n    set options(val) {\n      this._options = val;\n      this.optionsToDisplay = this._options;\n      this.updateSelectedOption(this.value);\n      this.selectedOption = this.findOption(this.value, this.optionsToDisplay);\n      if (!this.selectedOption && ObjectUtils.isNotEmpty(this.value) && !this.editable) {\n        this.value = null;\n        this.onModelChange(this.value);\n      }\n      this.optionsChanged = true;\n      if (this._filterValue && this._filterValue.length) {\n        this.activateFilter();\n      }\n    }\n    /**\n     * Callback to invoke when value of dropdown changes.\n     * @param {DropdownChangeEvent} event - custom change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    /**\n     * Callback to invoke when data is filtered.\n     * @param {DropdownFilterEvent} event - custom filter event.\n     * @group Emits\n     */\n    onFilter = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown gets focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown loses focus.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    /**\n     * Callback to invoke when component is clicked.\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    onClick = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown overlay gets visible.\n     * @param {AnimationEvent} event - Animation event.\n     * @group Emits\n     */\n    onShow = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown overlay gets hidden.\n     * @param {AnimationEvent} event - Animation event.\n     * @group Emits\n     */\n    onHide = new EventEmitter();\n    /**\n     * Callback to invoke when dropdown clears the value.\n     * @param {Event} event - Browser event.\n     * @group Emits\n     */\n    onClear = new EventEmitter();\n    /**\n     * Callback to invoke in lazy mode to load new data.\n     * @param {DropdownLazyLoadEvent} event - Lazy load event.\n     * @group Emits\n     */\n    onLazyLoad = new EventEmitter();\n    containerViewChild;\n    filterViewChild;\n    accessibleViewChild;\n    editableInputViewChild;\n    itemsViewChild;\n    scroller;\n    overlayViewChild;\n    templates;\n    _disabled;\n    itemsWrapper;\n    itemTemplate;\n    groupTemplate;\n    loaderTemplate;\n    selectedItemTemplate;\n    headerTemplate;\n    filterTemplate;\n    footerTemplate;\n    emptyFilterTemplate;\n    emptyTemplate;\n    dropdownIconTemplate;\n    clearIconTemplate;\n    filterIconTemplate;\n    filterOptions;\n    selectedOption;\n    _options;\n    value;\n    onModelChange = () => {};\n    onModelTouched = () => {};\n    optionsToDisplay;\n    hover;\n    focused;\n    overlayVisible;\n    optionsChanged;\n    panel;\n    dimensionsUpdated;\n    hoveredItem;\n    selectedOptionUpdated;\n    _filterValue;\n    searchValue;\n    searchIndex;\n    searchTimeout;\n    previousSearchChar;\n    currentSearchChar;\n    preventModelTouched;\n    id = UniqueComponentId();\n    labelId;\n    listId;\n    constructor(el, renderer, cd, zone, filterService, config) {\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.zone = zone;\n      this.filterService = filterService;\n      this.config = config;\n    }\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'item':\n            this.itemTemplate = item.template;\n            break;\n          case 'selectedItem':\n            this.selectedItemTemplate = item.template;\n            break;\n          case 'header':\n            this.headerTemplate = item.template;\n            break;\n          case 'filter':\n            this.filterTemplate = item.template;\n            break;\n          case 'footer':\n            this.footerTemplate = item.template;\n            break;\n          case 'emptyfilter':\n            this.emptyFilterTemplate = item.template;\n            break;\n          case 'empty':\n            this.emptyTemplate = item.template;\n            break;\n          case 'group':\n            this.groupTemplate = item.template;\n            break;\n          case 'loader':\n            this.loaderTemplate = item.template;\n            break;\n          case 'dropdownicon':\n            this.dropdownIconTemplate = item.template;\n            break;\n          case 'clearicon':\n            this.clearIconTemplate = item.template;\n            break;\n          case 'filtericon':\n            this.filterIconTemplate = item.template;\n            break;\n          default:\n            this.itemTemplate = item.template;\n            break;\n        }\n      });\n    }\n    ngOnInit() {\n      this.optionsToDisplay = this.options;\n      this.updateSelectedOption(null);\n      this.labelId = this.id + '_label';\n      this.listId = this.id + '_list';\n      if (this.filterBy) {\n        this.filterOptions = {\n          filter: value => this.onFilterInputChange(value),\n          reset: () => this.resetFilter()\n        };\n      }\n    }\n    ngAfterViewInit() {\n      if (this.editable) {\n        this.updateEditableLabel();\n      }\n    }\n    get label() {\n      if (typeof this.selectedOption === 'number') {\n        this.selectedOption = this.selectedOption.toString();\n      }\n      return this.selectedOption ? this.getOptionLabel(this.selectedOption) : null;\n    }\n    get emptyMessageLabel() {\n      return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n    }\n    get emptyFilterMessageLabel() {\n      return this.emptyFilterMessage || this.config.getTranslation(TranslationKeys.EMPTY_FILTER_MESSAGE);\n    }\n    get filled() {\n      if (typeof this.value === 'string') return !!this.value;\n      return this.value || this.value != null || this.value != undefined;\n    }\n    get isVisibleClearIcon() {\n      return this.value != null && this.value !== '' && this.showClear && !this.disabled;\n    }\n    updateEditableLabel() {\n      if (this.editableInputViewChild && this.editableInputViewChild.nativeElement) {\n        this.editableInputViewChild.nativeElement.value = this.selectedOption ? this.getOptionLabel(this.selectedOption) : this.value || '';\n      }\n    }\n    getOptionLabel(option) {\n      return this.optionLabel ? ObjectUtils.resolveFieldData(option, this.optionLabel) : option && option.label !== undefined ? option.label : option;\n    }\n    getOptionValue(option) {\n      return this.optionValue ? ObjectUtils.resolveFieldData(option, this.optionValue) : !this.optionLabel && option && option.value !== undefined ? option.value : option;\n    }\n    isOptionDisabled(option) {\n      return this.optionDisabled ? ObjectUtils.resolveFieldData(option, this.optionDisabled) : option && option.disabled !== undefined ? option.disabled : false;\n    }\n    getOptionGroupLabel(optionGroup) {\n      return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup && optionGroup.label !== undefined ? optionGroup.label : optionGroup;\n    }\n    getOptionGroupChildren(optionGroup) {\n      return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    onItemClick(event) {\n      const option = event.option;\n      if (!this.isOptionDisabled(option)) {\n        this.selectItem(event.originalEvent, option);\n        this.accessibleViewChild?.nativeElement.focus({\n          preventScroll: true\n        });\n      }\n      setTimeout(() => {\n        this.hide();\n      }, 1);\n    }\n    selectItem(event, option) {\n      if (this.selectedOption != option) {\n        this.selectedOption = option;\n        this.value = this.getOptionValue(option);\n        this.onModelChange(this.value);\n        this.updateEditableLabel();\n        this.onChange.emit({\n          originalEvent: event,\n          value: this.value\n        });\n      }\n    }\n    ngAfterViewChecked() {\n      if (this.optionsChanged && this.overlayVisible) {\n        this.optionsChanged = false;\n        this.zone.runOutsideAngular(() => {\n          setTimeout(() => {\n            if (this.overlayViewChild) {\n              this.overlayViewChild.alignOverlay();\n            }\n          }, 1);\n        });\n      }\n      if (this.selectedOptionUpdated && this.itemsWrapper) {\n        let selectedItem = DomHandler.findSingle(this.overlayViewChild?.overlayViewChild?.nativeElement, 'li.p-highlight');\n        if (selectedItem) {\n          DomHandler.scrollInView(this.itemsWrapper, selectedItem);\n        }\n        this.selectedOptionUpdated = false;\n      }\n    }\n    writeValue(value) {\n      if (this.filter) {\n        this.resetFilter();\n      }\n      this.value = value;\n      this.updateSelectedOption(value);\n      this.updateEditableLabel();\n      this.cd.markForCheck();\n    }\n    /**\n     * Callback to invoke on filter reset.\n     * @group Method\n     */\n    resetFilter() {\n      this._filterValue = null;\n      if (this.filterViewChild && this.filterViewChild.nativeElement) {\n        this.filterViewChild.nativeElement.value = '';\n      }\n      this.optionsToDisplay = this.options;\n    }\n    updateSelectedOption(val) {\n      this.selectedOption = this.findOption(val, this.optionsToDisplay);\n      if (this.autoDisplayFirst && !this.placeholder && !this.selectedOption && this.optionsToDisplay && this.optionsToDisplay.length && !this.editable) {\n        if (this.group) {\n          this.selectedOption = this.getOptionGroupChildren(this.optionsToDisplay[0])[0];\n        } else {\n          this.selectedOption = this.optionsToDisplay[0];\n        }\n        this.value = this.getOptionValue(this.selectedOption);\n        this.onModelChange(this.value);\n      }\n      this.selectedOptionUpdated = true;\n    }\n    registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n      this.disabled = val;\n      this.cd.markForCheck();\n    }\n    onMouseclick(event) {\n      if (this.disabled || this.readonly || this.isInputClick(event)) {\n        return;\n      }\n      this.onClick.emit(event);\n      this.accessibleViewChild?.nativeElement.focus({\n        preventScroll: true\n      });\n      if (this.overlayVisible) this.hide();else this.show();\n      this.cd.detectChanges();\n    }\n    isInputClick(event) {\n      const target = event.target;\n      return DomHandler.hasClass(target, 'p-dropdown-clear-icon') || target.closest('.p-dropdown-clear-icon') !== null || target.isSameNode(this.accessibleViewChild?.nativeElement) || this.editableInputViewChild && target.isSameNode(this.editableInputViewChild.nativeElement);\n    }\n    isEmpty() {\n      return !this.optionsToDisplay || this.optionsToDisplay && this.optionsToDisplay.length === 0;\n    }\n    onEditableInputFocus(event) {\n      this.focused = true;\n      this.hide();\n      this.onFocus.emit(event);\n    }\n    onEditableInputChange(event) {\n      this.value = event.target.value;\n      this.updateSelectedOption(this.value);\n      this.onModelChange(this.value);\n      this.onChange.emit({\n        originalEvent: event,\n        value: this.value\n      });\n    }\n    /**\n     * Displays the panel.\n     * @group Method\n     */\n    show() {\n      this.overlayVisible = true;\n      this.cd.markForCheck();\n    }\n    onOverlayAnimationStart(event) {\n      if (event.toState === 'visible') {\n        this.itemsWrapper = DomHandler.findSingle(this.overlayViewChild?.overlayViewChild?.nativeElement, this.virtualScroll ? '.p-scroller' : '.p-dropdown-items-wrapper');\n        this.virtualScroll && this.scroller?.setContentEl(this.itemsViewChild?.nativeElement);\n        if (this.options && this.options.length) {\n          if (this.virtualScroll) {\n            const selectedIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n            if (selectedIndex !== -1) {\n              this.scroller?.scrollToIndex(selectedIndex);\n            }\n          } else {\n            let selectedListItem = DomHandler.findSingle(this.itemsWrapper, '.p-dropdown-item.p-highlight');\n            if (selectedListItem) {\n              selectedListItem.scrollIntoView({\n                block: 'nearest',\n                inline: 'center'\n              });\n            }\n          }\n        }\n        if (this.filterViewChild && this.filterViewChild.nativeElement) {\n          this.preventModelTouched = true;\n          if (this.autofocusFilter) {\n            this.filterViewChild.nativeElement.focus();\n          }\n        }\n        this.onShow.emit(event);\n      }\n      if (event.toState === 'void') {\n        this.itemsWrapper = null;\n        this.onModelTouched();\n        this.onHide.emit(event);\n      }\n    }\n    /**\n     * Hides the panel.\n     * @group Method\n     */\n    hide() {\n      this.overlayVisible = false;\n      if (this.filter && this.resetFilterOnHide) {\n        this.resetFilter();\n      }\n      this.cd.markForCheck();\n    }\n    onInputFocus(event) {\n      this.focused = true;\n      this.onFocus.emit(event);\n    }\n    onInputBlur(event) {\n      this.focused = false;\n      this.onBlur.emit(event);\n      if (!this.preventModelTouched) {\n        this.onModelTouched();\n      }\n      this.preventModelTouched = false;\n    }\n    findPrevEnabledOption(index) {\n      let prevEnabledOption;\n      if (this.optionsToDisplay && this.optionsToDisplay.length) {\n        for (let i = index - 1; 0 <= i; i--) {\n          let option = this.optionsToDisplay[i];\n          if (this.isOptionDisabled(option)) {\n            continue;\n          } else {\n            prevEnabledOption = option;\n            break;\n          }\n        }\n        if (!prevEnabledOption) {\n          for (let i = this.optionsToDisplay.length - 1; i >= index; i--) {\n            let option = this.optionsToDisplay[i];\n            if (this.isOptionDisabled(option)) {\n              continue;\n            } else {\n              prevEnabledOption = option;\n              break;\n            }\n          }\n        }\n      }\n      return prevEnabledOption;\n    }\n    findNextEnabledOption(index) {\n      let nextEnabledOption;\n      if (this.optionsToDisplay && this.optionsToDisplay.length) {\n        for (let i = index + 1; i < this.optionsToDisplay.length; i++) {\n          let option = this.optionsToDisplay[i];\n          if (this.isOptionDisabled(option)) {\n            continue;\n          } else {\n            nextEnabledOption = option;\n            break;\n          }\n        }\n        if (!nextEnabledOption) {\n          for (let i = 0; i < index; i++) {\n            let option = this.optionsToDisplay[i];\n            if (this.isOptionDisabled(option)) {\n              continue;\n            } else {\n              nextEnabledOption = option;\n              break;\n            }\n          }\n        }\n      }\n      return nextEnabledOption;\n    }\n    onKeydown(event, search) {\n      if (this.readonly || !this.optionsToDisplay || this.optionsToDisplay.length === null) {\n        return;\n      }\n      switch (event.which) {\n        //down\n        case 40:\n          if (!this.overlayVisible && event.altKey) {\n            this.show();\n          } else {\n            if (this.group) {\n              let selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n              if (selectedItemIndex !== -1) {\n                let nextItemIndex = selectedItemIndex.itemIndex + 1;\n                if (nextItemIndex < this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex]).length) {\n                  this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex])[nextItemIndex]);\n                  this.selectedOptionUpdated = true;\n                } else if (this.optionsToDisplay[selectedItemIndex.groupIndex + 1]) {\n                  this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex + 1])[0]);\n                  this.selectedOptionUpdated = true;\n                }\n              } else {\n                if (this.optionsToDisplay && this.optionsToDisplay.length > 0) {\n                  this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[0])[0]);\n                }\n              }\n            } else {\n              let selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n              let nextEnabledOption = this.findNextEnabledOption(selectedItemIndex);\n              if (nextEnabledOption) {\n                this.selectItem(event, nextEnabledOption);\n                this.selectedOptionUpdated = true;\n              }\n            }\n          }\n          event.preventDefault();\n          break;\n        //up\n        case 38:\n          if (this.group) {\n            let selectedItemIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n            if (selectedItemIndex !== -1) {\n              let prevItemIndex = selectedItemIndex.itemIndex - 1;\n              if (prevItemIndex >= 0) {\n                this.selectItem(event, this.getOptionGroupChildren(this.optionsToDisplay[selectedItemIndex.groupIndex])[prevItemIndex]);\n                this.selectedOptionUpdated = true;\n              } else if (prevItemIndex < 0) {\n                let prevGroup = this.optionsToDisplay[selectedItemIndex.groupIndex - 1];\n                if (prevGroup) {\n                  this.selectItem(event, this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1]);\n                  this.selectedOptionUpdated = true;\n                }\n              }\n            }\n          } else {\n            let selectedItemIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n            let prevEnabledOption = this.findPrevEnabledOption(selectedItemIndex);\n            if (prevEnabledOption) {\n              this.selectItem(event, prevEnabledOption);\n              this.selectedOptionUpdated = true;\n            }\n          }\n          event.preventDefault();\n          break;\n        //space\n        case 32:\n          if (search) {\n            if (!this.overlayVisible) {\n              this.show();\n            } else {\n              this.hide();\n            }\n            event.preventDefault();\n          }\n          break;\n        //enter\n        case 13:\n          if (this.overlayVisible && (!this.filter || this.optionsToDisplay && this.optionsToDisplay.length > 0)) {\n            this.hide();\n          } else if (!this.overlayVisible) {\n            this.show();\n          }\n          event.preventDefault();\n          break;\n        //escape and tab\n        case 27:\n        case 9:\n          this.hide();\n          event.preventDefault();\n          break;\n        //search item based on keyboard input\n        default:\n          if (search && !event.metaKey && event.which !== 17) {\n            this.search(event);\n          }\n          break;\n      }\n    }\n    search(event) {\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n      const char = event.key;\n      this.previousSearchChar = this.currentSearchChar;\n      this.currentSearchChar = char;\n      if (this.previousSearchChar === this.currentSearchChar) this.searchValue = this.currentSearchChar;else this.searchValue = this.searchValue ? this.searchValue + char : char;\n      let newOption;\n      if (this.group) {\n        let searchIndex = this.selectedOption ? this.findOptionGroupIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : {\n          groupIndex: 0,\n          itemIndex: 0\n        };\n        newOption = this.searchOptionWithinGroup(searchIndex);\n      } else {\n        let searchIndex = this.selectedOption ? this.findOptionIndex(this.getOptionValue(this.selectedOption), this.optionsToDisplay) : -1;\n        newOption = this.searchOption(++searchIndex);\n      }\n      if (newOption && !this.isOptionDisabled(newOption)) {\n        this.selectItem(event, newOption);\n        this.selectedOptionUpdated = true;\n      }\n      this.searchTimeout = setTimeout(() => {\n        this.searchValue = null;\n      }, 250);\n    }\n    searchOption(index) {\n      let option;\n      if (this.searchValue) {\n        option = this.searchOptionInRange(index, this.optionsToDisplay.length);\n        if (!option) {\n          option = this.searchOptionInRange(0, index);\n        }\n      }\n      return option;\n    }\n    searchOptionInRange(start, end) {\n      for (let i = start; i < end; i++) {\n        let opt = this.optionsToDisplay[i];\n        if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n          return opt;\n        }\n      }\n      return null;\n    }\n    searchOptionWithinGroup(index) {\n      let option;\n      if (this.searchValue) {\n        if (this.optionsToDisplay) {\n          for (let i = index.groupIndex; i < this.optionsToDisplay.length; i++) {\n            for (let j = index.groupIndex === i ? index.itemIndex + 1 : 0; j < this.getOptionGroupChildren(this.optionsToDisplay[i]).length; j++) {\n              let opt = this.getOptionGroupChildren(this.optionsToDisplay[i])[j];\n              if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n                return opt;\n              }\n            }\n          }\n          if (!option) {\n            for (let i = 0; i <= index.groupIndex; i++) {\n              for (let j = 0; j < (index.groupIndex === i ? index.itemIndex : this.getOptionGroupChildren(this.optionsToDisplay[i]).length); j++) {\n                let opt = this.getOptionGroupChildren(this.optionsToDisplay[i])[j];\n                if (this.getOptionLabel(opt).toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)) && !this.isOptionDisabled(opt)) {\n                  return opt;\n                }\n              }\n            }\n          }\n        }\n      }\n      return null;\n    }\n    findOptionIndex(val, opts) {\n      let index = -1;\n      if (opts) {\n        for (let i = 0; i < opts.length; i++) {\n          if (val == null && this.getOptionValue(opts[i]) == null || ObjectUtils.equals(val, this.getOptionValue(opts[i]), this.dataKey)) {\n            index = i;\n            break;\n          }\n        }\n      }\n      return index;\n    }\n    findOptionGroupIndex(val, opts) {\n      let groupIndex, itemIndex;\n      if (opts) {\n        for (let i = 0; i < opts.length; i++) {\n          groupIndex = i;\n          itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n          if (itemIndex !== -1) {\n            break;\n          }\n        }\n      }\n      if (itemIndex !== -1) {\n        return {\n          groupIndex: groupIndex,\n          itemIndex: itemIndex\n        };\n      } else {\n        return -1;\n      }\n    }\n    findOption(val, opts, inGroup) {\n      if (this.group && !inGroup) {\n        let opt;\n        if (opts && opts.length) {\n          for (let optgroup of opts) {\n            opt = this.findOption(val, this.getOptionGroupChildren(optgroup), true);\n            if (opt) {\n              break;\n            }\n          }\n        }\n        return opt;\n      } else {\n        let index = this.findOptionIndex(val, opts);\n        return index != -1 ? opts[index] : null;\n      }\n    }\n    onFilterInputChange(event) {\n      let inputValue = event.target.value?.trim();\n      if (inputValue && inputValue.length) {\n        this._filterValue = inputValue;\n        this.activateFilter();\n      } else {\n        this._filterValue = null;\n        this.optionsToDisplay = this.options;\n      }\n      this.virtualScroll && this.scroller?.scrollToIndex(0);\n      this.optionsChanged = true;\n      this.onFilter.emit({\n        originalEvent: event,\n        filter: this._filterValue\n      });\n    }\n    activateFilter() {\n      let searchFields = (this.filterBy || this.optionLabel || 'label').split(',');\n      if (this.options && this.options.length) {\n        if (this.group) {\n          let filteredGroups = [];\n          for (let optgroup of this.options) {\n            let filteredSubOptions = this.filterService.filter(this.getOptionGroupChildren(optgroup), searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n            if (filteredSubOptions && filteredSubOptions.length) {\n              filteredGroups.push({\n                ...optgroup,\n                ...{\n                  [this.optionGroupChildren]: filteredSubOptions\n                }\n              });\n            }\n          }\n          this.optionsToDisplay = filteredGroups;\n        } else {\n          this.optionsToDisplay = this.filterService.filter(this.options, searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n        }\n        this.optionsChanged = true;\n      }\n    }\n    applyFocus() {\n      if (this.editable) DomHandler.findSingle(this.el.nativeElement, '.p-dropdown-label.p-inputtext').focus();else DomHandler.findSingle(this.el.nativeElement, 'input[readonly]').focus();\n    }\n    /**\n     * Applies focus.\n     * @group Method\n     */\n    focus() {\n      this.applyFocus();\n    }\n    clear(event) {\n      this.value = null;\n      this.onModelChange(this.value);\n      this.onChange.emit({\n        originalEvent: event,\n        value: this.value\n      });\n      this.updateSelectedOption(this.value);\n      this.updateEditableLabel();\n      this.onClear.emit(event);\n    }\n    static ɵfac = function Dropdown_Factory(t) {\n      return new (t || Dropdown)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.FilterService), i0.ɵɵdirectiveInject(i3.PrimeNGConfig));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Dropdown,\n      selectors: [[\"p-dropdown\"]],\n      contentQueries: function Dropdown_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      viewQuery: function Dropdown_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c3, 5);\n          i0.ɵɵviewQuery(_c4, 5);\n          i0.ɵɵviewQuery(_c5, 5);\n          i0.ɵɵviewQuery(_c6, 5);\n          i0.ɵɵviewQuery(_c7, 5);\n          i0.ɵɵviewQuery(_c8, 5);\n          i0.ɵɵviewQuery(_c9, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accessibleViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editableInputViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemsViewChild = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.overlayViewChild = _t.first);\n        }\n      },\n      hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n      hostVars: 4,\n      hostBindings: function Dropdown_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focused || ctx.overlayVisible);\n        }\n      },\n      inputs: {\n        scrollHeight: \"scrollHeight\",\n        filter: \"filter\",\n        name: \"name\",\n        style: \"style\",\n        panelStyle: \"panelStyle\",\n        styleClass: \"styleClass\",\n        panelStyleClass: \"panelStyleClass\",\n        readonly: \"readonly\",\n        required: \"required\",\n        editable: \"editable\",\n        appendTo: \"appendTo\",\n        tabindex: \"tabindex\",\n        placeholder: \"placeholder\",\n        filterPlaceholder: \"filterPlaceholder\",\n        filterLocale: \"filterLocale\",\n        inputId: \"inputId\",\n        dataKey: \"dataKey\",\n        filterBy: \"filterBy\",\n        autofocus: \"autofocus\",\n        resetFilterOnHide: \"resetFilterOnHide\",\n        dropdownIcon: \"dropdownIcon\",\n        optionLabel: \"optionLabel\",\n        optionValue: \"optionValue\",\n        optionDisabled: \"optionDisabled\",\n        optionGroupLabel: \"optionGroupLabel\",\n        optionGroupChildren: \"optionGroupChildren\",\n        autoDisplayFirst: \"autoDisplayFirst\",\n        group: \"group\",\n        showClear: \"showClear\",\n        emptyFilterMessage: \"emptyFilterMessage\",\n        emptyMessage: \"emptyMessage\",\n        lazy: \"lazy\",\n        virtualScroll: \"virtualScroll\",\n        virtualScrollItemSize: \"virtualScrollItemSize\",\n        virtualScrollOptions: \"virtualScrollOptions\",\n        overlayOptions: \"overlayOptions\",\n        ariaFilterLabel: \"ariaFilterLabel\",\n        ariaLabel: \"ariaLabel\",\n        ariaLabelledBy: \"ariaLabelledBy\",\n        filterMatchMode: \"filterMatchMode\",\n        maxlength: \"maxlength\",\n        tooltip: \"tooltip\",\n        tooltipPosition: \"tooltipPosition\",\n        tooltipPositionStyle: \"tooltipPositionStyle\",\n        tooltipStyleClass: \"tooltipStyleClass\",\n        autofocusFilter: \"autofocusFilter\",\n        disabled: \"disabled\",\n        itemSize: \"itemSize\",\n        autoZIndex: \"autoZIndex\",\n        baseZIndex: \"baseZIndex\",\n        showTransitionOptions: \"showTransitionOptions\",\n        hideTransitionOptions: \"hideTransitionOptions\",\n        filterValue: \"filterValue\",\n        options: \"options\"\n      },\n      outputs: {\n        onChange: \"onChange\",\n        onFilter: \"onFilter\",\n        onFocus: \"onFocus\",\n        onBlur: \"onBlur\",\n        onClick: \"onClick\",\n        onShow: \"onShow\",\n        onHide: \"onHide\",\n        onClear: \"onClear\",\n        onLazyLoad: \"onLazyLoad\"\n      },\n      features: [i0.ɵɵProvidersFeature([DROPDOWN_VALUE_ACCESSOR])],\n      decls: 15,\n      vars: 33,\n      consts: [[3, \"ngClass\", \"ngStyle\", \"click\"], [\"container\", \"\"], [1, \"p-hidden-accessible\"], [\"type\", \"text\", \"readonly\", \"\", \"aria-haspopup\", \"listbox\", \"aria-haspopup\", \"listbox\", \"pAutoFocus\", \"\", \"role\", \"combobox\", 3, \"disabled\", \"autofocus\", \"focus\", \"blur\", \"keydown\"], [\"in\", \"\"], [3, \"ngClass\", \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\", 4, \"ngIf\"], [3, \"ngClass\", 4, \"ngIf\"], [\"type\", \"text\", \"class\", \"p-dropdown-label p-inputtext\", \"aria-haspopup\", \"listbox\", 3, \"disabled\", \"input\", \"focus\", \"blur\", 4, \"ngIf\"], [4, \"ngIf\"], [\"role\", \"button\", \"aria-label\", \"dropdown trigger\", \"aria-haspopup\", \"listbox\", 1, \"p-dropdown-trigger\"], [\"class\", \"p-dropdown-trigger-icon\", 4, \"ngIf\"], [3, \"visible\", \"options\", \"target\", \"appendTo\", \"autoZIndex\", \"baseZIndex\", \"showTransitionOptions\", \"hideTransitionOptions\", \"visibleChange\", \"onAnimationStart\", \"onHide\"], [\"overlay\", \"\"], [\"pTemplate\", \"content\"], [3, \"ngClass\", \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngClass\"], [\"type\", \"text\", \"aria-haspopup\", \"listbox\", 1, \"p-dropdown-label\", \"p-inputtext\", 3, \"disabled\", \"input\", \"focus\", \"blur\"], [\"editableInput\", \"\"], [3, \"styleClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-dropdown-clear-icon\", 3, \"click\", 4, \"ngIf\"], [3, \"styleClass\", \"click\"], [1, \"p-dropdown-clear-icon\", 3, \"click\"], [4, \"ngTemplateOutlet\"], [\"class\", \"p-dropdown-trigger-icon\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"styleClass\", 4, \"ngIf\"], [1, \"p-dropdown-trigger-icon\", 3, \"ngClass\"], [3, \"styleClass\"], [1, \"p-dropdown-trigger-icon\"], [3, \"ngClass\", \"ngStyle\"], [\"class\", \"p-dropdown-header\", 3, \"click\", 4, \"ngIf\"], [1, \"p-dropdown-items-wrapper\"], [3, \"items\", \"style\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\", 4, \"ngIf\"], [\"buildInItems\", \"\"], [1, \"p-dropdown-header\", 3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"builtInFilterElement\", \"\"], [1, \"p-dropdown-filter-container\"], [\"type\", \"text\", \"autocomplete\", \"off\", 1, \"p-dropdown-filter\", \"p-inputtext\", \"p-component\", 3, \"value\", \"keydown.enter\", \"keydown\", \"input\"], [\"filter\", \"\"], [\"class\", \"p-dropdown-filter-icon\", 4, \"ngIf\"], [1, \"p-dropdown-filter-icon\"], [3, \"items\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\"], [\"scroller\", \"\"], [\"pTemplate\", \"loader\"], [\"role\", \"listbox\", 1, \"p-dropdown-items\", 3, \"ngClass\"], [\"items\", \"\"], [\"itemslist\", \"\"], [\"class\", \"p-dropdown-empty-message\", 3, \"ngStyle\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-dropdown-item-group\", 3, \"ngStyle\"], [3, \"option\", \"selected\", \"label\", \"disabled\", \"template\", \"onClick\"], [1, \"p-dropdown-empty-message\", 3, \"ngStyle\"], [\"emptyFilter\", \"\"], [\"empty\", \"\"]],\n      template: function Dropdown_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0, 1);\n          i0.ɵɵlistener(\"click\", function Dropdown_Template_div_click_0_listener($event) {\n            return ctx.onMouseclick($event);\n          });\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"input\", 3, 4);\n          i0.ɵɵlistener(\"focus\", function Dropdown_Template_input_focus_3_listener($event) {\n            return ctx.onInputFocus($event);\n          })(\"blur\", function Dropdown_Template_input_blur_3_listener($event) {\n            return ctx.onInputBlur($event);\n          })(\"keydown\", function Dropdown_Template_input_keydown_3_listener($event) {\n            return ctx.onKeydown($event, true);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(5, Dropdown_span_5_Template, 3, 13, \"span\", 5);\n          i0.ɵɵtemplate(6, Dropdown_span_6_Template, 2, 4, \"span\", 6);\n          i0.ɵɵtemplate(7, Dropdown_input_7_Template, 2, 4, \"input\", 7);\n          i0.ɵɵtemplate(8, Dropdown_ng_container_8_Template, 3, 2, \"ng-container\", 8);\n          i0.ɵɵelementStart(9, \"div\", 9);\n          i0.ɵɵtemplate(10, Dropdown_ng_container_10_Template, 3, 2, \"ng-container\", 8);\n          i0.ɵɵtemplate(11, Dropdown_span_11_Template, 2, 1, \"span\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"p-overlay\", 11, 12);\n          i0.ɵɵlistener(\"visibleChange\", function Dropdown_Template_p_overlay_visibleChange_12_listener($event) {\n            return ctx.overlayVisible = $event;\n          })(\"onAnimationStart\", function Dropdown_Template_p_overlay_onAnimationStart_12_listener($event) {\n            return ctx.onOverlayAnimationStart($event);\n          })(\"onHide\", function Dropdown_Template_p_overlay_onHide_12_listener() {\n            return ctx.hide();\n          });\n          i0.ɵɵtemplate(14, Dropdown_ng_template_14_Template, 9, 11, \"ng-template\", 13);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.styleClass);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(28, _c16, ctx.disabled, ctx.overlayVisible, ctx.focused, ctx.showClear && !ctx.disabled))(\"ngStyle\", ctx.style);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.disabled)(\"autofocus\", ctx.autofocus);\n          i0.ɵɵattribute(\"id\", ctx.inputId)(\"placeholder\", ctx.placeholder)(\"aria-label\", ctx.ariaLabel)(\"aria-expanded\", false)(\"aria-labelledby\", ctx.ariaLabelledBy)(\"tabindex\", ctx.tabindex)(\"aria-activedescendant\", ctx.overlayVisible ? ctx.labelId : null);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.editable && ctx.label != null);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.editable && ctx.label == null);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.editable);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isVisibleClearIcon);\n          i0.ɵɵadvance(1);\n          i0.ɵɵattribute(\"aria-expanded\", ctx.overlayVisible);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.dropdownIconTemplate);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.dropdownIconTemplate);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"visible\", ctx.overlayVisible)(\"options\", ctx.overlayOptions)(\"target\", \"@parent\")(\"appendTo\", ctx.appendTo)(\"autoZIndex\", ctx.autoZIndex)(\"baseZIndex\", ctx.baseZIndex)(\"showTransitionOptions\", ctx.showTransitionOptions)(\"hideTransitionOptions\", ctx.hideTransitionOptions);\n        }\n      },\n      dependencies: function () {\n        return [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i4.Overlay, i3.PrimeTemplate, i5.Tooltip, i6.Scroller, i7.AutoFocus, TimesIcon, ChevronDownIcon, SearchIcon, DropdownItem];\n      },\n      styles: [\"@layer primeng{.p-dropdown{display:inline-flex;cursor:pointer;position:relative;-webkit-user-select:none;user-select:none}.p-dropdown-clear-icon{position:absolute;top:50%;margin-top:-.5rem}.p-dropdown-trigger{display:flex;align-items:center;justify-content:center;flex-shrink:0}.p-dropdown-label{display:block;white-space:nowrap;overflow:hidden;flex:1 1 auto;width:1%;text-overflow:ellipsis;cursor:pointer}.p-dropdown-label-empty{overflow:hidden;visibility:hidden}input.p-dropdown-label{cursor:default}.p-dropdown-items-wrapper{overflow:auto}.p-dropdown-item{cursor:pointer;font-weight:400;white-space:nowrap;position:relative;overflow:hidden}.p-dropdown-items{margin:0;padding:0;list-style-type:none}.p-dropdown-filter{width:100%}.p-dropdown-filter-container{position:relative}.p-dropdown-filter-icon{position:absolute;top:50%;margin-top:-.5rem}.p-fluid .p-dropdown{display:flex}.p-fluid .p-dropdown .p-dropdown-label{width:1%}}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return Dropdown;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DropdownModule = /*#__PURE__*/(() => {\n  class DropdownModule {\n    static ɵfac = function DropdownModule_Factory(t) {\n      return new (t || DropdownModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: DropdownModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, OverlayModule, SharedModule, TooltipModule, RippleModule, ScrollerModule, AutoFocusModule, TimesIcon, ChevronDownIcon, SearchIcon, OverlayModule, SharedModule, ScrollerModule]\n    });\n  }\n  return DropdownModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DROPDOWN_VALUE_ACCESSOR, Dropdown, DropdownItem, DropdownModule };\n//# sourceMappingURL=primeng-dropdown.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}