{"ast":null,"code":"import { GetLogin } from '../../store/actions/login-in.actions';\nimport { map, switchMap, take, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@auth0/auth0-angular\";\nimport * as i3 from \"../../services/auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"ngx-cookie-service\";\nexport let SignInComponent = /*#__PURE__*/(() => {\n  class SignInComponent {\n    constructor(store, auth, authService, router, cookieService) {\n      this.store = store;\n      this.auth = auth;\n      this.authService = authService;\n      this.router = router;\n      this.cookieService = cookieService;\n      this.token = null;\n      this.userEmail = null;\n    }\n    ngOnInit() {\n      this.token = this.cookieService.get('userToken');\n      this.userEmail = this.cookieService.get('userEmail');\n    }\n    Login() {\n      this.cookieService.deleteAll();\n      this.auth.loginWithPopup().pipe(take(1), switchMap(() => this.auth.user$.pipe(take(1))), switchMap(user => {\n        this.cookieService.set('userEmail', user?.email || '');\n        return this.authService.login(user?.email).pipe(tap(token => this.cookieService.set('userToken', token)), map(token => ({\n          user,\n          token\n        })));\n      }), switchMap(({\n        user,\n        token\n      }) => this.authService.FetchRoles(user?.email).pipe(tap(roles => this.cookieService.set('userType', roles)), map(roles => ({\n        user,\n        token,\n        roles\n      }))))).subscribe({\n        next: ({\n          user,\n          token,\n          roles\n        }) => {\n          const googleID = {\n            email: user?.email,\n            token: token,\n            roles: roles\n          };\n          this.store.dispatch(GetLogin({\n            payload: googleID\n          }));\n          this.router.navigateByUrl('/home');\n        },\n        error: error => {}\n      });\n    }\n    static #_ = this.ɵfac = function SignInComponent_Factory(t) {\n      return new (t || SignInComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.CookieService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SignInComponent,\n      selectors: [[\"app-sign-in\"]],\n      decls: 17,\n      vars: 0,\n      consts: [[1, \"vh-100\", \"gradient-custom\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-md-6\"], [1, \"card\"], [3, \"ngSubmit\"], [1, \"card-header\", \"card-header-primary\"], [1, \"card-title\"], [1, \"card-category\"], [1, \"card-body\", \"d-flex\", \"justify-content-center\", \"text-center\"], [1, \"login-p\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", 1, \"btn\", \"btn-primary\"]],\n      template: function SignInComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function SignInComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.Login();\n          });\n          i0.ɵɵelementStart(6, \"div\", 6)(7, \"h4\", 7);\n          i0.ɵɵtext(8, \"Grad Onboarding Platform\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p\", 8);\n          i0.ɵɵtext(10, \"Welcome to the grad program\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 9)(12, \"p\", 10);\n          i0.ɵɵtext(13, \" Maybe add some text here. I don't know, I'm not a designer. \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"div\", 9)(15, \"button\", 11);\n          i0.ɵɵtext(16, \" Login \");\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n      },\n      styles: [\".card[_ngcontent-%COMP%]{background-color:#424242;height:18rem}.login-p[_ngcontent-%COMP%]{color:#fff}\"]\n    });\n  }\n  return SignInComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}