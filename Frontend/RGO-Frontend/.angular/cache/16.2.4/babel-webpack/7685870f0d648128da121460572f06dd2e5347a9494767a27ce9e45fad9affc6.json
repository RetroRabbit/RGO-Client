{"ast":null,"code":"import { API } from '../models/constants/urls.constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RoleService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getAllRoles() {\n    return this.httpClient.get(`${API.HttpBaseURL}/rolemanage/getall`);\n  }\n  getRole(role) {\n    return this.httpClient.get(`${API.HttpBaseURL}/rolemanage/get?role=${encodeURIComponent(role)}`);\n  }\n  addRole(role, permission) {\n    return this.httpClient.post(`${API.HttpBaseURL}/rolemanage/add?role=${encodeURIComponent(role)}&permission=${encodeURIComponent(permission)}`, {});\n  }\n  deleteRole(role, permission) {\n    return this.httpClient.delete(`${API.HttpBaseURL}/rolemanage/remove?role=${encodeURIComponent(role)}&permission=${encodeURIComponent(permission)}`);\n  }\n  static #_ = this.ɵfac = function RoleService_Factory(t) {\n    return new (t || RoleService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RoleService,\n    factory: RoleService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["API","RoleService","constructor","httpClient","getAllRoles","get","HttpBaseURL","getRole","role","encodeURIComponent","addRole","permission","post","deleteRole","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\HP\\Desktop\\GOP\\RGO-Client\\Frontend\\RGO-Frontend\\src\\app\\services\\role.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { API } from '../models/constants/urls.constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getAllRoles(): Observable<Map<string, string[]>>{\r\n    return this.httpClient.get<Map<string, string[]>>(`${API.HttpBaseURL}/rolemanage/getall`);\r\n  }\r\n\r\n  getRole(role: string): Observable<Map<string, string[]>>{\r\n    return this.httpClient.get<Map<string, string[]>>(`${API.HttpBaseURL}/rolemanage/get?role=${encodeURIComponent(role)}`);\r\n  }\r\n\r\n  addRole(role: string, permission: any): Observable<any>{\r\n    return this.httpClient.post<any>(`${API.HttpBaseURL}/rolemanage/add?role=${encodeURIComponent(role)}&permission=${encodeURIComponent(permission)}`, {});\r\n  }\r\n\r\n  deleteRole(role: string, permission: string): Observable<any> {\r\n    return this.httpClient.delete<any>(`${API.HttpBaseURL}/rolemanage/remove?role=${encodeURIComponent(role)}&permission=${encodeURIComponent(permission)}`);\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,GAAG,QAAQ,oCAAoC;;;AAKxD,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAE9CC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAwB,GAAGL,GAAG,CAACM,WAAW,oBAAoB,CAAC;EAC3F;EAEAC,OAAOA,CAACC,IAAY;IAClB,OAAO,IAAI,CAACL,UAAU,CAACE,GAAG,CAAwB,GAAGL,GAAG,CAACM,WAAW,wBAAwBG,kBAAkB,CAACD,IAAI,CAAC,EAAE,CAAC;EACzH;EAEAE,OAAOA,CAACF,IAAY,EAAEG,UAAe;IACnC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAM,GAAGZ,GAAG,CAACM,WAAW,wBAAwBG,kBAAkB,CAACD,IAAI,CAAC,eAAeC,kBAAkB,CAACE,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC;EACzJ;EAEAE,UAAUA,CAACL,IAAY,EAAEG,UAAkB;IACzC,OAAO,IAAI,CAACR,UAAU,CAACW,MAAM,CAAM,GAAGd,GAAG,CAACM,WAAW,2BAA2BG,kBAAkB,CAACD,IAAI,CAAC,eAAeC,kBAAkB,CAACE,UAAU,CAAC,EAAE,CAAC;EAC1J;EAAC,QAAAI,CAAA,G;qBAlBUd,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXnB,WAAW;IAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}