{"ast":null,"code":"import { API } from '../models/constants/urls.constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FieldCodeService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getAllFieldCodes() {\n    return this.httpClient.get(`${API.HttpBaseURL}/fieldcode/get`);\n  }\n  saveFieldCode(fieldCodeDto) {\n    return this.httpClient.post(`${API.HttpBaseURL}/fieldcode/save`, fieldCodeDto);\n  }\n  updateFieldCode(fieldCodeData) {\n    return this.httpClient.put(`${API.HttpBaseURL}/fieldcode/update`, fieldCodeData);\n  }\n  deleteFieldCode(fieldCodeData) {\n    return this.httpClient.delete(`${API.HttpBaseURL}/fieldcode/delete`, {\n      body: fieldCodeData\n    });\n  }\n  static #_ = this.ɵfac = function FieldCodeService_Factory(t) {\n    return new (t || FieldCodeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FieldCodeService,\n    factory: FieldCodeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["API","FieldCodeService","constructor","httpClient","getAllFieldCodes","get","HttpBaseURL","saveFieldCode","fieldCodeDto","post","updateFieldCode","fieldCodeData","put","deleteFieldCode","delete","body","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\HP\\Desktop\\GOP\\RGO-Client\\Frontend\\RGO-Frontend\\src\\app\\services\\field-code.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FieldCode } from '../models/field-code.interface';\r\nimport { API } from '../models/constants/urls.constants';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class FieldCodeService {\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    getAllFieldCodes(): Observable<FieldCode[]> {\r\n        return this.httpClient.get<FieldCode[]>(`${API.HttpBaseURL}/fieldcode/get`);\r\n    }\r\n\r\n    saveFieldCode(fieldCodeDto:FieldCode): Observable<any> {\r\n        return this.httpClient.post<any>(`${API.HttpBaseURL}/fieldcode/save`, fieldCodeDto);\r\n    }\r\n\r\n    updateFieldCode(fieldCodeData: FieldCode): Observable<any> {\r\n        return this.httpClient.put<any>(`${API.HttpBaseURL}/fieldcode/update`, fieldCodeData\r\n        );\r\n    }\r\n\r\n    deleteFieldCode(fieldCodeData: FieldCode): Observable<any> {\r\n        return this.httpClient.delete<any>(`${API.HttpBaseURL}/fieldcode/delete`, {\r\n            body: fieldCodeData,\r\n        });\r\n    }\r\n}\r\n"],"mappings":"AAIA,SAASA,GAAG,QAAQ,oCAAoC;;;AAKxD,OAAM,MAAOC,gBAAgB;EACzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAE9CC,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAc,GAAGL,GAAG,CAACM,WAAW,gBAAgB,CAAC;EAC/E;EAEAC,aAAaA,CAACC,YAAsB;IAChC,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAM,GAAGT,GAAG,CAACM,WAAW,iBAAiB,EAAEE,YAAY,CAAC;EACvF;EAEAE,eAAeA,CAACC,aAAwB;IACpC,OAAO,IAAI,CAACR,UAAU,CAACS,GAAG,CAAM,GAAGZ,GAAG,CAACM,WAAW,mBAAmB,EAAEK,aAAa,CACnF;EACL;EAEAE,eAAeA,CAACF,aAAwB;IACpC,OAAO,IAAI,CAACR,UAAU,CAACW,MAAM,CAAM,GAAGd,GAAG,CAACM,WAAW,mBAAmB,EAAE;MACtES,IAAI,EAAEJ;KACT,CAAC;EACN;EAAC,QAAAK,CAAA,G;qBApBQf,gBAAgB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBpB,gBAAgB;IAAAqB,OAAA,EAAhBrB,gBAAgB,CAAAsB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}