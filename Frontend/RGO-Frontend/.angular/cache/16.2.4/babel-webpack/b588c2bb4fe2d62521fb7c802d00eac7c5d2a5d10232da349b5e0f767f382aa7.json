{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nfunction SidebarComponent_li_7_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 9);\n    i0.ɵɵlistener(\"click\", function SidebarComponent_li_7_a_1_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.CaptureEvent($event));\n    });\n    i0.ɵɵelementStart(1, \"i\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const menuItem_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(menuItem_r1.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(menuItem_r1.title);\n  }\n}\nfunction SidebarComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 7);\n    i0.ɵɵtemplate(1, SidebarComponent_li_7_a_1_Template, 5, 2, \"a\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const menuItem_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.IsMenuItemVisible(menuItem_r1));\n  }\n}\nexport const ROUTES = [{\n  title: 'Dashboard',\n  icon: 'dashboard',\n  requiredRole: []\n}, {\n  title: 'Employee Manager',\n  icon: 'people',\n  requiredRole: ['Admin', 'SuperAdmin']\n}, {\n  title: 'Charts',\n  icon: 'analytics',\n  requiredRole: []\n}, {\n  title: 'Role Manager',\n  icon: 'event_seat',\n  requiredRole: ['Admin', 'SuperAdmin']\n}, {\n  title: 'Manage Field',\n  icon: 'edit_note',\n  requiredRole: []\n}, {\n  title: 'View Employee',\n  icon: 'people',\n  requiredRole: ['Admin', 'SuperAdmin']\n}, {\n  title: 'Evaluations',\n  icon: 'assignment',\n  requiredRole: []\n}, {\n  title: 'Evaluation Items',\n  icon: 'assignment',\n  requiredRole: []\n}];\nexport class SidebarComponent {\n  constructor(store, cookieService) {\n    this.store = store;\n    this.cookieService = cookieService;\n    this.selectedItem = new EventEmitter();\n    this.menuItems = [];\n    this.type$ = this.store.select('app');\n  }\n  ngOnInit() {\n    this.menuItems = ROUTES;\n  }\n  IsMenuItemVisible(menuItem) {\n    const types = this.cookieService.get('userType');\n    const roles = Object.keys(JSON.parse(types));\n    const hasRequiredRoles = menuItem.requiredRole.filter(role => roles.includes(role)).length > 0;\n    if (hasRequiredRoles || menuItem.requiredRole.length === 0) return true;\n    return false;\n  }\n  CaptureEvent(event) {\n    const target = event.target;\n    this.cookieService.set('currentPage', target.innerText);\n  }\n  static #_ = this.ɵfac = function SidebarComponent_Factory(t) {\n    return new (t || SidebarComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.CookieService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SidebarComponent,\n    selectors: [[\"app-sidebar\"]],\n    outputs: {\n      selectedItem: \"selectedItem\"\n    },\n    decls: 8,\n    vars: 1,\n    consts: [[1, \"logo\"], [1, \"simple-text\"], [1, \"logo-img\"], [\"src\", \"\"], [1, \"sidebar-wrapper\"], [1, \"nav\"], [\"routerLinkActive\", \"active\", \"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [\"routerLinkActive\", \"active\", 1, \"nav-item\"], [\"class\", \"nav-link\", 3, \"click\", 4, \"ngIf\"], [1, \"nav-link\", 3, \"click\"], [1, \"material-icons\"]],\n    template: function SidebarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1)(2, \"div\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(4, \" Retro Onboarding \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"ul\", 5);\n        i0.ɵɵtemplate(7, SidebarComponent_li_7_Template, 2, 1, \"li\", 6);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.menuItems);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.RouterLinkActive],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵlistener","SidebarComponent_li_7_a_1_Template_a_click_0_listener","$event","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","CaptureEvent","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","menuItem_r1","icon","title","ɵɵtemplate","SidebarComponent_li_7_a_1_Template","ɵɵproperty","ctx_r0","IsMenuItemVisible","ROUTES","requiredRole","SidebarComponent","constructor","store","cookieService","selectedItem","menuItems","type$","select","ngOnInit","menuItem","types","get","roles","Object","keys","JSON","parse","hasRequiredRoles","filter","role","includes","length","event","target","set","innerText","_","ɵɵdirectiveInject","i1","Store","i2","CookieService","_2","selectors","outputs","decls","vars","consts","template","SidebarComponent_Template","rf","ctx","ɵɵelement","SidebarComponent_li_7_Template"],"sources":["C:\\Users\\HP\\Desktop\\GOP\\RGO-Client\\Frontend\\RGO-Frontend\\src\\app\\components\\sidebar\\sidebar.component.ts","C:\\Users\\HP\\Desktop\\GOP\\RGO-Client\\Frontend\\RGO-Frontend\\src\\app\\components\\sidebar\\sidebar.component.html"],"sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { Token } from 'src/app/models/token.interface';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\ninterface RouteInfo {\r\n  title: string;\r\n  icon: string;\r\n  requiredRole: string[];\r\n}\r\n\r\nexport const ROUTES: RouteInfo[] = [\r\n\r\n    { title: 'Dashboard',  icon: 'dashboard', requiredRole: [ ] },\r\n    { title: 'Employee Manager', icon: 'people', requiredRole: [ 'Admin', 'SuperAdmin' ] },\r\n    { title: 'Charts', icon: 'analytics', requiredRole: [ ] },\r\n    { title: 'Role Manager', icon: 'event_seat', requiredRole: [ 'Admin', 'SuperAdmin' ] },\r\n    { title: 'Manage Field', icon: 'edit_note', requiredRole: [ ]},\r\n    { title: 'View Employee', icon: 'people', requiredRole: [ 'Admin', 'SuperAdmin' ]},\r\n    { title: 'Evaluations', icon: 'assignment', requiredRole: [ ] },\r\n    { title: 'Evaluation Items', icon: 'assignment', requiredRole: [ ] },\r\n];\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  @Output() selectedItem = new EventEmitter<{ selectedPage: string }>();\r\n\r\n  menuItems: RouteInfo[] = [];\r\n  type$: Observable<Token> = this.store.select('app');\r\n\r\n  constructor(\r\n    private store: Store<{ app: Token }>,\r\n    private cookieService: CookieService) { }\r\n\r\n  ngOnInit() {\r\n    this.menuItems = ROUTES;\r\n  }\r\n\r\n  IsMenuItemVisible(menuItem: RouteInfo): boolean {\r\n    const types: string = this.cookieService.get('userType');\r\n    const roles: string[] = Object.keys(JSON.parse(types));\r\n\r\n   const hasRequiredRoles : boolean = menuItem.requiredRole\r\n   .filter((role: string) => roles.includes(role))\r\n   .length > 0;\r\n\r\n   if (hasRequiredRoles || menuItem.requiredRole.length === 0) return true;\r\n\r\n   return false;\r\n  }\r\n\r\n  CaptureEvent(event: any) {\r\n    const target = event.target as HTMLAnchorElement;\r\n    this.cookieService.set('currentPage', target.innerText);\r\n  }\r\n}\r\n","<div class=\"logo\">\r\n    <a class=\"simple-text\">\r\n        <div class=\"logo-img\">\r\n            <img src=\"\"/>\r\n        </div>\r\n        Retro Onboarding\r\n    </a>\r\n</div>\r\n<div class=\"sidebar-wrapper\">\r\n    <ul class=\"nav\">\r\n        <li routerLinkActive=\"active\" *ngFor=\"let menuItem of menuItems\" class=\"nav-item\">\r\n            <a class=\"nav-link\" (click)=\"CaptureEvent($event)\" *ngIf=\"IsMenuItemVisible(menuItem)\">\r\n                <i class=\"material-icons\">{{menuItem.icon}}</i>\r\n                <p>{{menuItem.title}}</p>\r\n            </a>\r\n        </li>\r\n    </ul>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}