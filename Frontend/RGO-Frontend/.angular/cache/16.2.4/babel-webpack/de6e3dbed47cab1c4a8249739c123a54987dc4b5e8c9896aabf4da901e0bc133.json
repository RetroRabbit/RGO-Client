{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/HP/Desktop/GOP/RGO-Client/Frontend/RGO-Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom, take, EMPTY, catchError, map } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { API } from '../models/constants/urls.constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/auth0-angular\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@ngrx/store\";\nexport class AuthService {\n  constructor(auth, client, store) {\n    this.auth = auth;\n    this.client = client;\n    this.store = store;\n  }\n  isAuthenticated() {\n    return this.auth.isAuthenticated$.pipe(take(1));\n  }\n  login(employeeEmail) {\n    let header = new HttpHeaders();\n    return this.client.post(`${API.HttpsBaseURL}/auth/login?email=${encodeURIComponent(employeeEmail ?? \"\")}`, \"\", {\n      headers: header,\n      responseType: 'text'\n    }).pipe(map(type => type), catchError(err => {\n      if (err.status == 404) {\n        window.alert(\"Contact admin to create your account\");\n      }\n      return EMPTY;\n    }));\n  }\n  FetchRoles(employeeEmail) {\n    let header = new HttpHeaders();\n    header.append('Content-Type', 'application/json');\n    return this.client.get(`${API.HttpsBaseURL}/auth/roles?email=${encodeURIComponent(employeeEmail ?? \"\")}`, {\n      headers: header,\n      responseType: 'text'\n    }).pipe(map(type => type), catchError(err => {\n      if (err.status == 404) {\n        window.alert(\"Contact admin to create your account\");\n      }\n      return EMPTY;\n    }));\n  }\n  getToken() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return yield firstValueFrom(_this.store.select('app'));\n    })();\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.Store));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["firstValueFrom","take","EMPTY","catchError","map","HttpHeaders","API","AuthService","constructor","auth","client","store","isAuthenticated","isAuthenticated$","pipe","login","employeeEmail","header","post","HttpsBaseURL","encodeURIComponent","headers","responseType","type","err","status","window","alert","FetchRoles","append","get","getToken","_this","_asyncToGenerator","select","_","i0","ɵɵinject","i1","i2","HttpClient","i3","Store","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\HP\\Desktop\\GOP\\RGO-Client\\Frontend\\RGO-Frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport * as Auth0 from '@auth0/auth0-angular';\r\nimport { Observable, firstValueFrom, take, EMPTY, catchError, map  } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { API } from '../models/constants/urls.constants';\r\nimport { Store } from '@ngrx/store';\r\nimport { Token } from '../models/token.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(\r\n    private auth: Auth0.AuthService,\r\n    private client: HttpClient,\r\n    private store: Store<{app : Token}>) { }\r\n\r\n  isAuthenticated(): Observable<boolean>{\r\n    return this.auth.isAuthenticated$.pipe(take(1))\r\n  }\r\n\r\n  login(employeeEmail: string|undefined): Observable<string>{\r\n    let header: HttpHeaders = new HttpHeaders();\r\n    return this.client\r\n    .post(\r\n      `${API.HttpsBaseURL}/auth/login?email=${encodeURIComponent(employeeEmail??\"\")}`,\r\n      \"\",\r\n      {headers: header, responseType: 'text'})\r\n    .pipe(\r\n      map(type => type),\r\n      catchError(err => {\r\n        if (err.status == 404) {\r\n          window.alert(\"Contact admin to create your account\")\r\n        }\r\n        return EMPTY\r\n      })\r\n    );\r\n  }\r\n\r\n  FetchRoles(employeeEmail: string | undefined): Observable<string>{\r\n    let header: HttpHeaders = new HttpHeaders() \r\n    header.append('Content-Type','application/json')\r\n    return this.client\r\n    .get(\r\n      `${API.HttpsBaseURL}/auth/roles?email=${encodeURIComponent(employeeEmail??\"\")}`,\r\n      {headers: header, responseType: 'text'})\r\n    .pipe(\r\n      map(type => type),\r\n      catchError(err => {\r\n        if (err.status == 404) {\r\n          window.alert(\"Contact admin to create your account\")\r\n        }\r\n        return EMPTY\r\n      })\r\n    );\r\n  }\r\n\r\n  async getToken(){\r\n    return await firstValueFrom(this.store.select('app'))\r\n  }\r\n}\r\n"],"mappings":";AAEA,SAAqBA,cAAc,EAAEC,IAAI,EAAEC,KAAK,EAAEC,UAAU,EAAEC,GAAG,QAAS,MAAM;AAChF,SAAqBC,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,GAAG,QAAQ,oCAAoC;;;;;AAOxD,OAAM,MAAOC,WAAW;EACtBC,YACUC,IAAuB,EACvBC,MAAkB,EAClBC,KAA2B;IAF3B,KAAAF,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;EAA0B;EAEzCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACH,IAAI,CAACI,gBAAgB,CAACC,IAAI,CAACb,IAAI,CAAC,CAAC,CAAC,CAAC;EACjD;EAEAc,KAAKA,CAACC,aAA+B;IACnC,IAAIC,MAAM,GAAgB,IAAIZ,WAAW,EAAE;IAC3C,OAAO,IAAI,CAACK,MAAM,CACjBQ,IAAI,CACH,GAAGZ,GAAG,CAACa,YAAY,qBAAqBC,kBAAkB,CAACJ,aAAa,IAAE,EAAE,CAAC,EAAE,EAC/E,EAAE,EACF;MAACK,OAAO,EAAEJ,MAAM;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC,CACzCR,IAAI,CACHV,GAAG,CAACmB,IAAI,IAAIA,IAAI,CAAC,EACjBpB,UAAU,CAACqB,GAAG,IAAG;MACf,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrBC,MAAM,CAACC,KAAK,CAAC,sCAAsC,CAAC;;MAEtD,OAAOzB,KAAK;IACd,CAAC,CAAC,CACH;EACH;EAEA0B,UAAUA,CAACZ,aAAiC;IAC1C,IAAIC,MAAM,GAAgB,IAAIZ,WAAW,EAAE;IAC3CY,MAAM,CAACY,MAAM,CAAC,cAAc,EAAC,kBAAkB,CAAC;IAChD,OAAO,IAAI,CAACnB,MAAM,CACjBoB,GAAG,CACF,GAAGxB,GAAG,CAACa,YAAY,qBAAqBC,kBAAkB,CAACJ,aAAa,IAAE,EAAE,CAAC,EAAE,EAC/E;MAACK,OAAO,EAAEJ,MAAM;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC,CACzCR,IAAI,CACHV,GAAG,CAACmB,IAAI,IAAIA,IAAI,CAAC,EACjBpB,UAAU,CAACqB,GAAG,IAAG;MACf,IAAIA,GAAG,CAACC,MAAM,IAAI,GAAG,EAAE;QACrBC,MAAM,CAACC,KAAK,CAAC,sCAAsC,CAAC;;MAEtD,OAAOzB,KAAK;IACd,CAAC,CAAC,CACH;EACH;EAEM6B,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACZ,aAAajC,cAAc,CAACgC,KAAI,CAACrB,KAAK,CAACuB,MAAM,CAAC,KAAK,CAAC,CAAC;IAAA;EACvD;EAAC,QAAAC,CAAA,G;qBAhDU5B,WAAW,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAA/B,WAAA,GAAA6B,EAAA,CAAAC,QAAA,CAAAE,EAAA,CAAAC,UAAA,GAAAJ,EAAA,CAAAC,QAAA,CAAAI,EAAA,CAAAC,KAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXpC,WAAW;IAAAqC,OAAA,EAAXrC,WAAW,CAAAsC,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}