{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, ContentChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CheckIcon } from 'primeng/icons/check';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nfunction TriStateCheckbox_ng_container_5_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.checkboxTrueIcon);\n  }\n}\nfunction TriStateCheckbox_ng_container_5_ng_container_2_CheckIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"CheckIcon\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-checkbox-icon\");\n  }\n}\nfunction TriStateCheckbox_ng_container_5_ng_container_2_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction TriStateCheckbox_ng_container_5_ng_container_2_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TriStateCheckbox_ng_container_5_ng_container_2_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TriStateCheckbox_ng_container_5_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, TriStateCheckbox_ng_container_5_ng_container_2_span_2_1_Template, 1, 0, null, 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.checkIconTemplate);\n  }\n}\nfunction TriStateCheckbox_ng_container_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TriStateCheckbox_ng_container_5_ng_container_2_CheckIcon_1_Template, 1, 1, \"CheckIcon\", 9);\n    i0.ɵɵtemplate(2, TriStateCheckbox_ng_container_5_ng_container_2_span_2_Template, 2, 1, \"span\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.checkIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.checkIconTemplate);\n  }\n}\nfunction TriStateCheckbox_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TriStateCheckbox_ng_container_5_span_1_Template, 1, 1, \"span\", 7);\n    i0.ɵɵtemplate(2, TriStateCheckbox_ng_container_5_ng_container_2_Template, 3, 2, \"ng-container\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.checkboxTrueIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.checkboxTrueIcon);\n  }\n}\nfunction TriStateCheckbox_ng_container_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r10.checkboxFalseIcon);\n  }\n}\nfunction TriStateCheckbox_ng_container_6_ng_container_2_TimesIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"TimesIcon\", 11);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-checkbox-icon\");\n  }\n}\nfunction TriStateCheckbox_ng_container_6_ng_container_2_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction TriStateCheckbox_ng_container_6_ng_container_2_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TriStateCheckbox_ng_container_6_ng_container_2_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TriStateCheckbox_ng_container_6_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtemplate(1, TriStateCheckbox_ng_container_6_ng_container_2_span_2_1_Template, 1, 0, null, 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r13.uncheckIconTemplate);\n  }\n}\nfunction TriStateCheckbox_ng_container_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TriStateCheckbox_ng_container_6_ng_container_2_TimesIcon_1_Template, 1, 1, \"TimesIcon\", 9);\n    i0.ɵɵtemplate(2, TriStateCheckbox_ng_container_6_ng_container_2_span_2_Template, 2, 1, \"span\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r11.uncheckIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.uncheckIconTemplate);\n  }\n}\nfunction TriStateCheckbox_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TriStateCheckbox_ng_container_6_span_1_Template, 1, 1, \"span\", 7);\n    i0.ɵɵtemplate(2, TriStateCheckbox_ng_container_6_ng_container_2_Template, 3, 2, \"ng-container\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.checkboxFalseIcon);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.checkboxFalseIcon);\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"p-checkbox-label-active\": a0,\n    \"p-disabled\": a1,\n    \"p-checkbox-label-focus\": a2\n  };\n};\nfunction TriStateCheckbox_label_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"label\", 14);\n    i0.ɵɵlistener(\"click\", function TriStateCheckbox_label_7_Template_label_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(3);\n      return i0.ɵɵresetView(ctx_r16.onClick($event, _r0));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(3, _c0, ctx_r3.value != null, ctx_r3.disabled, ctx_r3.focused));\n    i0.ɵɵattribute(\"for\", ctx_r3.inputId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r3.label);\n  }\n}\nconst _c1 = function (a1, a2) {\n  return {\n    \"p-checkbox p-component\": true,\n    \"p-checkbox-disabled\": a1,\n    \"p-checkbox-focused\": a2\n  };\n};\nconst _c2 = function (a0, a1, a2) {\n  return {\n    \"p-highlight\": a0,\n    \"p-disabled\": a1,\n    \"p-focus\": a2\n  };\n};\nconst TRISTATECHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TriStateCheckbox),\n  multi: true\n};\n/**\n * TriStateCheckbox is used to select either 'true', 'false' or 'null' as the value.\n * @group Components\n */\nlet TriStateCheckbox = /*#__PURE__*/(() => {\n  class TriStateCheckbox {\n    cd;\n    constructor(cd) {\n      this.cd = cd;\n    }\n    /**\n     * When present, it specifies that the element should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Name of the component.\n     * @group Props\n     */\n    name;\n    /**\n     * Establishes relationships between the component and label(s) where its value should be one or more element IDs.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex;\n    /**\n     * Identifier of the focus input to match a label defined for the component.\n     * @group Props\n     */\n    inputId;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Label of the checkbox.\n     * @group Props\n     */\n    label;\n    /**\n     * When present, it specifies that the component cannot be edited.\n     * @group Props\n     */\n    readonly;\n    /**\n     * Specifies the icon for checkbox true value.\n     * @group Props\n     */\n    checkboxTrueIcon;\n    /**\n     * Specifies the icon for checkbox false value.\n     * @group Props\n     */\n    checkboxFalseIcon;\n    /**\n     * Callback to invoke on value change.\n     * @param {TriStateCheckboxChangeEvent} event - Custom change event.\n     * @group Emits\n     */\n    onChange = new EventEmitter();\n    templates;\n    checkIconTemplate;\n    uncheckIconTemplate;\n    focused;\n    value;\n    onModelChange = () => {};\n    onModelTouched = () => {};\n    onClick(event, input) {\n      if (!this.disabled && !this.readonly) {\n        this.toggle(event);\n        this.focused = true;\n        input.focus();\n      }\n    }\n    onKeydown(event) {\n      if (event.keyCode == 32) {\n        event.preventDefault();\n      }\n    }\n    onKeyup(event) {\n      if (event.keyCode == 32 && !this.readonly) {\n        this.toggle(event);\n        event.preventDefault();\n      }\n    }\n    toggle(event) {\n      if (this.value == null || this.value == undefined) this.value = true;else if (this.value == true) this.value = false;else if (this.value == false) this.value = null;\n      this.onModelChange(this.value);\n      this.onChange.emit({\n        originalEvent: event,\n        value: this.value\n      });\n    }\n    ngAfterContentInit() {\n      this.templates.forEach(item => {\n        switch (item.getType()) {\n          case 'checkicon':\n            this.checkIconTemplate = item.template;\n            break;\n          case 'uncheckicon':\n            this.uncheckIconTemplate = item.template;\n            break;\n        }\n      });\n    }\n    onFocus() {\n      this.focused = true;\n    }\n    onBlur() {\n      this.focused = false;\n      this.onModelTouched();\n    }\n    registerOnChange(fn) {\n      this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onModelTouched = fn;\n    }\n    writeValue(value) {\n      this.value = value;\n      this.cd.markForCheck();\n    }\n    setDisabledState(disabled) {\n      this.disabled = disabled;\n      this.cd.markForCheck();\n    }\n    static ɵfac = function TriStateCheckbox_Factory(t) {\n      return new (t || TriStateCheckbox)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TriStateCheckbox,\n      selectors: [[\"p-triStateCheckbox\"]],\n      contentQueries: function TriStateCheckbox_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      hostAttrs: [1, \"p-element\"],\n      inputs: {\n        disabled: \"disabled\",\n        name: \"name\",\n        ariaLabelledBy: \"ariaLabelledBy\",\n        tabindex: \"tabindex\",\n        inputId: \"inputId\",\n        style: \"style\",\n        styleClass: \"styleClass\",\n        label: \"label\",\n        readonly: \"readonly\",\n        checkboxTrueIcon: \"checkboxTrueIcon\",\n        checkboxFalseIcon: \"checkboxFalseIcon\"\n      },\n      outputs: {\n        onChange: \"onChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([TRISTATECHECKBOX_VALUE_ACCESSOR])],\n      decls: 8,\n      vars: 22,\n      consts: [[3, \"ngStyle\", \"ngClass\"], [1, \"p-hidden-accessible\"], [\"type\", \"text\", \"inputmode\", \"none\", 3, \"name\", \"readonly\", \"disabled\", \"keyup\", \"keydown\", \"focus\", \"blur\"], [\"input\", \"\"], [\"role\", \"checkbox\", 1, \"p-checkbox-box\", 3, \"ngClass\", \"click\"], [4, \"ngIf\"], [\"class\", \"p-checkbox-label\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-checkbox-icon\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"p-checkbox-icon\", 3, \"ngClass\"], [3, \"styleClass\", 4, \"ngIf\"], [\"class\", \"p-checkbox-icon\", 4, \"ngIf\"], [3, \"styleClass\"], [1, \"p-checkbox-icon\"], [4, \"ngTemplateOutlet\"], [1, \"p-checkbox-label\", 3, \"ngClass\", \"click\"]],\n      template: function TriStateCheckbox_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r18 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"input\", 2, 3);\n          i0.ɵɵlistener(\"keyup\", function TriStateCheckbox_Template_input_keyup_2_listener($event) {\n            return ctx.onKeyup($event);\n          })(\"keydown\", function TriStateCheckbox_Template_input_keydown_2_listener($event) {\n            return ctx.onKeydown($event);\n          })(\"focus\", function TriStateCheckbox_Template_input_focus_2_listener() {\n            return ctx.onFocus();\n          })(\"blur\", function TriStateCheckbox_Template_input_blur_2_listener() {\n            return ctx.onBlur();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 4);\n          i0.ɵɵlistener(\"click\", function TriStateCheckbox_Template_div_click_4_listener($event) {\n            i0.ɵɵrestoreView(_r18);\n            const _r0 = i0.ɵɵreference(3);\n            return i0.ɵɵresetView(ctx.onClick($event, _r0));\n          });\n          i0.ɵɵtemplate(5, TriStateCheckbox_ng_container_5_Template, 3, 2, \"ng-container\", 5);\n          i0.ɵɵtemplate(6, TriStateCheckbox_ng_container_6_Template, 3, 2, \"ng-container\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(7, TriStateCheckbox_label_7_Template, 2, 7, \"label\", 6);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.styleClass);\n          i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", i0.ɵɵpureFunction2(15, _c1, ctx.disabled, ctx.focused));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"name\", ctx.name)(\"readonly\", ctx.readonly)(\"disabled\", ctx.disabled);\n          i0.ɵɵattribute(\"id\", ctx.inputId)(\"tabindex\", ctx.tabindex)(\"aria-labelledby\", ctx.ariaLabelledBy);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(18, _c2, ctx.value != null, ctx.disabled, ctx.focused));\n          i0.ɵɵattribute(\"aria-checked\", ctx.value === true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.value === true);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.value === false);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.label);\n        }\n      },\n      dependencies: function () {\n        return [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, CheckIcon, TimesIcon];\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return TriStateCheckbox;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TriStateCheckboxModule = /*#__PURE__*/(() => {\n  class TriStateCheckboxModule {\n    static ɵfac = function TriStateCheckboxModule_Factory(t) {\n      return new (t || TriStateCheckboxModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TriStateCheckboxModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, SharedModule, CheckIcon, TimesIcon, SharedModule]\n    });\n  }\n  return TriStateCheckboxModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TRISTATECHECKBOX_VALUE_ACCESSOR, TriStateCheckbox, TriStateCheckboxModule };\n//# sourceMappingURL=primeng-tristatecheckbox.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}