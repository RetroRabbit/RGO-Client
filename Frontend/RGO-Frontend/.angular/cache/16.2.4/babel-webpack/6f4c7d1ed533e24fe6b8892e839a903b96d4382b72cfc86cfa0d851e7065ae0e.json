{"ast":null,"code":"import { ROUTES } from '../sidebar/sidebar.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@auth0/auth0-angular\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-cookie-service\";\nexport let HeaderComponent = /*#__PURE__*/(() => {\n  class HeaderComponent {\n    constructor(auth, location, element, router, cookieService) {\n      this.auth = auth;\n      this.element = element;\n      this.router = router;\n      this.cookieService = cookieService;\n      this.currentTime = new Date();\n      this.mobile_menu_visible = 0;\n      this.location = location;\n      this.sidebarVisible = false;\n    }\n    ngOnInit() {\n      this.listTitles = ROUTES.filter(listTitle => listTitle);\n      const navbar = this.element.nativeElement;\n      this.toggleButton = navbar.getElementsByClassName('navbar-toggler')[0];\n      this.router.events.subscribe(() => {\n        this.sidebarClose();\n        this.$layer = document.getElementsByClassName('close-layer')[0];\n        if (this.$layer) {\n          this.$layer.remove();\n          this.mobile_menu_visible = 0;\n        }\n      });\n    }\n    ngOnDestroy() {\n      this.cookieService.deleteAll();\n    }\n    Logout() {\n      this.auth.logout({\n        logoutParams: {\n          returnTo: document.location.origin\n        }\n      });\n    }\n    sidebarOpen() {\n      const toggleButton = this.toggleButton;\n      const body = document.getElementsByTagName('body')[0];\n      setTimeout(function () {\n        toggleButton.classList.add('toggled');\n      }, 500);\n      body.classList.add('nav-open');\n      this.sidebarVisible = true;\n    }\n    sidebarClose() {\n      const body = document.getElementsByTagName('body')[0];\n      this.toggleButton.classList.remove('toggled');\n      this.sidebarVisible = false;\n      body.classList.remove('nav-open');\n    }\n    sidebarToggle() {\n      var $toggle = document.getElementsByClassName('navbar-toggler')[0];\n      if (this.sidebarVisible === false) {\n        this.sidebarOpen();\n      } else {\n        this.sidebarClose();\n      }\n      const body = document.getElementsByTagName('body')[0];\n      if (this.mobile_menu_visible == 1) {\n        // $('html').removeClass('nav-open');\n        body.classList.remove('nav-open');\n        if (this.$layer) {\n          this.$layer.remove();\n        }\n        setTimeout(function () {\n          $toggle.classList.remove('toggled');\n        }, 400);\n        this.mobile_menu_visible = 0;\n      } else {\n        setTimeout(function () {\n          $toggle.classList.add('toggled');\n        }, 430);\n        var $layer = document.createElement('div');\n        $layer.setAttribute('class', 'close-layer');\n        if (body.querySelectorAll('.main-panel')) {\n          document.getElementsByClassName('main-panel')[0].appendChild($layer);\n        } else if (body.classList.contains('off-canvas-sidebar')) {\n          document.getElementsByClassName('wrapper-full-page')[0].appendChild($layer);\n        }\n        setTimeout(function () {\n          $layer.classList.add('visible');\n        }, 100);\n        $layer.onclick = () => {\n          body.classList.remove('nav-open');\n          this.mobile_menu_visible = 0;\n          $layer.classList.remove('visible');\n          setTimeout(function () {\n            $layer.remove();\n            $toggle.classList.remove('toggled');\n          }, 400);\n        };\n        body.classList.add('nav-open');\n        this.mobile_menu_visible = 1;\n      }\n    }\n    static #_ = this.ɵfac = function HeaderComponent_Factory(t) {\n      return new (t || HeaderComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Location), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.CookieService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HeaderComponent,\n      selectors: [[\"app-header\"]],\n      decls: 17,\n      vars: 0,\n      consts: [[\"id\", \"navbarBlur\", \"data-scroll\", \"true\", 1, \"navbar\", \"navbar-main\", \"navbar-expand-lg\", \"px-0\", \"mx-4\", \"border-radius-xl\", \"shadow-none\"], [1, \"container-fluid\", \"py-1\", \"px-3\"], [1, \"font-weight-bolder\", \"mb-0\"], [\"id\", \"navbar\", 1, \"collapse\", \"navbar-collapse\", \"mt-sm-0\", \"mt-2\", \"me-md-0\", \"me-sm-4\"], [1, \"ms-md-auto\", \"pe-md-3\", \"d-flex\", \"align-items-center\"], [1, \"input-group\", \"input-group-outline\"], [1, \"navbar-nav\", \"justify-content-end\"], [1, \"nav-item\", \"d-flex\", \"align-items-center\"], [\"type\", \"button\", \"mat-raised-button\", \"\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"mat-raised-button\", \"\", \"type\", \"button\", 1, \"navbar-toggler\", 3, \"click\"], [1, \"sr-only\"], [1, \"navbar-toggler-icon\", \"icon-bar\"]],\n      template: function HeaderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"h6\", 2);\n          i0.ɵɵtext(3, \"Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4);\n          i0.ɵɵelement(6, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"ul\", 6)(8, \"li\", 7)(9, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function HeaderComponent_Template_button_click_9_listener() {\n            return ctx.Logout();\n          });\n          i0.ɵɵtext(10, \" Logout \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(11, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function HeaderComponent_Template_button_click_11_listener() {\n            return ctx.sidebarToggle();\n          });\n          i0.ɵɵelementStart(12, \"span\", 10);\n          i0.ɵɵtext(13, \"Toggle navigation\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"span\", 11)(15, \"span\", 11)(16, \"span\", 11);\n          i0.ɵɵelementEnd()()();\n        }\n      }\n    });\n  }\n  return HeaderComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}