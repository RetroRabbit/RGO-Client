{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, Input, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction NgToastComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function NgToastComponent_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.closeToast());\n    });\n    i0.ɵɵtext(1, \"\\xD7\");\n    i0.ɵɵelementEnd();\n  }\n}\nvar Position = /*#__PURE__*/function (Position) {\n  Position[\"topRight\"] = \"tr\";\n  Position[\"topLeft\"] = \"tl\";\n  Position[\"topCenter\"] = \"tc\";\n  Position[\"bottomRight\"] = \"br\";\n  Position[\"bottomLeft\"] = \"bl\";\n  Position[\"botomCenter\"] = \"bc\";\n  return Position;\n}(Position || {});\nvar Message = /*#__PURE__*/function (Message) {\n  Message[\"error\"] = \"error\";\n  Message[\"success\"] = \"success\";\n  Message[\"warning\"] = \"warning\";\n  Message[\"info\"] = \"info\";\n  return Message;\n}(Message || {});\nlet NgToastService = /*#__PURE__*/(() => {\n  class NgToastService {\n    constructor() {\n      this.toastDetails$ = new Subject();\n    }\n    getToastDetails() {\n      return this.toastDetails$.asObservable();\n    }\n    success(message) {\n      this.toastDetails$.next({\n        type: Message.success,\n        detail: message.detail,\n        position: message.position,\n        summary: message.summary,\n        duration: message.duration,\n        sticky: message.sticky\n      });\n    }\n    error(message) {\n      this.toastDetails$.next({\n        type: Message.error,\n        detail: message.detail,\n        position: message.position,\n        summary: message.summary,\n        duration: message.duration,\n        sticky: message.sticky\n      });\n    }\n    info(message) {\n      this.toastDetails$.next({\n        type: Message.info,\n        detail: message.detail,\n        position: message.position,\n        summary: message.summary,\n        duration: message.duration,\n        sticky: message.sticky\n      });\n    }\n    warning(message) {\n      this.toastDetails$.next({\n        type: Message.warning,\n        detail: message.detail,\n        summary: message.summary,\n        position: message.position,\n        duration: message.duration,\n        sticky: message.sticky\n      });\n    }\n    static #_ = this.ɵfac = function NgToastService_Factory(t) {\n      return new (t || NgToastService)();\n    };\n    static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: NgToastService,\n      factory: NgToastService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NgToastService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgToastComponent = /*#__PURE__*/(() => {\n  class NgToastComponent {\n    constructor(toastService) {\n      this.toastService = toastService;\n      this.show = false;\n      this.style = {};\n    }\n    ngOnInit() {\n      this.toastService.getToastDetails().subscribe(val => {\n        this.show = true;\n        clearTimeout(this.timeoutRef);\n        this.toastDetails = val;\n        if (this.toastDetails.duration) {\n          this.timeoutRef = setTimeout(() => {\n            this.show = false;\n          }, this.toastDetails.duration);\n        }\n        if (this.toastDetails.sticky) {\n          // for sticky\n          clearTimeout(this.timeoutRef);\n          this.show = true;\n        }\n        if (!this.toastDetails.duration && !this.toastDetails.sticky) {\n          //no duration and sticky is true\n          this.timeoutRef = setTimeout(() => {\n            this.show = false;\n          }, 4000);\n        }\n      });\n    }\n    closeToast() {\n      clearTimeout(this.timeoutRef);\n      this.show = false;\n    }\n    loadPosition() {\n      let postionClass = \"\";\n      if (this.toastDetails?.position !== undefined) {\n        switch (this.toastDetails.position) {\n          case \"topRight\":\n            postionClass = 'toast-top-right';\n            break;\n          case \"topLeft\":\n            postionClass = 'toast-top-left';\n            break;\n          case \"bottomRight\":\n            postionClass = 'toast-bottom-right';\n            break;\n          case \"bottomLeft\":\n            postionClass = 'toast-bottom-left';\n            break;\n          case \"topCenter\":\n            postionClass = 'toast-top-center';\n            break;\n          case \"botomCenter\":\n            postionClass = 'toast-bottom-center';\n            break;\n          default:\n            postionClass = \"toast-top-right\";\n        }\n      } else {\n        postionClass = \"toast-top-right\";\n      }\n      return postionClass;\n    }\n    loadMessageType() {\n      let typeClass = \"\";\n      if (this.toastDetails?.type !== undefined) {\n        switch (this.toastDetails.type) {\n          case \"success\":\n            typeClass = Message.success;\n            break;\n          case \"error\":\n            typeClass = Message.error;\n            break;\n          case \"warning\":\n            typeClass = Message.warning;\n            break;\n          case \"info\":\n            typeClass = Message.info;\n            break;\n          default:\n            typeClass = Message.success;\n        }\n      } else {\n        typeClass = Message.success;\n      }\n      return typeClass;\n    }\n    loadIconType() {\n      let iconClass = \"\";\n      if (this.toastDetails?.type !== undefined) {\n        switch (this.toastDetails.type) {\n          case \"success\":\n            iconClass = 'fa-check-circle';\n            break;\n          case \"error\":\n            iconClass = 'fa-times-circle';\n            break;\n          case \"warning\":\n            iconClass = 'fa-exclamation-circle';\n            break;\n          case \"info\":\n            iconClass = 'fa-info-circle';\n            break;\n          default:\n            iconClass = \"fa-check-circle\";\n        }\n      } else {\n        iconClass = \"fa-check-circle\";\n      }\n      return iconClass;\n    }\n    static #_ = this.ɵfac = function NgToastComponent_Factory(t) {\n      return new (t || NgToastComponent)(i0.ɵɵdirectiveInject(NgToastService));\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: NgToastComponent,\n      selectors: [[\"ng-toast\"]],\n      inputs: {\n        style: \"style\"\n      },\n      decls: 10,\n      vars: 9,\n      consts: [[1, \"toast-container\", 3, \"ngClass\"], [1, \"ng-toast\", 3, \"ngStyle\", \"ngClass\"], [1, \"container-1\"], [1, \"fa\", 3, \"ngClass\"], [1, \"container-2\"], [\"id\", \"close\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"close\", 3, \"click\"]],\n      template: function NgToastComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵelement(3, \"i\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 4)(5, \"p\");\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"p\");\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(9, NgToastComponent_button_9_Template, 2, 0, \"button\", 5);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"active\", ctx.show);\n          i0.ɵɵproperty(\"ngClass\", ctx.loadPosition());\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", ctx.loadMessageType());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngClass\", ctx.loadIconType());\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.toastDetails == null ? null : ctx.toastDetails.detail);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.toastDetails == null ? null : ctx.toastDetails.summary);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.show);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgIf, i2.NgStyle],\n      styles: [\"*[_ngcontent-%COMP%]{padding:0;margin:0;box-sizing:border-box;border:none}.show-toast[_ngcontent-%COMP%]{margin:10px;background-color:#101020;color:#fff;padding:20px;border-radius:5px;cursor:pointer}.fa-times-circle[_ngcontent-%COMP%]{color:#ff355b}.fa-check-circle[_ngcontent-%COMP%]{color:#47d764}.fa-exclamation-circle[_ngcontent-%COMP%]{color:#ffc021}.fa-info-circle[_ngcontent-%COMP%]{color:#2f86eb}.container-1[_ngcontent-%COMP%]{margin:7px 0 7px 7px;display:flex}.container-1[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:30px}.container-2[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-left:4px;font-family:roboto,sans-serif}.container-2[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:first-child{display:flex;flex-direction:column;margin-left:5px;font-weight:700;font-size:.9rem;font-family:roboto,sans-serif}.container-2[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:last-child{font-size:14px;color:#656565;font-weight:400;font-family:roboto,sans-serif;margin-left:5px}#close[_ngcontent-%COMP%]{align-self:flex-start;background-color:transparent;font-size:25px;line-height:0;color:#656565;cursor:pointer}.toast-container[_ngcontent-%COMP%]{pointer-events:none;position:fixed;z-index:999999}.toast-top-center[_ngcontent-%COMP%]{top:5%;right:0;width:100%;transform:translateY(-400px);transition:.5s}.toast-top-center.active[_ngcontent-%COMP%]{transform:translate(0);transition:.5s}.toast-bottom-center[_ngcontent-%COMP%]{bottom:5%;right:0;width:100%;transform:translateY(400px);transition:.5s}.toast-bottom-center.active[_ngcontent-%COMP%]{transform:translate(0);transition:.5s}.toast-top-right[_ngcontent-%COMP%]{right:1%;top:5%;transform:translate(400px);transition:.5s}.toast-top-right.active[_ngcontent-%COMP%]{transform:translate(0);transition:.5s}.toast-bottom-right[_ngcontent-%COMP%]{right:1%;bottom:5%;transform:translate(400px);transition:.5s}.toast-bottom-right.active[_ngcontent-%COMP%]{transform:translate(0);transition:.5s}.toast-top-left[_ngcontent-%COMP%]{left:1%;top:5%;transform:translate(-400px);transition:.5s}.toast-top-left.active[_ngcontent-%COMP%]{transform:translate(0);transition:.5s}.toast-bottom-left[_ngcontent-%COMP%]{left:1%;bottom:5%;transform:translate(-400px);transition:.5s}.toast-bottom-left.active[_ngcontent-%COMP%]{transform:translate(0);transition:.5s}.toast-container.toast-top-center[_ngcontent-%COMP%]   .ng-toast[_ngcontent-%COMP%], .toast-container.toast-bottom-center[_ngcontent-%COMP%]   .ng-toast[_ngcontent-%COMP%]{width:350px;margin-left:auto;margin-right:auto}.ng-toast[_ngcontent-%COMP%]{width:350px;height:auto;font-size:1rem;padding:10px;box-shadow:0 10px 20px #4b32320d;border-radius:7px;display:grid;grid-template-columns:1.2fr 6fr .5fr;pointer-events:auto}.ng-toast.error[_ngcontent-%COMP%]{border-left:8px solid #ff355b;background-color:#ffe7e6}.ng-toast.warning[_ngcontent-%COMP%]{border-left:8px solid #ffc021;background-color:#fff2e2}.ng-toast.success[_ngcontent-%COMP%]{border-left:8px solid #47d764;background-color:#e4f8f0}.ng-toast.info[_ngcontent-%COMP%]{border-left:8px solid #2f86eb;background-color:#e9e9ff}\"]\n    });\n  }\n  return NgToastComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet NgToastModule = /*#__PURE__*/(() => {\n  class NgToastModule {\n    static #_ = this.ɵfac = function NgToastModule_Factory(t) {\n      return new (t || NgToastModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: NgToastModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n  return NgToastModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of ng-toast\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgToastComponent, NgToastModule, NgToastService };\n//# sourceMappingURL=ng-angular-popup.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}